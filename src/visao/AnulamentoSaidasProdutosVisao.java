/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

//import controller.ClienteController;
//import controller.PagamentoSaidasProdutosCreditoController;
import controller.TipoProdutoController;
//import controller.SaidasProdutosController;
import dao.ItemSaidaDao;
import dao.StockDao;
import dao.VasilhameDao;
import dao.SaidasProdutosDao;
import entity.TbItemSaidas;
import entity.TbStock;
import entity.TbVasilhame;
import entity.TbSaidasProdutos;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import modelo.ItemSaidasProdutosModelo;
//import modelo.PagamentoSaidasProdutosCreditoModelo;
import modelo.TipoProdutoModelo;
//import modelo.SaidasProdutosModelo;
import util.BDConexao;
import util.JPAEntityMannagerFactoryUtil;
import util.MetodosUtil;
import util.OperacaoSistemaUtil;

/**
 *
 * @author Domingos Dala Vunge
 */
public class AnulamentoSaidasProdutosVisao extends javax.swing.JDialog
{

    private BDConexao conexao;

    private EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
    private SaidasProdutosDao saidasProdutosDao = new SaidasProdutosDao( emf );
    private ItemSaidaDao itemSaidaDao = new ItemSaidaDao( emf );
    private TbSaidasProdutos saidasProdutos;
    private StockDao stockDao = new StockDao( emf );
    private VasilhameDao vasilhameDao = new VasilhameDao( emf );
    private DefaultListModel lista_saidas = new DefaultListModel();
    private TbVasilhame vasilhame;
    private TipoProdutoModelo tipoProdutoModelo;
    private TipoProdutoController tipoProdutoController;
    private Frame parent;
    private int codigo = 0;
    private int codigo_saidasProdutos = 0;
    private boolean eliminar = false;
    //ARMAZEM GERAL 
    private static int id_armzem = 1;
    private OperacaoSistemaUtil osu = new OperacaoSistemaUtil();

    public AnulamentoSaidasProdutosVisao( java.awt.Frame parent, boolean modal, BDConexao conexao )
    {
        //this.parent =  parent1;

        super( parent, modal );

        this.parent = parent;

        this.conexao = conexao;
        initComponents();
        //confLabel();
        setLocationRelativeTo( null );
        jListSaidas.setModel( lista_saidas );
        tipoProdutoModelo = new TipoProdutoModelo();

        tipoProdutoController = new TipoProdutoController( conexao );
        adicionar_saidas();

    }

    public void confLabel()
    {

        lbFactura.setHorizontalAlignment( JLabel.RIGHT );

    }

    private void adicionar_saidas()
    {
        try
        {
            List<TbSaidasProdutos> saidasProdutoses = saidasProdutosDao.buscaTodos();
            lista_saidas.clear();

            for ( int i = 0; i < saidasProdutoses.size(); i++ )
            {
                lista_saidas.addElement(
                        saidasProdutoses.get( i ).getPkSaidasProdutos() );

            }

        }
        catch ( Exception e )
        {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbFactura = new javax.swing.JLabel();
        txtCodigoSaida = new javax.swing.JTextField();
        lbDataVenda = new javax.swing.JLabel();
        dcDataSaida = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_item_saidas = new javax.swing.JTable();
        status_mensagem_primaria = new javax.swing.JLabel();
        status_mensagem_secundaria = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSaidas = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...:::::  KITANDA - ANULAMENTO DE SAIDAS ::::...");
        setIconImage(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/2934_32x32.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.setAlignmentX(0.5F);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/LOGOUT - VERMELHO/Logout 32x32.png"))); // NOI18N
        btnCancelar.setToolTipText("Sair");
        btnCancelar.setAlignmentX(0.5F);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(51, 153, 0))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N

        lbFactura.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbFactura.setText("Nº.Saída");

        txtCodigoSaida.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCodigoSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoSaidaActionPerformed(evt);
            }
        });

        lbDataVenda.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbDataVenda.setText("Data Saida:");

        dcDataSaida.setEnabled(false);
        dcDataSaida.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        table_item_saidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N.º Item", "Cod. Prod/Serv", "Descrição", "Qd"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_item_saidas);

        status_mensagem_primaria.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        status_mensagem_primaria.setForeground(new java.awt.Color(204, 153, 0));
        status_mensagem_primaria.setText("sahdbvhsdva");

        status_mensagem_secundaria.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        status_mensagem_secundaria.setText("...");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cod Saídas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 10))); // NOI18N

        jListSaidas.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jListSaidas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListSaidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListSaidasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListSaidas);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(status_mensagem_secundaria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(status_mensagem_primaria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCodigoSaida)
                                    .addComponent(lbFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(339, 339, 339)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dcDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbDataVenda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(status_mensagem_primaria)
                .addGap(22, 22, 22)
                .addComponent(status_mensagem_secundaria)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbDataVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbFactura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        int opcao = new JOptionPane().showConfirmDialog( null, "Tens a certeza que pretendes eliminar esta factura ? " );

        if ( opcao == JOptionPane.YES_OPTION )
        {
            procedimento_eliminar();

        }
        else
        {
            JOptionPane.showMessageDialog( null, "Factura não eliminada", "AVISO", JOptionPane.WARNING_MESSAGE );
        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtCodigoSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoSaidaActionPerformed
        // TODO add your handling code here:
        busca_factura();
    }//GEN-LAST:event_txtCodigoSaidaActionPerformed

    private int getIdSaida()
    {
        return saidasProdutosDao.getIdSaidasProd( Integer.parseInt( String.valueOf( jListSaidas.getSelectedValue() ) ) );
    }

    private void jListSaidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSaidasMouseClicked
        if ( evt.getClickCount() > 1 )
        {

            try
            {

                txtCodigoSaida.setText( String.valueOf( getIdSaida() ) );
                busca_factura();

            }
            catch ( Exception e )
            {
            }

        }
    }//GEN-LAST:event_jListSaidasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Windows".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoSaidasProdutosVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoSaidasProdutosVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoSaidasProdutosVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoSaidasProdutosVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                AnulamentoSaidasProdutosVisao dialog = new AnulamentoSaidasProdutosVisao( new javax.swing.JFrame(), true, new BDConexao() );
                dialog.addWindowListener( new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing( java.awt.event.WindowEvent e )
                    {
                        System.exit( 0 );
                    }
                } );
                dialog.setVisible( true );
            }
        } );
    }

    public void limpar()
    {

//          txtTotalSaidasProdutos.setText("");
        txtCodigoSaida.setText( "" );

    }

    public boolean campos_invalidos()
    {
        Color backGround = Color.WHITE;
        Color foreGround = Color.BLACK;
        Color caretColor = Color.BLACK;

        return false;
    }

    public String getDataPagamento()
    {
        GregorianCalendar gc = new GregorianCalendar();

        String dataSelecionada = gc.get( GregorianCalendar.YEAR ) + "-"
                + ( gc.get( GregorianCalendar.MONTH ) + 1 ) + "-"
                + gc.get( GregorianCalendar.DATE );
        return dataSelecionada;
    }

    public boolean eliminar_item_produto( int cod_saidasProdutos )
    {

        return conexao.executeUpdate( "DELETE FROM tb_item_saidasProdutos WHERE codigo_saidasProdutos = " + cod_saidasProdutos );
    }

    public boolean eliminar_factura( int cod_saidasProdutos )
    {
        return conexao.executeUpdate( "DELETE FROM tb_saidasProdutos  WHERE codigo = " + cod_saidasProdutos );
    }

//    public void eliminar(){
//                
//             int codigo_saidasProdutos = Integer.parseInt(  txtCodigoSaida.getText() );
//             
//             if(eliminar)
//             {   
//                 try {
//                     
//                     SaidasProdutosModelo saidasProdutosModelo = new SaidasProdutosController(conexao).getSaidasProdutos(codigo_saidasProdutos);
//                    
//                     if(saidasProdutosModelo.getCodigo() == codigo_saidasProdutos &&  saidasProdutosModelo.getPerformance().equals("false") )
//                     {
//                           id_armzem = saidasProdutosModelo.getIdArmazemFK();
//                           actualizar_quantidade(codigo_saidasProdutos);
//                           if( saidasProdutosModelo.getPerformance().equals("false"))
//                           {
//                                if( eliminar_item_produto(codigo_saidasProdutos) )
//                                 {
//                                        if( eliminar_factura(codigo_saidasProdutos) )
//                                        {
//                                               JOptionPane.showMessageDialog(null, "FACTURA ELIMINADA COM SUCESSO!... ");
//                                        }
//                                        else JOptionPane.showMessageDialog(null, "ERRO AO ELIMIAR OS PROSUTOS RELACIONADOS A VENDA ", "DM_SOFT", JOptionPane.ERROR );
//
//                                }else JOptionPane.showMessageDialog(null, "ERRO AO ELIMINAR OS PROSUTOS RELACIONADOS A VENDA ", "DM_SOFT", JOptionPane.ERROR );
//                             }
//
//                     }
//                 } catch (SQLException ex) {
//                     Logger.getLogger(AnulamentoSaidasProdutosVisao.class.getName()).log(Level.SEVERE, null, ex);
//                 }
//
//             }
//    }
//    
//    public void actualizar_quantidade(Integer cod_saidasProdutos){
//    
//        
//             Vector<ItemSaidasProdutosModelo> lista = conexao.getAllItemSaidasProdutosByCodigo(cod_saidasProdutos);
//             ItemSaidasProdutosModelo itemSaidasProdutosModelo;
//          
//                //1 Armazem geral
//             int quantidade = 0;
//             
//             for (int i = 0; i < lista.size(); i++) {
//             
//                itemSaidasProdutosModelo = lista.elementAt(i);
//                quantidade =   BDConexao.getQuantidade_Existente(  itemSaidasProdutosModelo.getCodigo_produto(), id_armzem ) +  itemSaidasProdutosModelo.getQuantidade();                
//                conexao.executeUpdate("UPDATE tb_stock SET quantidade_existente = " + quantidade +" WHERE cod_produto_codigo = " +itemSaidasProdutosModelo.getCodigo_produto()  + " AND cod_armazem = " +id_armzem );
//                
//                if( vasilhameDao.exist_vasilhame( itemSaidasProdutosModelo.getCodigo_produto(), id_armzem ) )
//                {
//                     actualizar_vasilhame(  vasilhameDao.getVasilhameByIdProdutoAndIdArmazem( itemSaidasProdutosModelo.getCodigo_produto() , id_armzem)    , itemSaidasProdutosModelo.getQuantidade() ) ;                 
//                }
//                
//                
//                
//                
//               }
//// 
//    }
//    //CLASSE EVENTO TECLADO 
//    
//     //----------- evento do teclado ---------------------------------------
//    class TratarEventoTeclado implements KeyListener
//    {
//        String prefixo = null;
//
//        public void keyPressed(KeyEvent evt)
//        {
//            
//          SaidasProdutosModelo saidasProdutosModelo = new SaidasProdutosModelo();
//            SaidasProdutosController saidasProdutosController = new SaidasProdutosController(conexao);
//            
//            
//             
//            if (evt.getKeyCode() == KeyEvent.VK_ENTER)
//            {
//                char key = evt.getKeyChar();
//                prefixo = txtCodigoSaida.getText().trim() + key;
//                
//              try {
//                  saidasProdutosModelo = new SaidasProdutosModelo();
//                  System.err.println(prefixo);
//                  
//                  
//                  saidasProdutosModelo = saidasProdutosController.getSaidasProdutos_Reeprimir(    Integer.parseInt(txtCodigoSaida.getText().trim())  );
//              
//                  codigo_saidasProdutos = saidasProdutosModelo.getCodigo();
//                  
//                  txtNomeCliente.setText( new ClienteController(conexao).getCliente(saidasProdutosModelo.getCodigo_cliente() ).getNome()  );
//                  txtTotalSaidasProdutos.setText( String.valueOf(saidasProdutosModelo.getTotal_saidasProdutos() ) );
//                 // txtValorEntregue.setText( String.valueOf( ven  ));
//                  
//                  
//                  if(!saidasProdutosModelo.getDataSaidasProdutos().equals(""))
//                  { 
//                      
//                      String data = String.valueOf(saidasProdutosModelo.getDataSaidasProdutos());
//                      //2012-06-26
//                      int dia = Integer.parseInt(data.substring(8, 10));;
//                      int mes = Integer.parseInt(data.substring(5, 7));;
//                      int ano = Integer.parseInt(data.substring(0, 4));
//                      dcDataSaidasProdutos.setDate(new Date(ano - 1900, mes - 1, dia));
//                      
//                  }
//              } catch (SQLException ex) {
//                   JOptionPane.showMessageDialog(null, "Esta factura nao existe!... Ou ja foi elimnada!...", "DM_SOFT", JOptionPane.WARNING_MESSAGE);
//                    dcDataSaidasProdutos.setDate( new Date(1900, 2, 1) );
//                  eliminar = false;
//                  
//                 Logger.getLogger(AnulamentoSaidasProdutosVisao.class.getName()).log(Level.SEVERE, null, ex);
//                  
//              }catch (Exception e){
//                  eliminar = false;
//                        JOptionPane.showMessageDialog(null, "Esta factura nao existe!... Ou ja foi elimnada!...", "DM_SOFT", JOptionPane.WARNING_MESSAGE);
//              }
//              finally{
//                        eliminar = true;
//              }
//                        
//            }
//        }
//
//        public void keyReleased(KeyEvent evt)
//        {}
//        public void keyTyped(KeyEvent evt)
//        {}
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnEliminar;
    private com.toedter.calendar.JDateChooser dcDataSaida;
    private javax.swing.JList<String> jListSaidas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbDataVenda;
    private javax.swing.JLabel lbFactura;
    public static javax.swing.JLabel status_mensagem_primaria;
    public static javax.swing.JLabel status_mensagem_secundaria;
    private javax.swing.JTable table_item_saidas;
    public static javax.swing.JTextField txtCodigoSaida;
    // End of variables declaration//GEN-END:variables

    private boolean actualizar_vasilhame( TbVasilhame vasilhame, double qtd )
    {

        double qtd_actualizada = vasilhame.getQtdExistente() - qtd;
        vasilhame.setQtdExistente(  qtd_actualizada );
        try
        {
            vasilhameDao.edit( vasilhame );
            return true;
        }
        catch ( Exception e )
        {
            return false;
        }

    }

    private void procedimento_eliminar()
    {

        List<TbItemSaidas> lista = itemSaidaDao.getAllItemSaidasByIdSaidaa( this.saidasProdutos.getPkSaidasProdutos() );
        TbItemSaidas itemSaidas;
        TbStock stock_local;
        int quantidade = 0;
        boolean elimnado = true;

        if ( lista.get( 0 ).getCodigo() != 0 )
        {
            for ( int i = 0; i < lista.size(); i++ )
            {
                itemSaidas = lista.get( i );
                try
                {
                    stock_local = stockDao.get_stock_by_id_produto_and_id_armazem( itemSaidas.getFkProdutos().getCodigo(), this.saidasProdutos.getIdArmazemFK().getCodigo() );
                    if ( stock_local.getCodigo() != 0 )
                    {

                        MetodosUtil.adiciona_quantidade( itemSaidas.getFkProdutos().getCodigo(), itemSaidas.getQuantidade(), this.saidasProdutos.getIdArmazemFK().getCodigo(), conexao );
                    }
                    if ( vasilhameDao.exist_vasilhame( itemSaidas.getFkProdutos().getCodigo(), this.saidasProdutos.getIdArmazemFK().getCodigo() ) )
                    {
                        actualizar_vasilhame( vasilhameDao.getVasilhameByIdProdutoAndIdArmazem( itemSaidas.getFkProdutos().getCodigo(), this.saidasProdutos.getIdArmazemFK().getCodigo() ), itemSaidas.getQuantidade() );
                    }

                }
                catch ( Exception e )
                {
                    elimnado = false;
                    JOptionPane.showMessageDialog( null, "Falha ao eliminar a Saida", "DVML-COMERCIAL,Lda", JOptionPane.ERROR_MESSAGE );
                    break;
                }

            }

        }

        if ( elimnado )
        {

//             MetodosUtil.subtrair_saldo_banco(this.saidasProdutos.getTotalSaidasProdutos(), this.saidasProdutos.getIdBanco().getIdBanco(), conexao );
            //elimina a factua (lembra só altera o status e nada mais mas não elimina por completo)
            saidasProdutosDao.alterar_status_saidasProdutos( this.saidasProdutos.getPkSaidasProdutos(), "true" );
            limpar_dados();
            JOptionPane.showMessageDialog( null, "Saída eliminada com sucesso!", "DVML-COMERCIAL,Lda", JOptionPane.INFORMATION_MESSAGE );
        }

    }

    private void busca_factura()
    {

        try
        {

            this.saidasProdutos = saidasProdutosDao.findTbSaidasProdutos( Integer.parseInt( txtCodigoSaida.getText() ) );

            if ( this.saidasProdutos.getStatusEliminado().equals( "false" ) )
            {
                try
                {

                    dcDataSaida.setDate( this.saidasProdutos.getDataSaida() );
                    preencher_tabela();

                }
                catch ( Exception e )
                {
                    // e.printStackTrace();

                }

            }
            else
            {
                this.saidasProdutos = null;
                limpar_dados();
                JOptionPane.showMessageDialog( null, "Possivelmente esta saida nao existe!... Ou ja foi elimnada!...", "DVML-COMERCIAL, Lda", JOptionPane.WARNING_MESSAGE );
            }

        }
        catch ( Exception e )
        {
            limpar_dados();
            JOptionPane.showMessageDialog( null, "Possivelmente esta saida nao existe!... Ou ja foi elimnada!...", "DVML-COMERCIAL, Lda", JOptionPane.WARNING_MESSAGE );
        }

    }

    private void limpar_dados()
    {

        txtCodigoSaida.setText( "" );
        dcDataSaida.setDate( null );
        esvazia_tabela_iten();
        txtCodigoSaida.requestFocus();

    }

    private void esvazia_tabela_iten()
    {

        DefaultTableModel modelo = ( DefaultTableModel ) table_item_saidas.getModel();
        modelo.setRowCount( 0 );

    }

    private void preencher_tabela()
    {

        DefaultTableModel modelo = ( DefaultTableModel ) table_item_saidas.getModel();
        List<TbItemSaidas> list_iten = itemSaidaDao.getAllItemSaidasByIdSaidaa( this.saidasProdutos.getPkSaidasProdutos() );

        modelo.setRowCount( 0 );
        for ( int i = 0; i < list_iten.size(); i++ )
        {
            TbItemSaidas itemSaidas = list_iten.get( i );
            modelo.addRow( new Object[]
            {
                ( i + 1 ),
                itemSaidas.getFkProdutos().getCodigo(),
                itemSaidas.getFkProdutos().getDesignacao(),
                itemSaidas.getQuantidade()
            } );
        }

    }

}
