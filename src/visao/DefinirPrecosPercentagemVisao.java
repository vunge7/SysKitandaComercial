/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.PrecoDao;
import dao.ProdutoDao;
import dao.UsuarioDao;
import entity.TbPreco;
import entity.TbProduto;
import java.awt.Frame;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.BDConexao;
import util.DVML;
import util.JPAEntityMannagerFactoryUtil;
import util.MetodosUtil;
import util.ProgressBarDemo;

/**
 *
 * @author Domingos Dala Vunge
 */
public class DefinirPrecosPercentagemVisao extends javax.swing.JDialog
{

    private Frame parent;
    private EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
    public ProdutoDao produtoDao = new ProdutoDao( emf );
    private PrecoDao precoDao = new PrecoDao( emf );
    private UsuarioDao usuarioDao = new UsuarioDao( emf );
    public int id_user = 0, TAMANHO = 100;
    public static TbPreco[][] matriz = new TbPreco[4000][2];
    public static Vector<Vector<TbPreco>> vector = new Vector<>();

    private BDConexao conexao;

    public DefinirPrecosPercentagemVisao( java.awt.Frame parent, boolean modal, int id_user, BDConexao conexao )
    {

        super( parent, modal );
        this.conexao = conexao;
        this.parent = parent;
        initComponents();
        setLocationRelativeTo( null );
        this.id_user = id_user;

        //jProgressBar1.setValue(20);
        adicionar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbTipoProduto = new javax.swing.JLabel();
        txtPercentagemRetalho = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        txtPercentagemGrosso = new javax.swing.JTextField();
        lbTipoProduto1 = new javax.swing.JLabel();
        lbTipoProduto2 = new javax.swing.JLabel();
        jp_progress = new util.CustomPanel();
        lb_status = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_categoria = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::::: DVML-DEFINIR PREÃ‡OS POR PERCENTAGEM::::...");
        setIconImage(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(51, 153, 0))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N

        lbTipoProduto.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTipoProduto.setText("Percentagem:");

        txtPercentagemRetalho.setBackground(new java.awt.Color(51, 153, 0));
        txtPercentagemRetalho.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        txtPercentagemRetalho.setForeground(new java.awt.Color(255, 255, 255));
        txtPercentagemRetalho.setCaretColor(new java.awt.Color(255, 255, 255));
        txtPercentagemRetalho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPercentagemRetalhoActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/actualizar_1_32x32.png"))); // NOI18N
        btnSalvar.setAlignmentX(0.5F);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtPercentagemGrosso.setBackground(new java.awt.Color(51, 153, 0));
        txtPercentagemGrosso.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        txtPercentagemGrosso.setForeground(new java.awt.Color(255, 255, 255));
        txtPercentagemGrosso.setCaretColor(new java.awt.Color(255, 255, 255));
        txtPercentagemGrosso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPercentagemGrossoActionPerformed(evt);
            }
        });

        lbTipoProduto1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTipoProduto1.setText("Retalho:");

        lbTipoProduto2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTipoProduto2.setText("Grosso:");

        javax.swing.GroupLayout jp_progressLayout = new javax.swing.GroupLayout(jp_progress);
        jp_progress.setLayout(jp_progressLayout);
        jp_progressLayout.setHorizontalGroup(
            jp_progressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
        );
        jp_progressLayout.setVerticalGroup(
            jp_progressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        lb_status.setBackground(new java.awt.Color(204, 0, 0));
        lb_status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lb_status.setForeground(new java.awt.Color(204, 0, 0));
        lb_status.setText(".");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbTipoProduto1)
                            .addComponent(lbTipoProduto2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPercentagemRetalho)
                            .addComponent(txtPercentagemGrosso, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lb_status, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbTipoProduto))
                .addGap(12, 12, 12)
                .addComponent(jp_progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jp_progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbTipoProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_status, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbTipoProduto1)
                                        .addComponent(txtPercentagemRetalho, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPercentagemGrosso, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbTipoProduto2)))
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28))))
        );

        tabela_categoria.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        tabela_categoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "DesignaÃ§Ã£o", "P.Compra", "P.Venda Retalho", "P.Venda Grosso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_categoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabela_categoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela_categoria);
        if (tabela_categoria.getColumnModel().getColumnCount() > 0) {
            tabela_categoria.getColumnModel().getColumn(0).setMaxWidth(50);
            tabela_categoria.getColumnModel().getColumn(1).setMaxWidth(800);
            tabela_categoria.getColumnModel().getColumn(2).setMaxWidth(300);
            tabela_categoria.getColumnModel().getColumn(3).setMaxWidth(300);
            tabela_categoria.getColumnModel().getColumn(4).setMaxWidth(300);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/SAIR/sair_verde_32x32.png"))); // NOI18N
        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        procedimento_actualizar();
        // actualizar_preco();
        //progress();

        //System.out.println("SOMA DIV: " +DVML.soma_dividir_vector_preco(0, vector.size(), vector));   ;
        //soma_forma_norma();

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void tabela_categoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_categoriaMouseClicked
        // TODO add your handling code here:

        if ( evt.getClickCount() >= 1 )
        {

        }


    }//GEN-LAST:event_tabela_categoriaMouseClicked

    private void txtPercentagemRetalhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPercentagemRetalhoActionPerformed
        // TODO add your handling code here:
        procedimento_actualizar();
    }//GEN-LAST:event_txtPercentagemRetalhoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPercentagemGrossoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPercentagemGrossoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPercentagemGrossoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Windows".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( DefinirPrecosPercentagemVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( DefinirPrecosPercentagemVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( DefinirPrecosPercentagemVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( DefinirPrecosPercentagemVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                DefinirPrecosPercentagemVisao dialog = new DefinirPrecosPercentagemVisao( new javax.swing.JFrame(), true, 15, new BDConexao() );
                dialog.addWindowListener( new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing( java.awt.event.WindowEvent e )
                    {
                        System.exit( 0 );
                    }
                } );
                dialog.setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private util.CustomPanel jp_progress;
    private javax.swing.JLabel lbTipoProduto;
    private javax.swing.JLabel lbTipoProduto1;
    private javax.swing.JLabel lbTipoProduto2;
    private javax.swing.JLabel lb_status;
    public static javax.swing.JTable tabela_categoria;
    private javax.swing.JTextField txtPercentagemGrosso;
    private javax.swing.JTextField txtPercentagemRetalho;
    // End of variables declaration//GEN-END:variables

    private void adicionar()
    {

        DefaultTableModel modelo = (DefaultTableModel) tabela_categoria.getModel();
        List<TbProduto> list = produtoDao.getAll();
        TbPreco preco_grosso;
        TbPreco preco_retalho;
        int cod_preco = 0;
        Vector<TbPreco> vector_precos;
        modelo.setRowCount( 0 );
        this.TAMANHO = list.size();
        this.vector.clear();

        for ( int i = 0; i < this.TAMANHO; i++ )
        {

            TbProduto produto = list.get( i );

            try
            {
                //ultimo preÃ§o Ã© sempre o do grosso
                preco_grosso = precoDao.getLastPrecoByIdProduto( produto.getCodigo() );
                cod_preco = precoDao.getUltimoIdPrecoByIdProduto( produto.getCodigo(), preco_grosso.getQtdBaixo() - 1 );
                preco_retalho = precoDao.findTbPreco( cod_preco );
            }
            catch ( Exception e )
            {

                preco_grosso = new TbPreco();
                preco_grosso.setData( new Date() );
                preco_grosso.setHora( new Date() );
                preco_grosso.setFkProduto( produto );
                preco_grosso.setFkUsuario( usuarioDao.findTbUsuario( this.id_user ) );
                preco_grosso.setPrecoCompra( new BigDecimal( "0" ) );
                preco_grosso.setPrecoVenda( new BigDecimal( "0" ) );
                preco_grosso.setQtdBaixo( 50 );
                preco_grosso.setQtdAlto( DVML.GROSSO );

                preco_retalho = new TbPreco();
                preco_retalho.setData( new Date() );
                preco_retalho.setHora( new Date() );
                preco_retalho.setFkProduto( produto );
                preco_retalho.setFkUsuario( usuarioDao.findTbUsuario( this.id_user ) );
                preco_retalho.setPrecoCompra( new BigDecimal( "0" ) );
                preco_retalho.setPrecoVenda( new BigDecimal( "0" ) );
                preco_retalho.setQtdBaixo( 1 );
                preco_retalho.setQtdAlto( 49 );

            }

            modelo.addRow( new Object[]
            {
                produto.getCodigo(),
                produto.getDesignacao(),
                //getValor(preco_grosso.getPrecoCompra()), 
                MetodosUtil.retirar_dizimas( preco_grosso.getPrecoCompra().doubleValue() ),
                //retalho
                // getValor(preco_retalho.getPrecoVenda()),
                MetodosUtil.retirar_dizimas( preco_retalho.getPrecoVenda().doubleValue() ),
                //grosso
                //getValor(preco_grosso.getPrecoVenda()),
                MetodosUtil.retirar_dizimas( preco_grosso.getPrecoVenda().doubleValue() )

            }
            );

            vector_precos = new Vector<>();
            vector_precos.add( preco_retalho );
            vector_precos.add( preco_grosso );

            vector.add( vector_precos );

        }

    }

    public void limpar()
    {
        txtPercentagemRetalho.setText( "" );

    }

    private void procedimento_actualizar()
    {

        if ( !txtPercentagemRetalho.getText().equals( "" ) )
        {
            int opcao = JOptionPane.showConfirmDialog( null, "AtenÃ§Ã£o!...\nEsta operaÃ§Ã£o serÃ¡ aplicada Ã  todos os produtos. E pode demorar alguns minutos\nDeseja Continuar?" );

            if ( opcao == JOptionPane.YES_OPTION )
            {
                progress();
            }

        }
        else
        {
            txtPercentagemRetalho.requestFocus();
            JOptionPane.showMessageDialog( null, "Pf. Insira a percetagem", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );

        }

    }

    private void progress()
    {

        new Thread( new Runnable()
        {

            @Override
            public void run()
            {

                double preco_venda = 0, preco_compra;
                float x = 0;
                boolean sucesso = true;
                TbPreco preco_retalho, preco_grosso;
                int id_produto = 0;

                lb_status.setText( "A actualizar o preÃ§o!..." );
                TAMANHO = vector.size();
                //desactiva o botÃ£o
                btnSalvar.setEnabled( false );
                //Abri a conexÃ£o
//                conexao = new BDConexao();
                //for (int i = 0; i < vector.size(); i++) {
                for ( int i = 0; i < TAMANHO; i++ )
                {

                    x = ( ( i + 1 ) * 100 );
                    x = ( x / TAMANHO );

                    id_produto = vector.get( i ).get( 0 ).getFkProduto().getCodigo();

                    preco_compra = vector.get( i ).get( 0 ).getPrecoCompra().doubleValue();
                    preco_retalho = vector.get( i ).get( 0 );
                    preco_grosso = vector.get( i ).get( 1 );

                    try
                    {

                        /*PRIMEIRO PRECO RETALHO*/
                        preco_retalho.setPercentagemGanho( new BigDecimal( MetodosUtil.retirar_dizimas( Double.parseDouble( txtPercentagemRetalho.getText() ) ) ) );
                        preco_venda = ( ( preco_retalho.getPercentagemGanho().doubleValue() * preco_compra ) / 100 ) + preco_compra;
                        preco_retalho.setPrecoVenda( new BigDecimal( MetodosUtil.retirar_dizimas( preco_venda ) ) );
                        //precoDao.create(preco_retalho);
                        MetodosUtil.salvar_preco( preco_retalho, id_user, conexao );

                        /*SEGUNDO PRECO GROSSO*/
                        preco_grosso.setPercentagemGanho( new BigDecimal( MetodosUtil.retirar_dizimas( Double.parseDouble( txtPercentagemGrosso.getText() ) ) ) );
                        preco_venda = ( ( preco_grosso.getPercentagemGanho().doubleValue() * preco_compra ) / 100 ) + preco_compra;
                        preco_grosso.setPrecoVenda( new BigDecimal( MetodosUtil.retirar_dizimas( preco_venda ) ) );
                        MetodosUtil.salvar_preco( preco_grosso, id_user, conexao );
                        //precoDao.create(preco_grosso);

                    }
                    catch ( Exception e )
                    {

                        e.printStackTrace();
                        sucesso = false;
                        JOptionPane.showMessageDialog( null, "Erro ao actualizar o preÃ§o",
                                DVML.DVML_COMERCIAL,
                                JOptionPane.ERROR_MESSAGE );
                        break;
                    }

                    try
                    {
                        jp_progress.UpdateProgress( (int) x );
                        jp_progress.repaint();
                        Thread.sleep( 50 );
                    }
                    catch ( InterruptedException ex )
                    {
                        Logger.getLogger( ProgressBarDemo.class.getName() ).log( Level.SEVERE, null, ex );
                    }

                }

                if ( sucesso )
                {
                    //fecha a coonexÃ£o
                    conexao.close();
                    //adiciona na tabela
                    adicionar_posterior();
                    //activa o botÃ£o

                    //mostra a mensagem na tela
                    //JOptionPane.showMessageDialog(null, "PreÃ§o actualizado com sucesso!...");
                }
            }
        } ).start();

    }

    public void soma_forma_norma()
    {

        int soma = 0;
        vector = DVML.actualizar_vector_preco( 0, vector.size(), vector );

        for ( int i = 0; i < vector.size(); i++ )
        {
            System.err.println( "TbPreco: " + vector.get( i ).get( 0 ).getPrecoCompra() );
        }

    }

    private String getValor( double valor )
    {

        BigDecimal decimal = new BigDecimal( valor );
        decimal = decimal.setScale( 2, BigDecimal.ROUND_UP );
        return String.valueOf( decimal );
    }

    private void adicionar_posterior()
    {

        new Thread(
                new Runnable()
        {

            @Override
            public void run()
            {
                btnSalvar.setEnabled( false );
                lb_status.setText( "A visualizar na tabela. Por favor aguarde!..." );
                DefaultTableModel modelo = (DefaultTableModel) tabela_categoria.getModel();
                List<TbProduto> list = produtoDao.getAll();
                TbPreco preco_grosso;
                TbPreco preco_retalho;
                int cod_preco = 0, x = 0;
                Vector<TbPreco> vector_precos;
                modelo.setRowCount( 0 );
                TAMANHO = list.size();

                for ( int i = 0; i < TAMANHO; i++ )
                {

                    TbProduto produto = list.get( i );

                    x = ( ( i + 1 ) * 100 );
                    x = ( x / TAMANHO );

                    try
                    {
                        //ultimo preÃ§o Ã© sempre o do grosso
                        preco_grosso = precoDao.getLastPrecoByIdProduto( produto.getCodigo() );
                        cod_preco = precoDao.getUltimoIdPrecoByIdProduto( produto.getCodigo(), preco_grosso.getQtdBaixo() - 1 );
                        preco_retalho = precoDao.findTbPreco( cod_preco );
                    }
                    catch ( Exception e )
                    {

                        preco_grosso = new TbPreco();
                        preco_grosso.setData( new Date() );
                        preco_grosso.setHora( new Date() );
                        preco_grosso.setFkProduto( produto );
                        preco_grosso.setFkUsuario( usuarioDao.findTbUsuario( id_user ) );
                        preco_grosso.setPrecoCompra( new BigDecimal("0") );
                        preco_grosso.setPrecoVenda( new BigDecimal("0") );
                        preco_grosso.setQtdBaixo( 50 );
                        preco_grosso.setQtdAlto( DVML.GROSSO );

                        preco_retalho = new TbPreco();
                        preco_retalho.setData( new Date() );
                        preco_retalho.setHora( new Date() );
                        preco_retalho.setFkProduto( produto );
                        preco_retalho.setFkUsuario( usuarioDao.findTbUsuario( id_user ) );
                        preco_retalho.setPrecoCompra( new BigDecimal("0") );
                        preco_retalho.setPrecoVenda( new BigDecimal("0") );
                        preco_retalho.setQtdBaixo( 1 );
                        preco_retalho.setQtdAlto( 49 );

                    }

                    modelo.addRow( new Object[]
                    {
                        produto.getCodigo(),
                        produto.getDesignacao(),
                        MetodosUtil.retirar_dizimas( preco_grosso.getPrecoCompra().doubleValue() ),
                        //retalho
                        // getValor(preco_retalho.getPrecoVenda()),
                        MetodosUtil.retirar_dizimas( preco_retalho.getPrecoVenda().doubleValue() ),
                        //grosso
                        //getValor(preco_grosso.getPrecoVenda()),
                        MetodosUtil.retirar_dizimas( preco_grosso.getPrecoVenda().doubleValue() )

                    }
                    );

                    try
                    {
                        jp_progress.UpdateProgress( (int) x );
                        jp_progress.repaint();
                        Thread.sleep( 50 );
                    }
                    catch ( Exception e )
                    {
                    }

                }
                btnSalvar.setEnabled( true );
                lb_status.setText( "Dados actualizados com sucesso!..." );
                JOptionPane.showMessageDialog( null, "Dados actualizados com sucesso!.." );

            }

        }
        ).start();

    }
}
