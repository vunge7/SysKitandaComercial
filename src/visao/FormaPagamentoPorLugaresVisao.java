/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import comercial.controller.DadosInstituicaoController;
import comercial.controller.FormaPagamentoController;
import entity.FormaPagamento;
import entity.TbDadosInstituicao;
import entity.TbVenda;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import kitanda.util.CfMethods;
import lista.ReciboVisao;
import util.BDConexao;
import util.DVML;

/**
 *
 * @author Domingos Dala Vunge
 */
public class FormaPagamentoPorLugaresVisao extends javax.swing.JFrame
{

    private static BDConexao conexao;
    private static FormaPagamentoController formaPagamentoController;
    private static DadosInstituicaoController dadosInstituicaoController;
    private boolean a6 = false;
    public static int formulario = 0;
    private int lugar = 0;
    private double totalFactura = 0;

    /**
     * Creates new form FormaPagamentoVisao
     *
     * @param parent
     * @param modal
     */
    public FormaPagamentoPorLugaresVisao( java.awt.Frame parent, boolean modal, EntityManagerFactory em, int formulario, BDConexao conexao, int lugar, double totalFactura )
    {
//        super( parent, modal );

        initComponents();
        formaPagamentoController = new FormaPagamentoController( conexao );
        dadosInstituicaoController = new DadosInstituicaoController( conexao );

        TbDadosInstituicao d = ( TbDadosInstituicao ) dadosInstituicaoController.findById( 1 );

        FormaPagamentoPorLugaresVisao.conexao = conexao;

        setActivarTeclado( d.getTeclado() );
        rdTeclado.setVisible( false );
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation( dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2 );
        this.formulario = formulario;
        this.lugar = lugar;
        this.totalFactura = totalFactura;
        inicializar_componentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lb_total_geral = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_forma_pagamento = new javax.swing.JTable();
        lb_troco = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        rdTeclado = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Forma de Pagamento");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lb_total_geral.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        lb_total_geral.setText("0.0 AOA");

        tabela_forma_pagamento.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        tabela_forma_pagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Cod.", "Designação", "Ref.", "Valor"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tabela_forma_pagamento.setRowHeight(60);
        tabela_forma_pagamento.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tabela_forma_pagamentoMouseClicked(evt);
            }
        });
        tabela_forma_pagamento.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {
            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                tabela_forma_pagamentoPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(tabela_forma_pagamento);
        if (tabela_forma_pagamento.getColumnModel().getColumnCount() > 0)
        {
            tabela_forma_pagamento.getColumnModel().getColumn(0).setPreferredWidth(30);
            tabela_forma_pagamento.getColumnModel().getColumn(1).setPreferredWidth(170);
            tabela_forma_pagamento.getColumnModel().getColumn(2).setPreferredWidth(80);
            tabela_forma_pagamento.getColumnModel().getColumn(3).setPreferredWidth(110);
        }

        lb_troco.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        lb_troco.setText("0");

        jButton3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/salvar/save_32x32.png"))); // NOI18N
        jButton3.setText("Finalizar Processo");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/out/out_32x32.png"))); // NOI18N
        jButton6.setText("Sair");
        jButton6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton6ActionPerformed(evt);
            }
        });

        rdTeclado.setSelected(true);
        rdTeclado.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_total_geral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdTeclado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))
                            .addComponent(lb_troco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_total_geral, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lb_troco, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2))
                    .addComponent(rdTeclado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed

        procedimento_finalizar( this.lugar );
        NovaGestaoPedidosVisao.actualizar_lugar( this.lugar );


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton6ActionPerformed
    {//GEN-HEADEREND:event_jButton6ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tabela_forma_pagamentoMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tabela_forma_pagamentoMouseClicked
    {//GEN-HEADEREND:event_tabela_forma_pagamentoMouseClicked
        if ( !rdTeclado.isSelected() )
        {
            accao_teclado();
        }
        else
        {

        }

    }//GEN-LAST:event_tabela_forma_pagamentoMouseClicked

    private void tabela_forma_pagamentoPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_tabela_forma_pagamentoPropertyChange
    {//GEN-HEADEREND:event_tabela_forma_pagamentoPropertyChange
        try
        {

            visualizar_troco();
//            if ( !valorSuperiorOutrasFormasPagamento() )
//            {
//
//            }

        }
        catch ( Exception e )
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tabela_forma_pagamentoPropertyChange

//    private void visualizar_troco()
//    {
//        try
//        {
//
//            BigDecimal total_geral = new BigDecimal( CfMethods.parseMoedaFormatada( lb_total_geral.getText() ) );
//            BigDecimal total_valor = get_total_valor();
//
//            lb_troco.setText( CfMethods.formatarComoMoeda( total_valor.subtract( total_geral ).doubleValue() ) );
//
//        }
//        catch ( Exception e )
//        {
//        }
//
//    }
    public static void visualizar_troco()
    {
        try
        {

            BigDecimal total_geral = new BigDecimal( CfMethods.parseMoedaFormatada( lb_total_geral.getText() ) );
            BigDecimal total_valor = get_total_valor();
            lb_troco.setText( CfMethods.formatarComoMoeda( total_valor.subtract( total_geral ).doubleValue() ) );

        }
        catch ( Exception e )
        {
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Nimbus".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( FormaPagamentoPorLugaresVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( FormaPagamentoPorLugaresVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( FormaPagamentoPorLugaresVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( FormaPagamentoPorLugaresVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                FormaPagamentoPorLugaresVisao dialog = new FormaPagamentoPorLugaresVisao( new javax.swing.JFrame(), true, null, 0, new BDConexao(), 1, 0 );
                dialog.addWindowListener( new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing( java.awt.event.WindowEvent e )
                    {
                        System.exit( 0 );
                    }
                } );
                dialog.setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel lb_total_geral;
    public static javax.swing.JLabel lb_troco;
    private javax.swing.JRadioButton rdTeclado;
    public static javax.swing.JTable tabela_forma_pagamento;
    // End of variables declaration//GEN-END:variables

    private void inicializar_componentes()
    {
//        formaPagamentoDao = new FormaPagamentoDao( em );
        adicionar_forma_pagamento();
        if ( formulario == DVML.VENDA_RESTAURANTE )
        {
//            lb_total_geral.setText(GestaoPedidosVisao.txtTotalApagar.getText());
//            lb_total_geral.setText( String.valueOf(totalFactura) );
            lb_total_geral.setText( CfMethods.formatarComoMoeda( totalFactura ) );

        }

        visualizar_troco();
    }
    
    
    private void adicionar_forma_pagamento()
    {

        List<FormaPagamento> bancos = formaPagamentoController.listarTodos();
        DefaultTableModel modelo = ( DefaultTableModel ) tabela_forma_pagamento.getModel();

        if ( !bancos.isEmpty() )
        {
            for ( int i = 0; i < bancos.size(); i++ )
            {
                modelo.addRow( new Object[]
                {
                    bancos.get( i ).getPkFormaPagamento(),
                    bancos.get( i ).getDesignacao(),
                    "",
                    ""

                } );

            }
        }

    }

    private void accao_teclado()
    {
        int linha_selecionada = tabela_forma_pagamento.getSelectedRow();
        int coluna_selecionada = tabela_forma_pagamento.getSelectedColumn();

        if ( coluna_selecionada == 2 || coluna_selecionada == 3 )
        {
            new TecladoNumeroPOSVisao( this, rootPaneCheckingEnabled, tabela_forma_pagamento, linha_selecionada, coluna_selecionada, DVML.NUMERO_TECLADO_FORMA_PAGAMENTO ).setVisible( true );
        }
    }

//    private BigDecimal get_total_valor()
//    {
//        DefaultTableModel modelo = ( DefaultTableModel ) tabela_forma_pagamento.getModel();
//
//        BigDecimal total = new BigDecimal( "0" );
//        for ( int i = 0; i < modelo.getRowCount(); i++ )
//        {
//
////            String valor = ( !modelo.getValueAt( i, 2 ).toString().equals( "" ) || modelo.getValueAt( i, 2 ).toString() == null ) ? modelo.getValueAt( i, 2 ).toString() : "0";
//            String valor = ( modelo.getValueAt( i, 3 ) != null ) ? modelo.getValueAt( i, 3 ).toString() : "0";
//            total = total.add( new BigDecimal( valor ) );
//
//        }
//
////        System.out.println( "TOTAL: " + total.doubleValue() );
//        return total;
//
//    }
    public static BigDecimal get_total_valor()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) tabela_forma_pagamento.getModel();

        double gorjeta = 0;
        BigDecimal total = new BigDecimal( "0" );
        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {

            String forma = ( modelo.getValueAt( i, 1 ) != null ) ? modelo.getValueAt( i, 1 ).toString() : "";
            String valor = ( !modelo.getValueAt( i, 3 ).equals( "" ) ) ? modelo.getValueAt( i, 3 ).toString() : "0";
            total = total.add( new BigDecimal( valor ) );

            if ( forma.equals( DVML.FORMA_PAGAMENTO_CARTAO ) )
            {
                Double valor_factura = CfMethods.parseMoedaFormatada( lb_total_geral.getText() );
                double dif = Double.parseDouble( valor ) - valor_factura;
                gorjeta = ( dif > 0 ) ? dif : 0;
            }
        }

        System.out.println( "GORJETA: " + gorjeta );

        if ( gorjeta > 0 )
        {

            if ( formulario == DVML.VENDA_POS )
            {
                VendaPOSVisao.gorjeta = gorjeta;
            }
            else if ( formulario == DVML.VENDA_RESTAURANTE )
            {
                NovaGestaoPedidosVisao.gorjeta = gorjeta;
            }
            else if ( formulario == DVML.VENDA_PONTUAL )
            {
                VendaUsuarioVisao.gorjeta = gorjeta;
            }
            else if ( formulario == DVML.CONVERSAO_PROFORMA_FACTURA_RECIBO )
            {
                ConverterProformaFacturaVisao.gorjeta = 0;
            }
            else if ( formulario == DVML.CONVERSAO_GUIA_TRANSPORTE )
            {
                ConverterGuiaFacturaVisao.gorjeta = 0;
            }
//            else if ( formulario == DVML.EMISSAO_RECIBOS )
//            {
//                EmissaoRecibos.gorjeta = gorjeta;
//            }
        }
        return total;
    }

    private void procedimento_finalizar( int lugar )
    {

        double troco = CfMethods.parseMoedaFormatada( lb_troco.getText() );

        if ( troco >= 0 || formulario == DVML.EMISSAO_RECIBOS )
        {
            dispose();

            NovaGestaoPedidosVisao.setTotalPagarByLugar( lugar );

            TbVenda salvar_venda = NovaGestaoPedidosVisao.salvar_venda( lugar );

            if ( salvar_venda != null )
            {
                NovaGestaoPedidosVisao.registrar_forma_pagamento_lugar( salvar_venda.getCodigo(), lugar );
            }
            NovaGestaoPedidosVisao.salvarItemvendaLugar(salvar_venda, String.valueOf(this.lugar ) );
        }
        else
        {
            JOptionPane.showMessageDialog( null, "Valor entregue inferior ao total geral.", "Aviso", JOptionPane.WARNING_MESSAGE );
        }

    }

    private void procedimento_finalizar()
    {

        if ( true )
        {
            double troco = CfMethods.parseMoedaFormatada( lb_troco.getText() );

            if ( troco >= 0 || formulario == DVML.EMISSAO_RECIBOS )
            {
                dispose();

                if ( formulario == DVML.VENDA_POS )
                {
                    dispose();
                    VendaPOSVisao.salvar_venda();
                }
                else if ( formulario == DVML.VENDA_RESTAURANTE )
                {
                    NovaGestaoPedidosVisao.procedimento_converter_factura();
                }
                else if ( formulario == DVML.VENDA_LAVANDARIA )
                {
                    RecolhaPedidosVisao.procedimento_converter_factura();
                }
                else if ( formulario == DVML.VENDA_PONTUAL )
                {
                    VendaUsuarioVisao.procedimento_salvar_venda_comercial(true);
                }
                else if ( formulario == DVML.CONVERSAO_PROFORMA_FACTURA_RECIBO )
                {
                    ConverterProformaFacturaVisao.procedimento_converter();
                }
                else if ( formulario == DVML.CONVERSAO_GUIA_TRANSPORTE )
                {
                    ConverterGuiaFacturaVisao.procedimento_converter();
                }
                else if ( formulario == DVML.EMISSAO_RECIBOS )
                {
                    EmissaoRecibos.salvar( get_total_valor().doubleValue() );
                }

            }
            else
            {
                JOptionPane.showMessageDialog( null, "Valor entregue inferior ao total geral.", "Aviso", JOptionPane.WARNING_MESSAGE );
            }

        }

    }

    private void setActivarTeclado( String negocio )
    {
        if ( negocio.equalsIgnoreCase( "Normal" ) )
        {
            rdTeclado.setSelected( true );
        }
        else
        {
            rdTeclado.setSelected( false );

        }
    }

    private boolean valorSuperiorOutrasFormasPagamento()
    {

        DefaultTableModel modelo = ( DefaultTableModel ) tabela_forma_pagamento.getModel();

        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {
            int idBanco = Integer.parseInt( modelo.getValueAt( i, 0 ).toString() );
            double valor = Double.parseDouble( modelo.getValueAt( i, 3 ).toString() );
            if ( idBanco > 1 )
            {

                double troco = CfMethods.parseMoedaFormatada( lb_troco.getText() );
                double total_factura = CfMethods.parseMoedaFormatada( lb_total_geral.getText() );
                if ( troco < 0 )
                {
                    if ( valor > total_factura )
                    {
                        JOptionPane.showMessageDialog( null, "O Valor nao pode ser superior ao total da factura.", "Aviso", JOptionPane.WARNING_MESSAGE );
                        modelo.setValueAt( 0, i, 3 );
                        return true;
                    }
                }
                else
                {
                    zerarTodasFormasPagamentoExceptoNumerario();
                    return true;
                }
            }
        }

        return false;

    }

    private void zerarTodasFormasPagamentoExceptoNumerario()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) tabela_forma_pagamento.getModel();
        double valor = 0, troco_local = 0, total;

        total = CfMethods.parseMoedaFormatada( lb_total_geral.getText() );

        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {
            valor = valor + Double.parseDouble( modelo.getValueAt( i, 3 ).toString() );
            troco_local = ( valor - total );
            int idBanco = Integer.parseInt( modelo.getValueAt( i, 0 ).toString() );

            if ( idBanco > 1 )
            {
                if ( troco_local > 0 )
                {
                    modelo.setValueAt( 0, i, 3 );
                }
            }

        }
        visualizar_troco();

    }

}
