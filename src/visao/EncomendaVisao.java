/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.AnoEconomicoDao;
import dao.ArmazemDao;
import dao.BancoDao;
import dao.CambioDao;
import dao.ComprasDao;
import dao.DescontoDao;
import dao.DocumentoDao;
import dao.FornecedorDao;
import dao.ItemComprasDao;
import dao.MoedaDao;
import dao.PrecoDao;
import dao.ProdutoDao;
import dao.ProdutoImpostoDao;
import dao.ProdutoIsentoDao;
import dao.StockDao;
import dao.TipoProdutoDao;
import dao.UsuarioDao;
import dao.VasilhameDao;
import entity.AnoEconomico;
import entity.Cambio;
import entity.Documento;
import entity.ItemCompras;
import entity.Moeda;
import entity.TbStock;
import entity.TbVasilhame;
import entity.Compras;
import entity.TbProduto;
import java.awt.HeadlessException;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import kitanda.util.CfMethods;
import lista.ListaCompras;
import modelo.ProdutoModelo;
import util.BDConexao;
import util.DVML;
import util.DVML.Abreviacao;
import util.JPAEntityMannagerFactoryUtil;
import util.MetodosUtil;

/**
 *
 * @author Domingos Dala Vunge
 */
public class EncomendaVisao extends javax.swing.JFrame implements Runnable
{
    
    private static EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
    private VasilhameDao vasilhameDao;
    private static DescontoDao descontoDao;
    private static PrecoDao precoDao;
    private BancoDao bancoDao;
    private ItemCompras itemCompras;
    private TbStock stock_local;
    private static Compras compras_global;
    public static ProdutoDao produtoDao;
    private static StockDao stockDao;
    private UsuarioDao usuarioDao;
    private static DocumentoDao documentoDao;
    private static FornecedorDao fornecedorDao;
    private static ComprasDao encomendaDao;
    private static MoedaDao moedaDao;
    private AnoEconomicoDao anoEconomicoDao;
    private static ArmazemDao armazemDao;
    private static ItemComprasDao itemComprasDao;
    private TbVasilhame vasilhame;
    private StockDao stocksDao = new StockDao( emf );
    private Moeda moeda;
    private AnoEconomico anoEconomico;
    private static BDConexao conexao;
    private CambioDao cambioDao;
    private static Documento documento;
    private static ProdutoImpostoDao produtoImpostoDao;
    private Cambio cambio;
    private TipoProdutoDao tipoProdutoDao;
    private int cod_usuario;
    private static int linha = 0, coordenada = 1, doc_prox_cod = 0;
    private double soma_total = 0;
    private static double total_iva = 0;
    private ProdutoModelo produtoModelo;
    private static ProdutoIsentoDao produtoIsentoDao;
    private static int linha_actual = -1;
    private Abreviacao abreviacao;
    private static DefaultListModel lista_model_compras_apuradas = new DefaultListModel();
    private static double total_iliquido = 0, total_desconto_linha = 0;
    private boolean aviso_continuar_documento = false;
    private Thread t;
    private static String prox_doc;
    
    public EncomendaVisao( int cod_usuario, BDConexao conexao ) throws SQLException
    {
        
        initComponents();

        //confiLabel();
        setLocationRelativeTo( null );
        setResizable( false );
        this.cod_usuario = cod_usuario;
        this.conexao = conexao;
        
        lista_compras_apuradas.setModel( lista_model_compras_apuradas );
        init();
        setWindowsListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jMenuItem1 = new javax.swing.JMenuItem();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        lbTotalPagar = new javax.swing.JLabel();
        txtTotal_AOA_Iliquido = new javax.swing.JTextField();
        lbTotalPagar1 = new javax.swing.JLabel();
        lbTotalPagar2 = new javax.swing.JLabel();
        txtTotal_AOA_liquido = new javax.swing.JTextField();
        lbTotalPagar3 = new javax.swing.JLabel();
        txtTotal_AOA_IVA = new javax.swing.JTextField();
        txtTotal_AOA_Desconto = new javax.swing.JTextField();
        lbValorPorExtenco = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lb_usuario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lb_proximo_documento = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lista_compras_apuradas = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        lb_ano_encomico = new javax.swing.JLabel();
        lb_fornecedor_nome = new javax.swing.JLabel();
        lb_data_solicitacao = new javax.swing.JLabel();
        lb_data_apuramento = new javax.swing.JLabel();
        lb_numero_artigos = new javax.swing.JLabel();
        lb_fornecedor_endereco = new javax.swing.JLabel();
        lb_fornecedor_telefone = new javax.swing.JLabel();
        lb_fornecedor_email = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...:::::  SOLICITAÇÃO DE COMPRAS ::::...");

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbTotalPagar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lbTotalPagar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTotalPagar.setText("Desconto :");
        jPanel8.add(lbTotalPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 130, 40));

        txtTotal_AOA_Iliquido.setEditable(false);
        txtTotal_AOA_Iliquido.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtTotal_AOA_Iliquido.setForeground(new java.awt.Color(255, 0, 0));
        txtTotal_AOA_Iliquido.setCaretColor(new java.awt.Color(255, 255, 255));
        txtTotal_AOA_Iliquido.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtTotal_AOA_IliquidoActionPerformed(evt);
            }
        });
        jPanel8.add(txtTotal_AOA_Iliquido, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 280, 30));

        lbTotalPagar1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lbTotalPagar1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTotalPagar1.setText("TOTAL LÍQUIDO :");
        jPanel8.add(lbTotalPagar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 170, 34));

        lbTotalPagar2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lbTotalPagar2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTotalPagar2.setText("Total Iliquido :");
        jPanel8.add(lbTotalPagar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 170, 34));

        txtTotal_AOA_liquido.setEditable(false);
        txtTotal_AOA_liquido.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        txtTotal_AOA_liquido.setForeground(new java.awt.Color(255, 0, 0));
        txtTotal_AOA_liquido.setCaretColor(new java.awt.Color(255, 255, 255));
        txtTotal_AOA_liquido.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtTotal_AOA_liquidoActionPerformed(evt);
            }
        });
        jPanel8.add(txtTotal_AOA_liquido, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 280, 30));

        lbTotalPagar3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lbTotalPagar3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTotalPagar3.setText("IVA :");
        jPanel8.add(lbTotalPagar3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 170, 34));

        txtTotal_AOA_IVA.setEditable(false);
        txtTotal_AOA_IVA.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtTotal_AOA_IVA.setForeground(new java.awt.Color(255, 0, 0));
        txtTotal_AOA_IVA.setCaretColor(new java.awt.Color(255, 255, 255));
        txtTotal_AOA_IVA.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtTotal_AOA_IVAActionPerformed(evt);
            }
        });
        jPanel8.add(txtTotal_AOA_IVA, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 280, 30));

        txtTotal_AOA_Desconto.setEditable(false);
        txtTotal_AOA_Desconto.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtTotal_AOA_Desconto.setForeground(new java.awt.Color(255, 0, 0));
        txtTotal_AOA_Desconto.setCaretColor(new java.awt.Color(255, 255, 255));
        txtTotal_AOA_Desconto.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtTotal_AOA_DescontoActionPerformed(evt);
            }
        });
        jPanel8.add(txtTotal_AOA_Desconto, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 280, 30));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 7, 588, 161));

        lbValorPorExtenco.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lbValorPorExtenco.setForeground(new java.awt.Color(204, 0, 0));
        lbValorPorExtenco.setText("VALOR POR EXTENSO");
        jPanel1.add(lbValorPorExtenco, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 174, 740, 47));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/impressora1.png"))); // NOI18N
        jButton1.setText("Encomendar");
        jButton1.setToolTipText("Efectuar Venda");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(751, 174, 134, 53));

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/LOGOUT - VERMELHO/Logout 32x32.png"))); // NOI18N
        btnCancelar.setAlignmentX(0.5F);
        btnCancelar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(895, 174, 60, 53));

        lb_usuario.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_usuario.setText("Conta:");
        jPanel1.add(lb_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 227, 383, 17));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Cod.Art", "Descrição", "Preço", "Qtd.", "Unidade", "Desconto(%)", "Taxa ", "Valor", "Valor C/ Imposto"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true, true, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        table.setCellSelectionEnabled(true);
        table.setGridColor(new java.awt.Color(51, 153, 0));
        jScrollPane1.setViewportView(table);
        table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (table.getColumnModel().getColumnCount() > 0)
        {
            table.getColumnModel().getColumn(0).setPreferredWidth(10);
            table.getColumnModel().getColumn(1).setPreferredWidth(250);
            table.getColumnModel().getColumn(2).setPreferredWidth(20);
            table.getColumnModel().getColumn(3).setPreferredWidth(5);
            table.getColumnModel().getColumn(6).setPreferredWidth(5);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 2, 946, 264));

        jPanel6.setBackground(new java.awt.Color(51, 153, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ENCOMENDA");

        lb_proximo_documento.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lb_proximo_documento.setForeground(new java.awt.Color(255, 255, 255));
        lb_proximo_documento.setText("PRÓXIMO DOC: XX PP/A1");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_proximo_documento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(516, 516, 516))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(lb_proximo_documento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Compras Autorizadas"));

        lista_compras_apuradas.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                lista_compras_apuradasMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(lista_compras_apuradas);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_ano_encomico.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_ano_encomico.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lb_ano_encomico.setText("Ano Econômico");
        jPanel3.add(lb_ano_encomico, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 8, -1, -1));

        lb_fornecedor_nome.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_fornecedor_nome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_fornecedor_nome.setText("Fornecedor");
        jPanel3.add(lb_fornecedor_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 29, 360, -1));

        lb_data_solicitacao.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_data_solicitacao.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_data_solicitacao.setText("Data Solicitação");
        jPanel3.add(lb_data_solicitacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 293, -1));

        lb_data_apuramento.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_data_apuramento.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_data_apuramento.setText("Data do Apuramento");
        jPanel3.add(lb_data_apuramento, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 293, -1));

        lb_numero_artigos.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_numero_artigos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_numero_artigos.setText("Nº de Artigos");
        jPanel3.add(lb_numero_artigos, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 180, -1));

        lb_fornecedor_endereco.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_fornecedor_endereco.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_fornecedor_endereco.setText("Endereço");
        jPanel3.add(lb_fornecedor_endereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 50, 380, -1));

        lb_fornecedor_telefone.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_fornecedor_telefone.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_fornecedor_telefone.setText("Telefone");
        jPanel3.add(lb_fornecedor_telefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 71, 380, -1));

        lb_fornecedor_email.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        lb_fornecedor_email.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_fornecedor_email.setText("email");
        jPanel3.add(lb_fornecedor_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 92, 390, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("...:::::  KITANDA - FACTURAÃO ::::...");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtTotal_AOA_IliquidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotal_AOA_IliquidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotal_AOA_IliquidoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        procedimento_salvar();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void lista_compras_apuradasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lista_compras_apuradasMouseClicked
        // TODO add your handling code here:

        accao_mostrar_dados();

    }//GEN-LAST:event_lista_compras_apuradasMouseClicked

    private void txtTotal_AOA_liquidoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtTotal_AOA_liquidoActionPerformed
    {//GEN-HEADEREND:event_txtTotal_AOA_liquidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotal_AOA_liquidoActionPerformed

    private void txtTotal_AOA_IVAActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtTotal_AOA_IVAActionPerformed
    {//GEN-HEADEREND:event_txtTotal_AOA_IVAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotal_AOA_IVAActionPerformed

    private void txtTotal_AOA_DescontoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtTotal_AOA_DescontoActionPerformed
    {//GEN-HEADEREND:event_txtTotal_AOA_DescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotal_AOA_DescontoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbTotalPagar;
    private javax.swing.JLabel lbTotalPagar1;
    private javax.swing.JLabel lbTotalPagar2;
    private javax.swing.JLabel lbTotalPagar3;
    public static javax.swing.JLabel lbValorPorExtenco;
    private static javax.swing.JLabel lb_ano_encomico;
    private static javax.swing.JLabel lb_data_apuramento;
    private static javax.swing.JLabel lb_data_solicitacao;
    private static javax.swing.JLabel lb_fornecedor_email;
    private static javax.swing.JLabel lb_fornecedor_endereco;
    private static javax.swing.JLabel lb_fornecedor_nome;
    private static javax.swing.JLabel lb_fornecedor_telefone;
    private static javax.swing.JLabel lb_numero_artigos;
    private javax.swing.JLabel lb_proximo_documento;
    private javax.swing.JLabel lb_usuario;
    private static javax.swing.JList<String> lista_compras_apuradas;
    public static javax.swing.JTable table;
    public static javax.swing.JTextField txtTotal_AOA_Desconto;
    public static javax.swing.JTextField txtTotal_AOA_IVA;
    public static javax.swing.JTextField txtTotal_AOA_Iliquido;
    public static javax.swing.JTextField txtTotal_AOA_liquido;
    // End of variables declaration//GEN-END:variables

    public static void main( String[] args )
    {
        
        try
        {
            new EncomendaVisao( 15, new BDConexao() ).show();
        }
        catch ( SQLException e )
        {
        }
    }
    
    @Override
    public void run()
    {
        throw new UnsupportedOperationException( "Not supported yet." ); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void init()
    {
        
        vasilhameDao = new VasilhameDao( emf );
        descontoDao = new DescontoDao( emf );
        precoDao = new PrecoDao( emf );
        produtoDao = new ProdutoDao( emf );
        usuarioDao = new UsuarioDao( emf );
        armazemDao = new ArmazemDao( emf );
        tipoProdutoDao = new TipoProdutoDao( emf );
        bancoDao = new BancoDao( emf );
        anoEconomicoDao = new AnoEconomicoDao( emf );
        documentoDao = new DocumentoDao( emf );
        moedaDao = new MoedaDao( emf );
        cambioDao = new CambioDao( emf );
        itemComprasDao = new ItemComprasDao( emf );
        encomendaDao = new ComprasDao( emf );
        produtoImpostoDao = new ProdutoImpostoDao( emf );
        produtoIsentoDao = new ProdutoIsentoDao( emf );
        lista_compras_apuradas.setModel( lista_model_compras_apuradas );
        lb_proximo_documento.setText( "" );
        txtTotal_AOA_Iliquido.setText( CfMethods.formatarComoMoeda( 0.0 ) );
        
        this.anoEconomico = anoEconomicoDao.getLastObject();
        mostrar_proximo_codigo_documento();
        adicionar_documentos_apurados();
        limpar_cabecario();
        limpar_rodape();
        
    }// </editor-fold>   

    private static void adicionar_documentos_apurados()
    {
        try
        {
            List<Compras> list = encomendaDao.getAllComprasApuradas();
            
            if ( list != null )
            {             
                lista_model_compras_apuradas.clear();
                for ( int i = 0; i < list.size(); i++ )
                {
                    lista_model_compras_apuradas.addElement( list.get( i ).getCodFact() );
                }
                lista_compras_apuradas.setSelectedIndex( -1 );
            }
            
        }
        catch ( Exception e )
        {
        }
        
    }
    
    private void accao_mostrar_dados()
    {
        if ( !lista_compras_apuradas.isSelectionEmpty() )
        {
            String cod_fact = lista_compras_apuradas.getSelectedValue();
            compras_global = encomendaDao.findByCodFact( cod_fact );
            
            if ( compras_global != null )
            {
                /*VISUALIZA O CABEÇARIO - PARTE 1*/
                lb_ano_encomico.setText( "Ano Económico: " + compras_global.getFkAnoEconomico().getDesignacao() );
                lb_fornecedor_nome.setText( "Fornecedor: " + compras_global.getNomeFornecedor() );
                lb_fornecedor_endereco.setText( "Endereço: " + compras_global.getFkFornecedor().getEndereco() );
                lb_fornecedor_telefone.setText( "Telefone: " + compras_global.getFkFornecedor().getTelefone() );
                lb_fornecedor_email.setText( "Email: " + compras_global.getFkFornecedor().getEmail() );

                /*VISUALIZA O CABEÇARIO - PARTE 2*/
                lb_numero_artigos.setText( "Nº de artigos: " + String.valueOf( compras_global.getItemComprasList().size() ) );
                lb_data_solicitacao.setText( "Data da solicitação: " + MetodosUtil.getDataString( compras_global.getDataCompra() ) );
                lb_data_apuramento.setText( "Data do apuramento: " + MetodosUtil.getDataString( compras_global.getDataCompra() ) );
                
                adicionar_tabela( compras_global.getItemComprasList() );
                
                txtTotal_AOA_Desconto.setText( CfMethods.formatarComoMoeda( compras_global.getDescontoTotal() ) );
                txtTotal_AOA_Iliquido.setText( CfMethods.formatarComoMoeda( compras_global.getTotalGeral() ) );
                txtTotal_AOA_IVA.setText( CfMethods.formatarComoMoeda( compras_global.getTotalIva() ) );
                txtTotal_AOA_liquido.setText( CfMethods.formatarComoMoeda( compras_global.getTotalCompra() ) );
                
                lbValorPorExtenco.setText(
                        MetodosUtil.valorPorExtenso( CfMethods.parseMoedaFormatada( txtTotal_AOA_liquido.getText() ), "Kwanza" )
                );
            }
            else
            {
                limpar_cabecario();
                limpar_rodape();
            }
            
        }
        
    }
    
    private void adicionar_tabela( List<ItemCompras> itemCompras )
    {
        DefaultTableModel modelo = ( DefaultTableModel ) table.getModel();
        //limpa a tabela
        modelo.setRowCount( 0 );
        for ( ItemCompras itemCompra : itemCompras )
        {
            modelo.addRow( new Object[]
            {
                itemCompra.getFkProduto().getCodigo(),
                itemCompra.getFkProduto().getDesignacao(),
                itemCompra.getPrecoCompra(),
                itemCompra.getQuantidade(),
                itemCompra.getFkProduto().getCodUnidade().getAbreviacao(),
                itemCompra.getDesconto(),
                itemCompra.getValorIva(),
                itemCompra.getPrecoCompra() * itemCompra.getQuantidade(),
                itemCompra.getTotal()
            
            } );
        }
        
    }
    
    private static void limpar_cabecario()
    {
        lb_ano_encomico.setText( "" );
        lb_fornecedor_nome.setText( "" );
        lb_fornecedor_endereco.setText( "" );
        lb_fornecedor_telefone.setText( "" );
        lb_fornecedor_email.setText( "" );
        
        lb_numero_artigos.setText( "" );
        lb_data_solicitacao.setText( "" );
        lb_data_apuramento.setText( "" );
        
    }
    
    private static void limpar_rodape()
    {
        txtTotal_AOA_Desconto.setText( "0" );
        txtTotal_AOA_Iliquido.setText( "0" );
        txtTotal_AOA_IVA.setText( "0" );
        txtTotal_AOA_liquido.setText( "0" );
        lbValorPorExtenco.setText( "" );
    }
    
    private static void procedimento_salvar()
    {
        Compras encomenda_local;
        List<ItemCompras> lista_itens = compras_global.getItemComprasList();
        encomenda_local = compras_global;
        encomenda_local.setFkDocumento( documento );
        encomenda_local.setCodFact( prox_doc );
        encomenda_local.setRefCodFact( compras_global.getCodFact() );
        encomenda_local.setHashCod( MetodosUtil.criptografia_hash( encomenda_local, getGrossTotal( lista_itens ), conexao ) );
        encomenda_local.setAssinatura( MetodosUtil.assinatura_doc( encomenda_local.getHashCod() ) );
        
        System.err.println( "Assinatura: " + encomenda_local.getAssinatura() );
        
        try
        {
            encomenda_local.setItemComprasList( null );
            encomendaDao.create( encomenda_local );
            if ( salvar_item( lista_itens ) )
            {
                actualizar_status();
                actualizar_cod_doc();
                limpar_cabecario();
                limpar_rodape();
                esvaziar_tabela();
                adicionar_documentos_apurados();
                lista_compras_apuradas.clearSelection();
                JOptionPane.showMessageDialog( null, "Documemto Criado com sucesso!.." );
                ListaCompras listaCompras = new ListaCompras( encomendaDao.getLastCompra(), Abreviacao.NE, false, false, "Original", getMotivoIsento() );
            }
            else
            {
                JOptionPane.showMessageDialog( null, "Falha ao criar o documento", "Falha", JOptionPane.ERROR_MESSAGE );
            }
            
        }
        catch ( HeadlessException e )
        {
            JOptionPane.showMessageDialog( null, "Falha ao criar o documento", "Falha", JOptionPane.ERROR_MESSAGE );
        }
    }
    
    private void mostrar_proximo_codigo_documento()
    {
        try
        {
            documento = documentoDao.findDocumento( DVML.DOC_NOTA_ENCOMENDA_NE );
            doc_prox_cod = documento.getCodUltimoDoc() + 1;
            prox_doc = documento.getAbreviacao();
            //FA Série / codigo
            prox_doc += " " + this.anoEconomico.getSerie() + "/" + doc_prox_cod;
            lb_proximo_documento.setText( "PRÓXIMO DOC: " + prox_doc );
        }
        catch ( Exception e )
        {
            e.printStackTrace();
            documento = null;
            lb_proximo_documento.setText( "" );
        }
    }
    
    private static double getTotalVendaIVASemIncluirDesconto()
    {
        double taxa = 0, total_iva_local = 0, preco_unitario = 0, sub_total_iliquido = 0;
        int qtd = 0;
        
        DefaultTableModel modelo = ( DefaultTableModel ) table.getModel();
        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {
            preco_unitario = CfMethods.parseMoedaFormatada( modelo.getValueAt( i, 2 ).toString() );
            qtd = Integer.parseInt( modelo.getValueAt( i, 3 ).toString() );
            sub_total_iliquido = ( preco_unitario * qtd );
            taxa = Double.parseDouble( modelo.getValueAt( i, 6 ).toString() );
            total_iva_local += ( ( ( sub_total_iliquido ) * ( taxa / 100 ) ) );
        }
        
        return total_iva_local;
    }
    
    private static double getTotalVendaIVASemIncluirDesconto( List<ItemCompras> list )
    {
        double taxa = 0, total_iva_local = 0, preco_unitario = 0, sub_total_iliquido = 0;
        double qtd = 0;
        
        DefaultTableModel modelo = ( DefaultTableModel ) table.getModel();
        
        for ( ItemCompras itemCompras : list )
        {
            preco_unitario = itemCompras.getPrecoCompra();
            qtd = itemCompras.getQuantidade();
            sub_total_iliquido = ( preco_unitario * qtd );
            taxa = itemCompras.getValorIva();
            total_iva_local += ( ( ( sub_total_iliquido ) * ( taxa / 100 ) ) );
            
        }
        
        return total_iva_local;
    }
    
    private static double getTotalIliquido()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) table.getModel();
        int qtd = 0;
        double total_iliquido_local = 0, preco_unitario = 0;
        
        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {
            preco_unitario = CfMethods.parseMoedaFormatada( modelo.getValueAt( i, 2 ).toString() );
            qtd = Integer.parseInt( modelo.getValueAt( i, 3 ).toString() );
            total_iliquido_local += ( preco_unitario * qtd );
            
        }
        
        return total_iliquido_local;
    }
    
    private static double getTotalIliquido( List<ItemCompras> lista )
    {
        DefaultTableModel modelo = ( DefaultTableModel ) table.getModel();
        double qtd = 0;
        double total_iliquido_local = 0, preco_unitario = 0;
        
        for ( ItemCompras itemCompras : lista )
        {
            preco_unitario = itemCompras.getPrecoCompra();
            qtd = itemCompras.getQuantidade();
            total_iliquido_local += ( preco_unitario * qtd );
        }
        
        return total_iliquido_local;
    }
    
    private static double getGrossTotal()
    {
        System.out.println( "TOTALILIQUIDO: " + getTotalVendaIVASemIncluirDesconto() );
        System.out.println( "TOTALVENDAIVASEMDESCONTO: " + getTotalVendaIVASemIncluirDesconto() );
        return getTotalIliquido() + getTotalVendaIVASemIncluirDesconto();
    }
    
    private static double getGrossTotal( List<ItemCompras> lista )
    {
        System.out.println( "TOTALILIQUIDO: " + getTotalVendaIVASemIncluirDesconto( lista ) );
        System.out.println( "TOTALVENDAIVASEMDESCONTO: " + getTotalVendaIVASemIncluirDesconto( lista ) );
        return getTotalIliquido( lista ) + getTotalVendaIVASemIncluirDesconto( lista );
    }
    
    private static void actualizar_cod_doc()
    {
        documento.setCodUltimoDoc( doc_prox_cod );
        documento.setDescricaoUltimoDoc( prox_doc );
        documento.setUltimaData( new Date() );
        try
        {
            documentoDao.edit( documento );
        }
        catch ( Exception e )
        {
            System.err.println( "Falha ao actualizar o documento" );
        }
    }
    
    private void setWindowsListener()
    {
        
        this.addWindowListener( new WindowAdapter()
        {
            @Override
            public void windowActivated( WindowEvent e )
            {
                mostrar_proximo_codigo_documento();
            }
            
        } );
        
    }
    
    private static boolean salvar_item( List<ItemCompras> itens )
    {
        int last_compra = encomendaDao.getLastCompra();
        Compras encomenda = encomendaDao.findCompras( last_compra );
        for ( ItemCompras linha_local : itens )
        {
            try
            {
                linha_local.setFkCompra( encomenda );
                itemComprasDao.create( linha_local );
                
            }
            catch ( Exception e )
            {
                e.printStackTrace();
                return false;
            }
        }
        return true;
    }
    
    private static String getMotivoIsento()
    {
        List<TbProduto> lista_produto_isentos = new ArrayList<>();
        lista_produto_isentos = getProdutosIsentos();
        String motivos_isentos = MetodosUtil.getMotivoIsensaoProdutos( lista_produto_isentos );
        System.err.println( "MOTIVOS: " + motivos_isentos );
        return motivos_isentos;
        
    }
    
    private static List<TbProduto> getProdutosIsentos()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) table.getModel();
        double taxa = 0.0;
        int codigo_produto = 0;
        List<TbProduto> lista_produtos_isentos = new ArrayList<>();
        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {
            codigo_produto = Integer.parseInt( modelo.getValueAt( i, 0 ).toString() );
            taxa = Double.parseDouble( modelo.getValueAt( i, 6 ).toString() );
            if ( taxa == 0.0 )
            {
                lista_produtos_isentos.add( produtoDao.findTbProduto( codigo_produto ) );
            }
        }
        
        return lista_produtos_isentos;
        
    }
    
    private static void esvaziar_tabela()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) table.getModel();
        modelo.setRowCount( 0 );
    }
    
    private static void actualizar_status()
    {
        try
        {
            String cod_fact = lista_compras_apuradas.getSelectedValue();
            Compras encomenda_local = encomendaDao.findByCodFact( cod_fact );
            encomenda_local.setEncomendado( Boolean.TRUE );
            encomendaDao.edit( encomenda_local );
        }
        catch ( Exception e )
        {
            e.printStackTrace();
        }
        
    }
    
}
