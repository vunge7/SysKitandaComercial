/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.*;
import entity.*;
import java.util.List;
import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import static kitanda.util.CfMethodsSwing.*;
import static util.JPAEntityMannagerFactoryUtil.*;
import util.JPAEntityMannagerFactoryUtil;
//import static util.MetodosUtil.aplicarCertaTaxaAoValor;

/**
 *
 * @author tagif
 */
public class NotaCreditoEmitirVisao extends javax.swing.JFrame
{

//    /**
//     * Creates new form NotaCreditoEmitirVisao
//     */
//    public NotaCreditoEmitirVisao ()
//    {
//        initComponents ();
//
//        popularComponentes ();
//
//    }
//
//    /**
//     * This method is called from within the constructor to
//     * initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is
//     * always regenerated by the Form Editor.
//     */
//    @SuppressWarnings ( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        precoJSpinner = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        quantidadeJSpinner = new javax.swing.JSpinner();
        notasJScrollPane = new javax.swing.JScrollPane();
        notasJTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img32x32/icons8_ok_100x126px_1.png"))); // NOI18N
        jLabel1.setText("Emissão de Notas de Credito");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel1.setIconTextGap(5);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Número de ordem da fatura");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Nome da Firma / Cliente");

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextField2ActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "O.B.S.:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("SansSerif", 1, 12))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Valor");

        precoJSpinner.setEnabled(false);
        precoJSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                precoJSpinnerStateChanged(evt);
            }
        });

        jButton3.setText("Adicionar");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Produto");

        jSpinner3.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                jSpinner3StateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Quantidade");

        quantidadeJSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                quantidadeJSpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                    .addComponent(jButton3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinner3)
                            .addComponent(jTextField2)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                            .addComponent(precoJSpinner)
                            .addComponent(quantidadeJSpinner))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quantidadeJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(precoJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );

        notasJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        notasJScrollPane.setViewportView(notasJTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notasJScrollPane)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notasJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img32x32/icons8_ok_32px_1.png"))); // NOI18N
        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img32x32/icons8_cancel_32px_1.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField2ActionPerformed
    {//GEN-HEADEREND:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
       // salvarNotaDeCredito ();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        //terminar ();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        // adicionarItemNota ();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_jSpinner1StateChanged
    {//GEN-HEADEREND:event_jSpinner1StateChanged
        //atualizarCliente ( evt );
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner3StateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_jSpinner3StateChanged
    {//GEN-HEADEREND:event_jSpinner3StateChanged
        //atualizarQuantidade ( evt );
    }//GEN-LAST:event_jSpinner3StateChanged

    private void quantidadeJSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_quantidadeJSpinnerStateChanged
    {//GEN-HEADEREND:event_quantidadeJSpinnerStateChanged
        //aualizarPreco ( evt );
    }//GEN-LAST:event_quantidadeJSpinnerStateChanged

    private void precoJSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_precoJSpinnerStateChanged
    {//GEN-HEADEREND:event_precoJSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_precoJSpinnerStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main ( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels () )
            {
                if ( "Nimbus".equals ( info.getName () ) )
                {
                    javax.swing.UIManager.setLookAndFeel ( info.getClassName () );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger ( NotaCreditoEmitirVisao.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger ( NotaCreditoEmitirVisao.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger ( NotaCreditoEmitirVisao.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger ( NotaCreditoEmitirVisao.class.getName () ).log ( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater ( new Runnable ()
        {
            public void run ()
            {
                new NotaCreditoEmitirVisao ().setVisible ( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JScrollPane notasJScrollPane;
    private javax.swing.JTable notasJTable;
    private javax.swing.JSpinner precoJSpinner;
    private javax.swing.JSpinner quantidadeJSpinner;
    // End of variables declaration//GEN-END:variables

//    private void terminar ()
//    {
//        dispose ();
//    }
//
//    private void popularComponentes ()
//    {
//        //criarSpinnerListModel ( Object... values )
//        jSpinner1.setModel ( criarSpinnerListModel ( pegarTodasFacturas () ) );
//        jSpinner3.setModel ( criarSpinnerListModel ( pegarpProdutosDaFacturas () ) );
//        precoJSpinner.setModel ( criarSpinnerDoubleModel ( 0, 0, 0 ) );
//
//        jTextField2.setText ( "" );
//        precoJSpinner.setEnabled ( false );
//
//        DefaultTableModel defaultTableModel = new DefaultTableModel ( new Object[]
//        {
//            "CLIENTE", "FACTURA", "QTD ANT.", "VALOR ANT.", "Qtd ATUAL", "VALOR ATUAL", "OBS"
//        }, 0 );
//
//        notasJTable.setModel ( defaultTableModel );
//    }
//
//    public Object[] pegarTodasFacturas ()
//    {
//        VendaDao dao = new VendaDao ( JPAEntityMannagerFactoryUtil.em );
//        List<TbVenda> vendas = dao.findVendaEntities ();
//        String[] vendasObject = new String[ vendas.size () + 1 ];
//        int vendaAtual = 0;
//
//        vendasObject[vendaAtual ++] = "";
//        for ( TbVenda venda : vendas )
//        {
//            vendasObject[vendaAtual ++] = venda.getCodFact ();
//        }
//
//        return vendasObject;
//    }
//
//    private void atualizarCliente ( ChangeEvent evt )
//    {
//        JSpinner jSpinner = ( JSpinner ) evt.getSource ();
//        String codFacturaSelecionada = ( String ) jSpinner.getValue ();
//
//        VendaDao dao = new VendaDao ( JPAEntityMannagerFactoryUtil.em );
//        TbVenda venda = dao.getVendaByCoFactura ( codFacturaSelecionada );
//
//        if ( venda != null )
//        {
//            jTextField2.setText ( venda.getNomeCliente () );
//            jSpinner3.setModel ( criarSpinnerListModel ( pegarpProdutosDaFacturas () ) );
//        }
//        else
//        {
//            jTextField2.setText ( "" );
//        }
//
//    }
//
//    private void adicionarItemNota ()
//    {
//        String cliente = jTextField2.getText ();
//        String factura = ( String ) jSpinner1.getValue ();
//        Integer quantidade = ( Integer ) quantidadeJSpinner.getValue ();
//        Integer quantidadeAnterior = ( Integer ) ( ( SpinnerNumberModel ) quantidadeJSpinner.getModel () ).getMaximum ();
//        Double valorAnterior = ( Double ) ( ( SpinnerNumberModel ) precoJSpinner.getModel () ).getMaximum ();
//        Double valorAtual = ( Double ) precoJSpinner.getValue ();
//        DefaultTableModel defaultTableModel = ( DefaultTableModel ) notasJTable.getModel ();
//        String obs = jTextArea1.getText ();
//
//        defaultTableModel.addRow ( new Object[]
//        {
//            cliente, factura, quantidadeAnterior, valorAnterior, quantidade, valorAtual, obs
//        } );
//    }
//
//    private Object[] pegarpProdutosDaFacturas ()
//    {
//        ItemVendaDao itemVendaDao = new ItemVendaDao ( JPAEntityMannagerFactoryUtil.em );
//        VendaDao dao = new VendaDao ( JPAEntityMannagerFactoryUtil.em );
//
//        String codFacturaSelecionada = ( String ) jSpinner1.getValue ();
//        String[] itensVendasObject = new String[]
//        {
//            ""
//        };
//
//        TbVenda venda = dao.getVendaByCoFactura ( codFacturaSelecionada );
//
//        if ( venda != null )
//        {
//            List<TbItemVenda> itemVendas = itemVendaDao.getAllItemVendasByIdVenda ( venda.getCodigo () );
//            itensVendasObject = new String[ itemVendas.size () + 1 ];
//            int itemVendaAtual = 0;
//
//            itensVendasObject[itemVendaAtual ++] = "";
//            for ( TbItemVenda itemVenda : itemVendas )
//            {
//                itensVendasObject[itemVendaAtual ++] = itemVenda.getCodigoProduto ().getDesignacao ();
//            }
//        }
//
//        return itensVendasObject;
//    }
//
//    private void limpar ()
//    {
//        jTextField2.setText ( "" );
//    }
//
//    private void atualizarQuantidade ( ChangeEvent evt )
//    {
//        TbItemVenda itemVenda = getItemVenda ();
//
//        if ( itemVenda != null )
//        {
//            int quantidadeVendida = itemVenda.getQuantidade ();
//            Double totalComIva = aplicarCertaTaxaAoValor ( itemVenda.getTotal (), itemVenda.getValorIva () );
//            Double precoAtual = totalComIva - itemVenda.getDesconto ();
//
//            quantidadeJSpinner.setModel ( criarSpinnerNumberModel ( 0, quantidadeVendida, quantidadeVendida ) );
//
//            precoJSpinner.setModel ( criarSpinnerDoubleModel ( 0, precoAtual * quantidadeVendida, precoAtual * quantidadeVendida ) );
//
//        }
//    }
//
//    private void salvarNotaDeCredito ()
//    {
//        DefaultTableModel defaultTableModel = ( DefaultTableModel ) notasJTable.getModel ();
//
//        Notas notas = new Notas ();
//        
//        for ( int rowIndex = 0; rowIndex < defaultTableModel.getRowCount (); rowIndex ++ )
//        {
//            ItensNota itensNota = new ItensNota ();
//                        
//            //"CLIENTE"[ 0 ], "FACTURA"[ 1 ], "QTD ANT."[ 2 ], "VALOR ANT."[ 3 ], "Qtd ATUAL"[ 4 ], "VALOR ATUAL"[ 5 ], "OBS"[ 6 ]
//            int i = 0;
//            String nomeClienteText = ( String ) defaultTableModel.getValueAt ( rowIndex, i ++ );
//            String referenciaFacturaText = ( String ) defaultTableModel.getValueAt ( rowIndex, i ++ );
//            String quantidadeAnteriorText = ( String ) defaultTableModel.getValueAt ( rowIndex, i ++ );
//            String valorAnteriorText = ( String ) defaultTableModel.getValueAt ( rowIndex, i ++ );
//            String quantidadeAtualText = ( String ) defaultTableModel.getValueAt ( rowIndex, i ++ );
//            String valorAtualText = ( String ) defaultTableModel.getValueAt ( rowIndex, i ++ );
//            String obs = ( String ) defaultTableModel.getValueAt ( rowIndex, i ++ );
//
//            int quantidade = Integer.parseInt ( quantidadeAtualText );
//            Double valor = Double.parseDouble ( valorAtualText );
//
//            notas.setTotal ( quantidade * valor );
//
//        }
//    }
//
//    private void aualizarPreco ( ChangeEvent evt )
//    {
//        TbItemVenda itemVenda = getItemVenda ();
//        JSpinner quantidadeJSpinner = ( JSpinner ) evt.getSource ();
//
//        if ( itemVenda != null )
//        {
//            int quantidadeVendida = ( int ) quantidadeJSpinner.getValue ();
//            Double totalComIva = aplicarCertaTaxaAoValor ( itemVenda.getTotal (), itemVenda.getValorIva () );
//            Double precoAtual = totalComIva - itemVenda.getDesconto ();
//
//            precoJSpinner.setValue ( precoAtual * quantidadeVendida );
//        }
//    }
//
//    public TbVenda getVenda ()
//    {
//        String codFacturaSelecionada = ( String ) jSpinner1.getValue ();
//
//        VendaDao dao = new VendaDao ( JPAEntityMannagerFactoryUtil.em );
//        return dao.getVendaByCoFactura ( codFacturaSelecionada );
//    }
//
//    public TbItemVenda getItemVenda ()
//    {
//        String codProdutoSelecionado = ( String ) jSpinner3.getValue ();
//
//        ItemVendaDao itemVendaDao = new ItemVendaDao ( em );
//
//        TbVenda venda = getVenda ();
//
//        return itemVendaDao.getByIdVendaAndProductName ( venda.getCodigo (), codProdutoSelecionado );
//
//    }

}
