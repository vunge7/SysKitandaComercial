/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;


import java.sql.Connection;
import controller.ClienteController;
import controller.PagamentoVendaCreditoController;
import controller.TipoProdutoController;
import controller.VendaController;
import dao.ItemVendaDao;
import dao.StockDao;
import dao.VasilhameDao;
import dao.VendaDao;
import entity.TbItemVenda;
import entity.TbStock;
import entity.TbVasilhame;
import entity.TbVenda;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.ItemVendaModelo;
import modelo.PagamentoVendaCreditoModelo;
import modelo.TipoProdutoModelo;
import modelo.VendaModelo;
import util.BDConexao;
import util.JPAEntityMannagerFactoryUtil;
import util.MetodosUtil;
import util.OperacaoSistemaUtil;

/**
 *
 * @author Domingos Dala Vunge
 */
public class AnulamentoFacturaVisao extends javax.swing.JDialog
{

    private BDConexao conexao;

    private EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
    private VendaDao vendaDao = new VendaDao( emf );
    private ItemVendaDao itemVendaDao = new ItemVendaDao( emf );
    private TbVenda venda;
    private StockDao stockDao = new StockDao( emf );
    private VasilhameDao vasilhameDao = new VasilhameDao( emf );

    private TbVasilhame vasilhame;
    private TipoProdutoModelo tipoProdutoModelo;
    private TipoProdutoController tipoProdutoController;
    private Frame parent;
    private int codigo = 0;
    private int codigo_venda = 0;
    private boolean eliminar = false;
    //ARMAZEM GERAL 
    private static int id_armzem = 1;
    private OperacaoSistemaUtil osu = new OperacaoSistemaUtil();

    public AnulamentoFacturaVisao( java.awt.Frame parent, boolean modal, BDConexao conexao )
    {
        //this.parent =  parent1;

        super( parent, modal );

        this.parent = parent;

        initComponents();
        //confLabel();
        setLocationRelativeTo( null );

        tipoProdutoModelo = new TipoProdutoModelo();
        this.conexao = conexao;
        tipoProdutoController = new TipoProdutoController( conexao );
        //txtFactura.addKeyListener( new TratarEventoTeclado() );

    }

    public void confLabel()
    {

        lbFactura.setHorizontalAlignment( JLabel.RIGHT );
        lbCliente.setHorizontalAlignment( JLabel.RIGHT );
        lbDataVenda.setHorizontalAlignment( JLabel.RIGHT );
        lbTotalVenda.setHorizontalAlignment( JLabel.RIGHT );

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbFactura = new javax.swing.JLabel();
        lbCliente = new javax.swing.JLabel();
        txtFactura = new javax.swing.JTextField();
        txtNomeCliente = new javax.swing.JTextField();
        lbDataVenda = new javax.swing.JLabel();
        lbTotalVenda = new javax.swing.JLabel();
        txtTotalVenda = new javax.swing.JTextField();
        dcDataVenda = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_item_venda = new javax.swing.JTable();
        lbTotalVenda1 = new javax.swing.JLabel();
        txtValorEntregue = new javax.swing.JTextField();
        lbTotalVenda2 = new javax.swing.JLabel();
        txtSaldoTroco = new javax.swing.JTextField();
        status_mensagem_primaria = new javax.swing.JLabel();
        status_mensagem_secundaria = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...:::::  KITANDA - ANULAMENTO DE FACTURA ::::...");
        setIconImage(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/2934_32x32.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.setAlignmentX(0.5F);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/LOGOUT - VERMELHO/Logout 32x32.png"))); // NOI18N
        btnCancelar.setToolTipText("Sair");
        btnCancelar.setAlignmentX(0.5F);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(51, 153, 0))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N

        lbFactura.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbFactura.setText("N.Factura");

        lbCliente.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbCliente.setText("Cliente:");

        txtFactura.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacturaActionPerformed(evt);
            }
        });

        txtNomeCliente.setEditable(false);
        txtNomeCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNomeCliente.setCaretColor(new java.awt.Color(255, 255, 255));
        txtNomeCliente.setEnabled(false);

        lbDataVenda.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbDataVenda.setText("Data Venda:");

        lbTotalVenda.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTotalVenda.setText("Total Venda:");

        txtTotalVenda.setEditable(false);
        txtTotalVenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotalVenda.setCaretColor(new java.awt.Color(255, 255, 255));
        txtTotalVenda.setEnabled(false);

        dcDataVenda.setEnabled(false);
        dcDataVenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        table_item_venda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N.º Item", "Cod. Prod/Serv", "Descrição", "PU", "Qd", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_item_venda);

        lbTotalVenda1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTotalVenda1.setText("Valor Entregue:");

        txtValorEntregue.setEditable(false);
        txtValorEntregue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtValorEntregue.setCaretColor(new java.awt.Color(255, 255, 255));
        txtValorEntregue.setEnabled(false);

        lbTotalVenda2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTotalVenda2.setText("Saldo/Troco:");

        txtSaldoTroco.setEditable(false);
        txtSaldoTroco.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSaldoTroco.setCaretColor(new java.awt.Color(255, 255, 255));
        txtSaldoTroco.setEnabled(false);

        status_mensagem_primaria.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        status_mensagem_primaria.setForeground(new java.awt.Color(204, 153, 0));
        status_mensagem_primaria.setText("sahdbvhsdva");

        status_mensagem_secundaria.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        status_mensagem_secundaria.setText("...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFactura)
                                    .addComponent(lbFactura, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(status_mensagem_secundaria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(117, 117, 117)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dcDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbDataVenda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTotalVenda)
                            .addComponent(lbTotalVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtValorEntregue)
                            .addComponent(lbTotalVenda1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(177, 177, 177)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSaldoTroco)
                            .addComponent(lbTotalVenda2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(status_mensagem_primaria, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lbCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(status_mensagem_primaria)
                        .addGap(16, 16, 16)
                        .addComponent(status_mensagem_secundaria)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbDataVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcDataVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbFactura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(lbTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbTotalVenda1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValorEntregue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbTotalVenda2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSaldoTroco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        int opcao = new JOptionPane().showConfirmDialog( null, "Tens a certeza que pretendes eliminar esta factura ? " );

        if ( opcao == JOptionPane.YES_OPTION )
        {
            procedimento_eliminar();

        }
        else
        {
            JOptionPane.showMessageDialog( null, "Factura não eliminada", "AVISO", JOptionPane.WARNING_MESSAGE );
        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacturaActionPerformed
        // TODO add your handling code here:
        busca_factura();
    }//GEN-LAST:event_txtFacturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Windows".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoFacturaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoFacturaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoFacturaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( AnulamentoFacturaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                AnulamentoFacturaVisao dialog = new AnulamentoFacturaVisao( new javax.swing.JFrame(), true, BDConexao.getInstancia() );
                dialog.addWindowListener( new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing( java.awt.event.WindowEvent e )
                    {
                        System.exit( 0 );
                    }
                } );
                dialog.setVisible( true );
            }
        } );
    }

    /* CRIACAO DO GETS  */
    public String getTipoProduto()
    {
        return txtTotalVenda.getText();
    }

    public void limpar()
    {

        txtTotalVenda.setText( "" );
        txtFactura.setText( "" );

    }

    public boolean campos_invalidos()
    {
        Color backGround = Color.WHITE;
        Color foreGround = Color.BLACK;
        Color caretColor = Color.BLACK;

        if ( getTipoProduto().equals( "" ) )
        {
            txtTotalVenda.setBackground( backGround );
            txtTotalVenda.setForeground( foreGround );
            txtTotalVenda.setCaretColor( caretColor );
            JOptionPane.showMessageDialog( null, "Pf. Preêncha o campo Nome: " );
            return true;
        }

        return false;
    }

    public String getDataPagamento()
    {
        GregorianCalendar gc = new GregorianCalendar();

        String dataSelecionada = gc.get( GregorianCalendar.YEAR ) + "-"
                + ( gc.get( GregorianCalendar.MONTH ) + 1 ) + "-"
                + gc.get( GregorianCalendar.DATE );
        return dataSelecionada;
    }

    public void salvar()
    {

        PagamentoVendaCreditoModelo pagamentoVendaCreditoModelo = new PagamentoVendaCreditoModelo();

        pagamentoVendaCreditoModelo.setCodigo_venda( codigo_venda );
        pagamentoVendaCreditoModelo.setData_pagamento( getDataPagamento() );

        if ( new PagamentoVendaCreditoController().salvar( pagamentoVendaCreditoModelo ) )
        {

            JOptionPane.showMessageDialog( null, "CREDITO PAGO COM SUCESSO!..." );

        }
        else
        {
            JOptionPane.showMessageDialog( null, "CREDITO PAGO COM SUCESSO!...", "DM_SOFT", JOptionPane.ERROR );
        }

    }

    public boolean eliminar_item_produto( int cod_venda )
    {

        return conexao.executeUpdate( "DELETE FROM tb_item_venda WHERE codigo_venda = " + cod_venda );
    }

    public boolean eliminar_factura( int cod_venda )
    {
        return conexao.executeUpdate( "DELETE FROM tb_venda  WHERE codigo = " + cod_venda );
    }

    public void eliminar()
    {

        int codigo_venda = Integer.parseInt( txtFactura.getText() );

        if ( eliminar )
        {
            try
            {

                VendaModelo vendaModelo = new VendaController( conexao ).getVenda( codigo_venda );

                if ( vendaModelo.getCodigo() == codigo_venda && vendaModelo.getPerformance().equals( "false" ) )
                {
                    id_armzem = vendaModelo.getIdArmazemFK();
                    actualizar_quantidade( codigo_venda );
                    if ( vendaModelo.getPerformance().equals( "false" ) )
                    {
                        if ( eliminar_item_produto( codigo_venda ) )
                        {
                            if ( eliminar_factura( codigo_venda ) )
                            {
                                JOptionPane.showMessageDialog( null, "FACTURA ELIMINADA COM SUCESSO!... " );
                            }
                            else
                            {
                                JOptionPane.showMessageDialog( null, "ERRO AO ELIMIAR OS PROSUTOS RELACIONADOS A VENDA ", "DM_SOFT", JOptionPane.ERROR );
                            }

                        }
                        else
                        {
                            JOptionPane.showMessageDialog( null, "ERRO AO ELIMINAR OS PROSUTOS RELACIONADOS A VENDA ", "DM_SOFT", JOptionPane.ERROR );
                        }
                    }

                }
            }
            catch ( SQLException ex )
            {
                Logger.getLogger( AnulamentoFacturaVisao.class.getName() ).log( Level.SEVERE, null, ex );
            }

        }
    }

    public void actualizar_quantidade( Integer cod_venda )
    {

        Vector<ItemVendaModelo> lista = conexao.getAllItemVendaByCodigo( cod_venda );
        ItemVendaModelo itemVendaModelo;

        //1 Armazem geral
        int quantidade = 0;

        for ( int i = 0; i < lista.size(); i++ )
        {

            itemVendaModelo = lista.elementAt( i );
            quantidade = BDConexao.getQuantidade_Existente( itemVendaModelo.getCodigo_produto(), id_armzem ) + itemVendaModelo.getQuantidade();
            conexao.executeUpdate( "UPDATE tb_stock SET quantidade_existente = " + quantidade + " WHERE cod_produto_codigo = " + itemVendaModelo.getCodigo_produto() + " AND cod_armazem = " + id_armzem );

            if ( vasilhameDao.exist_vasilhame( itemVendaModelo.getCodigo_produto(), id_armzem ) )
            {
                actualizar_vasilhame( vasilhameDao.getVasilhameByIdProdutoAndIdArmazem( itemVendaModelo.getCodigo_produto(), id_armzem ), itemVendaModelo.getQuantidade() );
            }

        }
// 
    }

    //CLASSE EVENTO TECLADO 
    //----------- evento do teclado ---------------------------------------
    class TratarEventoTeclado implements KeyListener
    {

        String prefixo = null;

        public void keyPressed( KeyEvent evt )
        {

            VendaModelo vendaModelo = new VendaModelo();
            VendaController vendaController = new VendaController( conexao );

            if ( evt.getKeyCode() == KeyEvent.VK_ENTER )
            {
                char key = evt.getKeyChar();
                prefixo = txtFactura.getText().trim() + key;

                try
                {
                    vendaModelo = new VendaModelo();
                    System.err.println( prefixo );

                    vendaModelo = vendaController.getVenda_Reeprimir( Integer.parseInt( txtFactura.getText().trim() ) );

                    codigo_venda = vendaModelo.getCodigo();

                    txtNomeCliente.setText( new ClienteController( conexao ).getCliente( vendaModelo.getCodigo_cliente() ).getNome() );
                    txtTotalVenda.setText( String.valueOf( vendaModelo.getTotal_venda() ) );
                    // txtValorEntregue.setText( String.valueOf( ven  ));

                    if ( !vendaModelo.getDataVenda().equals( "" ) )
                    {

                        String data = String.valueOf( vendaModelo.getDataVenda() );
                        //2012-06-26
                        int dia = Integer.parseInt( data.substring( 8, 10 ) );;
                        int mes = Integer.parseInt( data.substring( 5, 7 ) );;
                        int ano = Integer.parseInt( data.substring( 0, 4 ) );
                        dcDataVenda.setDate( new Date( ano - 1900, mes - 1, dia ) );

                    }
                }
                catch ( SQLException ex )
                {
                    JOptionPane.showMessageDialog( null, "Esta factura nao existe!... Ou ja foi elimnada!...", "DM_SOFT", JOptionPane.WARNING_MESSAGE );
                    dcDataVenda.setDate( new Date( 1900, 2, 1 ) );
                    eliminar = false;

                    Logger.getLogger( AnulamentoFacturaVisao.class.getName() ).log( Level.SEVERE, null, ex );

                }
                catch ( Exception e )
                {
                    eliminar = false;
                    JOptionPane.showMessageDialog( null, "Esta factura nao existe!... Ou ja foi elimnada!...", "DM_SOFT", JOptionPane.WARNING_MESSAGE );
                }
                finally
                {
                    eliminar = true;
                }

            }
        }

        public void keyReleased( KeyEvent evt )
        {
        }

        public void keyTyped( KeyEvent evt )
        {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnEliminar;
    private com.toedter.calendar.JDateChooser dcDataVenda;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbDataVenda;
    private javax.swing.JLabel lbFactura;
    private javax.swing.JLabel lbTotalVenda;
    private javax.swing.JLabel lbTotalVenda1;
    private javax.swing.JLabel lbTotalVenda2;
    public static javax.swing.JLabel status_mensagem_primaria;
    public static javax.swing.JLabel status_mensagem_secundaria;
    private javax.swing.JTable table_item_venda;
    public static javax.swing.JTextField txtFactura;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtSaldoTroco;
    private javax.swing.JTextField txtTotalVenda;
    private javax.swing.JTextField txtValorEntregue;
    // End of variables declaration//GEN-END:variables

    private boolean actualizar_vasilhame( TbVasilhame vasilhame, double qtd )
    {

        double qtd_actualizada = vasilhame.getQtdExistente() - qtd;
        vasilhame.setQtdExistente(  qtd_actualizada );
        try
        {
            vasilhameDao.edit( vasilhame );
            return true;
        }
        catch ( Exception e )
        {
            return false;
        }

    }

    private void procedimento_eliminar()
    {

        List<TbItemVenda> lista = itemVendaDao.getAllItemVendasByIdVenda( this.venda.getCodigo() );
        TbItemVenda itemVenda;
        TbStock stock_local;
        int quantidade = 0;
        boolean elimnado = true;

        if ( lista.get( 0 ).getCodigo() != 0 )
        {
            for ( int i = 0; i < lista.size(); i++ )
            {
                itemVenda = lista.get( i );
                try
                {
                    stock_local = stockDao.get_stock_by_id_produto_and_id_armazem( itemVenda.getCodigoProduto().getCodigo(), this.venda.getIdArmazemFK().getCodigo() );
                    if ( stock_local.getCodigo() != 0 )
                    {

                        MetodosUtil.adiciona_quantidade( itemVenda.getCodigoProduto().getCodigo(), itemVenda.getQuantidade(), this.venda.getIdArmazemFK().getCodigo(), conexao );
                    }
//                            if (vasilhameDao.exist_vasilhame( itemVenda.getCodigoProduto().getCodigo(), this.venda.getIdArmazemFK().getCodigo())) {
//                                actualizar_vasilhame(vasilhameDao.getVasilhameByIdProdutoAndIdArmazem(itemVenda.getCodigoProduto().getCodigo(), this.venda.getIdArmazemFK().getCodigo()), itemVenda.getQuantidade());
//                            }

                }
                catch ( Exception e )
                {
                    elimnado = false;
                    JOptionPane.showMessageDialog( null, "Falha ao eliminar a factura", "DVML-COMERCIAL,Lda", JOptionPane.ERROR_MESSAGE );
                    break;
                }

            }

        }

        if ( elimnado )
        {

            MetodosUtil.subtrair_saldo_banco( this.venda.getTotalVenda().doubleValue(), this.venda.getIdBanco().getIdBanco(), conexao );
            //elimina a factua (lembra só altera o status e nada mais mas não elimina por completo)
            vendaDao.alterar_status_venda( this.venda.getCodigo(), "true" );
            limpar_dados();
            JOptionPane.showMessageDialog( null, "Factura eliminada com sucesso!", "DVML-COMERCIAL,Lda", JOptionPane.INFORMATION_MESSAGE );
        }

    }

    private void busca_factura()
    {

        try
        {

            this.venda = vendaDao.findTbVenda( Integer.parseInt( txtFactura.getText() ) );

            if ( this.venda.getStatusEliminado().equals( "false" ) )
            {
                try
                {
                    txtNomeCliente.setText( this.venda.getNomeCliente() );
                    dcDataVenda.setDate( this.venda.getDataVenda() );
                    txtTotalVenda.setText( String.valueOf( this.venda.getTotalVenda() ) );
                    txtValorEntregue.setText( String.valueOf( this.venda.getValorEntregue() ) );
                    txtSaldoTroco.setText( String.valueOf( this.venda.getTroco() ) );
                    preencher_tabela();

                }
                catch ( Exception e )
                {
                    // e.printStackTrace();

                }

            }
            else
            {
                this.venda = null;
                limpar_dados();
                JOptionPane.showMessageDialog( null, "Possivelmente esta factura nao existe!... Ou ja foi elimnada \n Convém ir à reciclagem!...", "DVML-COMERCIAL, Lda", JOptionPane.WARNING_MESSAGE );
            }

        }
        catch ( Exception e )
        {
            limpar_dados();
            JOptionPane.showMessageDialog( null, "Possivelmente esta factura nao existe!... Ou ja foi elimnada \n Convém ir à reciclagem!...", "DVML-COMERCIAL, Lda", JOptionPane.WARNING_MESSAGE );
        }

    }

    private void limpar_dados()
    {

        txtFactura.setText( "" );
        txtNomeCliente.setText( "" );
        dcDataVenda.setDate( null );
        esvazia_tabela_iten();
        txtTotalVenda.setText( "" );
        txtValorEntregue.setText( "" );
        txtSaldoTroco.setText( "" );
        txtFactura.requestFocus();

    }

    private void esvazia_tabela_iten()
    {

        DefaultTableModel modelo = ( DefaultTableModel ) table_item_venda.getModel();
        modelo.setRowCount( 0 );

    }

    private void preencher_tabela()
    {

        DefaultTableModel modelo = ( DefaultTableModel ) table_item_venda.getModel();
        List<TbItemVenda> list_iten = itemVendaDao.getAllItemVendasByIdVenda( this.venda.getCodigo() );

        modelo.setRowCount( 0 );
        for ( int i = 0; i < list_iten.size(); i++ )
        {
            TbItemVenda itemVenda = list_iten.get( i );
            modelo.addRow( new Object[]
            {
                ( i + 1 ),
                itemVenda.getCodigoProduto().getCodigo(),
                itemVenda.getCodigoProduto().getDesignacao(),
                itemVenda.getCodigoProduto().getPreco(),
                itemVenda.getQuantidade(),
                itemVenda.getTotal()
            } );
        }

    }

}
