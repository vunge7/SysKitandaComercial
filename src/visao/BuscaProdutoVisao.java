/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import comercial.controller.StoksController;
import enties.util.BuscaModeloProduto;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Iterator;
import java.util.Objects;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import util.BDConexao;
import util.DVML;
import util.Definicoes;
import util.tabela_manual.render.RenderBusca;

/**
 *
 * @author Domingos Dala Vunge
 */
public class BuscaProdutoVisao extends javax.swing.JDialog
{

    private Vector<BuscaModeloProduto> fonte_dados = null;
    private StoksController stoksController;

    private int cod_armazem = 0, cod_janela = 0;

    public BuscaProdutoVisao( java.awt.Frame parent, boolean modal, int cod_armazem, int cod_janela, BDConexao conexao )
    {
        super( parent, modal );
        initComponents();
        setLocationRelativeTo( null );
        this.cod_armazem = cod_armazem;
        this.cod_janela = cod_janela;
        txtDesignacao.requestFocus();
        stoksController = new StoksController( conexao );
        fonte_dados = stoksController.getFonte( cod_armazem, cod_janela );

        tabela_busca.setDefaultRenderer( Object.class, new RenderBusca( cod_armazem, conexao ) );
        txtDesignacao.requestFocus();
        try
        {
            adicionar_tabela();
        }
        catch ( Exception e )
        {
            e.printStackTrace();
        }

        txtDesignacao.addKeyListener( new TratarEvento() );

        setBackGroundLegenda();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        txtDesignacao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_busca = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanelStockVazio = new javax.swing.JPanel();
        jPanelStockCritico = new javax.swing.JPanel();
        jPanelStockNormal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanelServico = new javax.swing.JPanel();
        lbTiTulo = new javax.swing.JLabel();
        lbTotalServico = new javax.swing.JLabel();
        lbTotalStockVazio = new javax.swing.JLabel();
        lbTotalStockCritico = new javax.swing.JLabel();
        lbTotalStockNormal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbTamnho = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tabela_busca.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        tabela_busca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Cod.", "Designacao", "Categoria", "Qtd", "PreÃ§o Venda", "Critico"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tabela_busca.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tabela_buscaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela_busca);
        if (tabela_busca.getColumnModel().getColumnCount() > 0)
        {
            tabela_busca.getColumnModel().getColumn(0).setPreferredWidth(15);
            tabela_busca.getColumnModel().getColumn(1).setPreferredWidth(520);
            tabela_busca.getColumnModel().getColumn(2).setPreferredWidth(120);
            tabela_busca.getColumnModel().getColumn(3).setPreferredWidth(10);
            tabela_busca.getColumnModel().getColumn(4).setPreferredWidth(50);
            tabela_busca.getColumnModel().getColumn(5).setPreferredWidth(2);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDesignacao, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDesignacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/LOGOUT - VERMELHO/Logout 32x32.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setText("BUSCA DE PRODUTO");

        jPanel3.setBackground(new java.awt.Color(231, 248, 235));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Legenda/Total", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelStockVazio.setBackground(new java.awt.Color(255, 180, 180));
        jPanelStockVazio.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanelStockVazioLayout = new javax.swing.GroupLayout(jPanelStockVazio);
        jPanelStockVazio.setLayout(jPanelStockVazioLayout);
        jPanelStockVazioLayout.setHorizontalGroup(
            jPanelStockVazioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelStockVazioLayout.setVerticalGroup(
            jPanelStockVazioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.add(jPanelStockVazio, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 41, 16));

        jPanelStockCritico.setBackground(new java.awt.Color(255, 239, 154));
        jPanelStockCritico.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanelStockCriticoLayout = new javax.swing.GroupLayout(jPanelStockCritico);
        jPanelStockCritico.setLayout(jPanelStockCriticoLayout);
        jPanelStockCriticoLayout.setHorizontalGroup(
            jPanelStockCriticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelStockCriticoLayout.setVerticalGroup(
            jPanelStockCriticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.add(jPanelStockCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 41, 16));

        jPanelStockNormal.setBackground(new java.awt.Color(255, 255, 255));
        jPanelStockNormal.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanelStockNormalLayout = new javax.swing.GroupLayout(jPanelStockNormal);
        jPanelStockNormal.setLayout(jPanelStockNormalLayout);
        jPanelStockNormalLayout.setHorizontalGroup(
            jPanelStockNormalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelStockNormalLayout.setVerticalGroup(
            jPanelStockNormalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );

        jPanel3.add(jPanelStockNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 41, -1));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("stock vazio");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 90, 20));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("stock critico");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, -1));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("stock normal");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, -1));

        jPanelServico.setBackground(new java.awt.Color(144, 238, 144));
        jPanelServico.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanelServicoLayout = new javax.swing.GroupLayout(jPanelServico);
        jPanelServico.setLayout(jPanelServicoLayout);
        jPanelServicoLayout.setHorizontalGroup(
            jPanelServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );
        jPanelServicoLayout.setVerticalGroup(
            jPanelServicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 12, Short.MAX_VALUE)
        );

        jPanel3.add(jPanelServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        lbTiTulo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbTiTulo.setText("servico");
        jPanel3.add(lbTiTulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 90, -1));

        lbTotalServico.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbTotalServico.setText("0");
        jPanel3.add(lbTotalServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 40, -1));

        lbTotalStockVazio.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbTotalStockVazio.setText("0");
        jPanel3.add(lbTotalStockVazio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 40, -1));

        lbTotalStockCritico.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbTotalStockCritico.setText("0");
        jPanel3.add(lbTotalStockCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 40, -1));

        lbTotalStockNormal.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbTotalStockNormal.setText("0");
        jPanel3.add(lbTotalStockNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 40, -1));

        jLabel2.setText("Total");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, 90));

        lbTamnho.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        lbTamnho.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbTamnho.setText("0");
        jPanel3.add(lbTamnho, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 120, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabela_buscaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_buscaMouseClicked
        // TODO add your handling code here:

        if ( evt.getClickCount() == 2 )
        {

            if ( DVML.JANELA_ENTRADA == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                EntradaPratosCompostosVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            else if ( DVML.JANELA_ENTRADA_STOCK == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                EntradaVisao.busca_produto_by_cod_interno_entrada(codigo );
                dispose();

            }
            else if ( DVML.JANELA_VENDA == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                VendaUsuarioVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            else if ( DVML.JANELA_SAIDA == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                SaidaUsuarioVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            else if ( DVML.JANELA_VENDA_POS == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                VendaPOSVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            
            else if ( DVML.JANELA_VENDA_OFICINA == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                VendaOficinaUsuarioVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            
            else if ( DVML.JANELA_FICHA_TECNICA == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                FichaTecnicaVisao.busca_produto_by_cod_interno( codigo );
                dispose();

            }
            
            else if ( DVML.JANELA_COMPRA == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                try
                {

                    NovaEncomendaVisao.busca_produto_by_cod_interno( codigo );

                }
                catch ( Exception e )
                {
                }

                try
                {
                    CompraInformalVisao.busca_produto_by_cod_interno_compra( codigo );
                }
                catch ( Exception e )
                {
                }

                try
                {
                    TranferenciaArmazemVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                }
                catch ( Exception e )
                {
                }

                try
                {
                    AcertoStockVisao.accao_codigo_interno_enter_busca_exterior(codigo );
                }
                catch ( Exception e )
                {
                }

                dispose();

            }
//            else if ( DVML.JANELA_TRANSFERENCIA == cod_janela )
//            {
//
//                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
//                int linha = tabela_busca.getSelectedRow();
//                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
//                TranferenciaArmazemVisao.accao_codigo_interno_enter_busca_exterior( codigo );
//                dispose();
//
//            }
//            else if ( DVML.ACERTO_STOCK == cod_janela )
//            {
//
//                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
//                int linha = tabela_busca.getSelectedRow();
//                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
//                AcertoStockVisao.accao_codigo_interno_enter_busca_exterior( codigo );
//                dispose();
//
//            }
            else if ( DVML.JANELA_ESTORNO == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                EstornoVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            else if ( DVML.JANELA_PRODUTO == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                ProdutosVisao.ver_dados( codigo );
                dispose();

            }
            else if ( ( Objects.nonNull( NovaGestaoPedidosVisao.rbNao_lugar ) && NovaGestaoPedidosVisao.rbNao_lugar.isSelected() ) 
                    && DVML.JANELA_RETAURANTE == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                NovaGestaoPedidosVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            else if ( DVML.JANELA_VENDA_EXPRESSO == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                VendasPraticasVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            else if ( DVML.JANELA_RECOLHA == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                RecolhaPedidosVisao.accao_codigo_interno_enter_busca_exterior( codigo );
                dispose();

            }
            else if ( DVML.JANELA_ASSOCIACAO == cod_janela )
            {

                DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
                int linha = tabela_busca.getSelectedRow();
                Integer codigo = Integer.parseInt( modelo.getValueAt( linha, 0 ).toString() );
                AssociacaoServicoVisao.adcionarItem( codigo );
                dispose();

            }

        }
    }//GEN-LAST:event_tabela_buscaMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Nimbus".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( BuscaProdutoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( BuscaProdutoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( BuscaProdutoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( BuscaProdutoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                BuscaProdutoVisao dialog = new BuscaProdutoVisao( new javax.swing.JFrame(), true, 1, 0, new BDConexao() );
                dialog.addWindowListener( new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing( java.awt.event.WindowEvent e )
                    {
                        System.exit( 0 );
                    }
                } );
                dialog.setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelServico;
    private javax.swing.JPanel jPanelStockCritico;
    private javax.swing.JPanel jPanelStockNormal;
    private javax.swing.JPanel jPanelStockVazio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTamnho;
    private javax.swing.JLabel lbTiTulo;
    private javax.swing.JLabel lbTotalServico;
    private javax.swing.JLabel lbTotalStockCritico;
    private javax.swing.JLabel lbTotalStockNormal;
    private javax.swing.JLabel lbTotalStockVazio;
    private javax.swing.JTable tabela_busca;
    private javax.swing.JTextField txtDesignacao;
    // End of variables declaration//GEN-END:variables

    class TratarEvento implements KeyListener
    {

        String prefixo = "";

        public void keyPressed( KeyEvent evt )
        {

            if ( evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != KeyEvent.VK_ENTER )
            {
                char key = evt.getKeyChar();
                prefixo = txtDesignacao.getText().trim() + key;
                //adicionar( stockDao.getStockLIKE_Nome( prefixo ) );
                adicionar( prefixo );

            }
            else if ( evt.getKeyCode() == KeyEvent.VK_BACK_SPACE )
            {
                try
                {

                    prefixo = prefixo.toString().trim().substring( 0, prefixo.length() - 1 );
                    // adicionar( stockDao.getStockLIKE_Nome( prefixo ) );
                    adicionar( prefixo );

                }
                catch ( Exception e )
                {

                }

            }
        }

        public void keyReleased( KeyEvent evt )
        {
        }

        public void keyTyped( KeyEvent evt )
        {
        }

    }

    private void adicionar( String designacao )
    {
        int contTotal = 0, contTotalStockVazio = 0, contTotalStockCritco = 0, contTotalStockNormal = 0, contTotalServico = 0;
        Iterator<BuscaModeloProduto> iterator = fonte_dados.iterator();
        DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
        modelo.setRowCount( 0 );

        while ( iterator.hasNext() )
        {

            BuscaModeloProduto next = iterator.next();
            if ( next.getDesignacao().toLowerCase().contains( designacao.toLowerCase() ) )
            {
                contTotal++;

                if ( next.getQtd().equals( "0" ) )
                {
                    contTotalStockVazio++;
                }

                if ( next.getEstadoCritico().equals( "true" ) )
                {
                    contTotalStockCritco++;
                }

                if ( next.getQtd().equals( "-" ) )
                {
                    contTotalServico++;
                }

                else if ( Double.parseDouble( next.getQtd() ) != 0 && next.getEstadoCritico().equals( "false" ) )
                {
                    contTotalStockNormal++;
                }

                modelo.addRow(
                        new Object[]
                        {
                            next.getCodigo(),
                            next.getDesignacao(),
                            next.getCategoria(),
                            next.getQtd(),
                            next.getPrecoVenda(),
                            next.getEstadoCritico()

                        }
                );

            }

        }

        lbTotalStockVazio.setText( String.valueOf( contTotalStockVazio ) );

        lbTotalServico.setText( String.valueOf( contTotalServico ) );
        lbTotalStockCritico.setText( String.valueOf( contTotalStockCritco ) );
        lbTotalStockNormal.setText( String.valueOf( contTotalStockNormal ) );
        lbTamnho.setText( String.valueOf( contTotal ) );
    }

    private void adicionar_tabela()
    {

        int contTotal = 0, contTotalStockVazio = 0, contTotalStockCritco = 0, contTotalStockNormal = 0, contTotalServico = 0;
        DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
        modelo.setRowCount( 0 );
        Iterator<BuscaModeloProduto> iterator = fonte_dados.iterator();
        System.err.println( "SIZE-ITERATOR: " + fonte_dados.size() );
        while ( iterator.hasNext() )
        {
            contTotal++;

            BuscaModeloProduto next = iterator.next();

            if ( next.getQtd().equals( "0" ) )
            {
                contTotalStockVazio++;
            }

            if ( next.getEstadoCritico().equals( "true" ) )
            {
                contTotalStockCritco++;
            }

            if ( next.getQtd().equals( "-" ) )
            {
                contTotalServico++;
            }
            else if ( Double.parseDouble( next.getQtd() ) != 0 && next.getEstadoCritico().equals( "false" ) )
            {
                contTotalStockNormal++;
            }

            modelo.addRow(
                    new Object[]
                    {
                        next.getCodigo(),
                        next.getDesignacao(),
                        next.getCategoria(),
                        next.getQtd(),
                        next.getPrecoVenda(),
                        next.getEstadoCritico()

                    }
            );

        }
        lbTotalStockVazio.setText( String.valueOf( contTotalStockVazio ) );
        lbTotalServico.setText( String.valueOf( contTotalServico ) );
        lbTotalStockCritico.setText( String.valueOf( contTotalStockCritco ) );
        lbTotalStockNormal.setText( String.valueOf( contTotalStockNormal ) );
        lbTamnho.setText( String.valueOf( contTotal ) );

    }
//    private void adicionar_tabela()
//    {
//
//        int contTotal = 0, contTotalStockVazio = 0, contTotalStockCritco = 0, contTotalStockNormal = 0, contTotalServico = 0;
//        DefaultTableModel modelo = ( DefaultTableModel ) tabela_busca.getModel();
//        modelo.setRowCount( 0 );
//        Iterator<BuscaModeloProduto> iterator = fonte_dados.iterator();
//        System.err.println( "SIZE-ITERATOR: " +iterator.le );
//        while ( iterator.hasNext() )
//        {
//            contTotal++;
//
//            BuscaModeloProduto next = iterator.next();
//
//            if ( next.getQtd().equals( "0" ) )
//            {
//                contTotalStockVazio++;
//            }
//
//            if ( next.getEstadoCritico().equals( "true" ) )
//            {
//                contTotalStockCritco++;
//            }
//
//            if ( next.getQtd().equals( "-" ) )
//            {
//                contTotalServico++;
//            }
//            else if ( Double.parseDouble( next.getQtd() ) != 0 && next.getEstadoCritico().equals( "false" ) )
//            {
//                contTotalStockNormal++;
//            }
//
//            modelo.addRow(
//                    new Object[]
//                    {
//                        next.getCodigo(),
//                        next.getDesignacao(),
//                        next.getCategoria(),
//                        next.getQtd(),
//                        next.getPrecoVenda(),
//                        next.getEstadoCritico()
//
//                    }
//            );
//
//        }
//        lbTotalStockVazio.setText( String.valueOf( contTotalStockVazio ) );
//        lbTotalServico.setText( String.valueOf( contTotalServico ) );
//        lbTotalStockCritico.setText( String.valueOf( contTotalStockCritco ) );
//        lbTotalStockNormal.setText( String.valueOf( contTotalStockNormal ) );
//        lbTamnho.setText( String.valueOf( contTotal ) );
//
//    }

    private void setBackGroundLegenda()
    {
        jPanelStockCritico.setBackground( new Color( Definicoes.PRODUTO_CRITICO[ 0 ],
                Definicoes.PRODUTO_CRITICO[ 1 ], Definicoes.PRODUTO_CRITICO[ 2 ] ) );
        jPanelStockNormal.setBackground( new Color( Definicoes.PRODUTO[ 0 ],
                Definicoes.PRODUTO[ 1 ], Definicoes.PRODUTO[ 2 ] ) );
        jPanelStockVazio.setBackground( new Color( Definicoes.STOCK_VAZIO[ 0 ],
                Definicoes.STOCK_VAZIO[ 1 ], Definicoes.STOCK_VAZIO[ 2 ] ) );
        jPanelServico.setBackground( new Color( Definicoes.SERVICOS[ 0 ],
                Definicoes.SERVICOS[ 1 ], Definicoes.SERVICOS[ 2 ] ) );
    }

}
