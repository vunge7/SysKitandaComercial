/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controller.EntradaController;
import controller.ProdutoController;
import controller.TipoProdutoController;
import dao.ArmazemDao;
import dao.ItemSaidaVasilhameDao;
import dao.SaidaVasilhameDao;
import dao.UsuarioDao;
import dao.VasilhameDao;
import entity.TbItemSaidaVasilhame;
import entity.TbProduto;
import entity.TbSaidaVasilhame;
import entity.TbVasilhame;
import exemplos.PermitirNumeros;
import java.awt.Cursor;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lista.ImprimirSaidaVasilhame;
import modelo.EntradaModelo;
import modelo.ProdutoModelo;
import util.BDConexao;
import util.JPAEntityMannagerFactoryUtil;




/**
 *
 * @author Domingos Dala Vunge
 */
public class SaidaVasilhameVisao extends javax.swing.JFrame {

    
    
    private EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
    private TbProduto produto;
    private VasilhameDao vasilhameDao = new VasilhameDao(emf);
    private ItemSaidaVasilhameDao itemSaidaVasilhameDao = new ItemSaidaVasilhameDao(emf);
    private TbItemSaidaVasilhame itemSaidaVasilhame;
    private TbVasilhame vasilhame;
    private ArmazemDao armazemDao = new ArmazemDao(emf);
    private UsuarioDao usuarioDao = new UsuarioDao(emf);
    private SaidaVasilhameDao saidaVasilhameDao = new SaidaVasilhameDao(emf);
    //private UsuarioModelo usuarioModelo;
    private EntradaModelo entradaModelo;
    private BDConexao conexao;
    private EntradaController entradaController;
    private int codigo=0;
    private int codigo_vasilhame = 0;
   // private UsuarioController usuarioController;
    private Frame parent;
    private boolean stocavel = true;
    private int idUser;
    private static int id_armzem = 1;
    private int  linha_actual = -1;
    
    public SaidaVasilhameVisao( int idUser) throws SQLException {
        //this.parent =  parent1;
        
        initComponents();
        setLocationRelativeTo(null);
        //confiLabel();
     
        this.parent = parent;
        this.idUser = idUser;        
        conexao = new BDConexao(); 
        
        cmbArmazem.setModel( new DefaultComboBoxModel( conexao.getElementos("tb_armazem", "designacao", false)   ) );
        cmbTipoProduto.setModel(  new DefaultComboBoxModel(   conexao.getElementos("tb_tipo_produto", "designacao", false)   ));
        cmbProduto.setModel( new DefaultComboBoxModel( conexao.getElementosProdutoStock( getCodigoTipoProduto()) ) );
        cmbVasilhame.setModel( new DefaultComboBoxModel( conexao.getElementos("tb_vasilhame", "descricao", false)   ) );
         
        txtCodigoVasilhame.requestFocus();
        txtCodigoVasilhame.addKeyListener(  new TratarEventoTeclado() );
        txtQuantidadeSair.addKeyListener(    new TratarEventoQuantidade() );        
        txtCodigoVasilhame.setDocument(  new PermitirNumeros() );
        txtQuantidadeSair.setDocument(  new PermitirNumeros() );
        
         
    }
    
    public void confiLabel()
    {
       
        lbArmazem.setHorizontalAlignment(JLabel.RIGHT);
        lbVasilhame.setHorizontalAlignment(JLabel.RIGHT);
        lbCodigoProduto.setHorizontalAlignment(JLabel.RIGHT);
        lbCategoria.setHorizontalAlignment(JLabel.RIGHT);
        lbQuantidadeExistente.setHorizontalAlignment(JLabel.RIGHT);
        lbProduto.setHorizontalAlignment(JLabel.RIGHT);
        lbQuantidadeEntrar.setHorizontalAlignment(JLabel.RIGHT);
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtFuncionario = new javax.swing.JTextField();
        lbCodigoProduto1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbArmazem = new javax.swing.JLabel();
        lbCodigoProduto = new javax.swing.JLabel();
        lbCategoria = new javax.swing.JLabel();
        lbProduto = new javax.swing.JLabel();
        cmbArmazem = new javax.swing.JComboBox();
        txtCodigoVasilhame = new javax.swing.JTextField();
        cmbTipoProduto = new javax.swing.JComboBox();
        cmbProduto = new javax.swing.JComboBox();
        txtQuatidadeExistente = new javax.swing.JTextField();
        lbQuantidadeExistente = new javax.swing.JLabel();
        lbQuantidadeEntrar = new javax.swing.JLabel();
        txtQuantidadeSair = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbVasilhame = new javax.swing.JLabel();
        cmbVasilhame = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::::: DVML_SAIDA_VASILHAME::::...");
        setIconImage(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/button  Salvar-.png"))); // NOI18N
        btnSalvar.setAlignmentX(0.5F);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/button-Cancelar.png"))); // NOI18N
        btnCancelar.setAlignmentX(0.5F);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtFuncionario.setBackground(new java.awt.Color(51, 153, 0));
        txtFuncionario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtFuncionario.setForeground(new java.awt.Color(255, 255, 255));
        txtFuncionario.setCaretColor(new java.awt.Color(255, 255, 255));

        lbCodigoProduto1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbCodigoProduto1.setText("Funcion√°rio");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbCodigoProduto1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCodigoProduto1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 153, 0)));
        jPanel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N

        lbArmazem.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbArmazem.setText("Armaz√©m");

        lbCodigoProduto.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbCodigoProduto.setText("Codigo Vasilhame");

        lbCategoria.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbCategoria.setText("Categoria:");

        lbProduto.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbProduto.setText("Escolha o Produto:");

        cmbArmazem.setBackground(new java.awt.Color(51, 153, 0));
        cmbArmazem.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        cmbArmazem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Activo", "Desactivo" }));
        cmbArmazem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbArmazemActionPerformed(evt);
            }
        });

        txtCodigoVasilhame.setBackground(new java.awt.Color(51, 153, 0));
        txtCodigoVasilhame.setForeground(new java.awt.Color(255, 255, 255));
        txtCodigoVasilhame.setCaretColor(new java.awt.Color(255, 255, 255));

        cmbTipoProduto.setBackground(new java.awt.Color(51, 153, 0));
        cmbTipoProduto.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        cmbTipoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoProdutoActionPerformed(evt);
            }
        });

        cmbProduto.setBackground(new java.awt.Color(51, 153, 0));
        cmbProduto.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        cmbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProdutoActionPerformed(evt);
            }
        });

        txtQuatidadeExistente.setEditable(false);
        txtQuatidadeExistente.setBackground(new java.awt.Color(51, 153, 0));
        txtQuatidadeExistente.setForeground(new java.awt.Color(255, 255, 255));
        txtQuatidadeExistente.setCaretColor(new java.awt.Color(255, 255, 255));

        lbQuantidadeExistente.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbQuantidadeExistente.setText("Qtd. Existente");

        lbQuantidadeEntrar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbQuantidadeEntrar.setText("Qtd. a Sair");

        txtQuantidadeSair.setBackground(new java.awt.Color(51, 153, 0));
        txtQuantidadeSair.setForeground(new java.awt.Color(255, 255, 255));
        txtQuantidadeSair.setCaretColor(new java.awt.Color(255, 255, 255));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Button-Add-icon.png"))); // NOI18N
        jButton3.setToolTipText("click para adicionar no carrinho");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/2934_32x32.png"))); // NOI18N
        jButton2.setToolTipText("click para remover produtos do carrinho");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lbVasilhame.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbVasilhame.setText("Escolha o Vasilhame:");

        cmbVasilhame.setBackground(new java.awt.Color(51, 153, 0));
        cmbVasilhame.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        cmbVasilhame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVasilhameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                .addComponent(lbArmazem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCodigoVasilhame, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbCodigoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(59, 59, 59)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbVasilhame, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbVasilhame, 0, 230, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantidadeSair, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbQuantidadeEntrar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbArmazem, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTipoProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbProduto, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(92, 92, 92)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQuatidadeExistente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbQuantidadeExistente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbArmazem, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbArmazem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(lbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbQuantidadeExistente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuatidadeExistente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbVasilhame, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbVasilhame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoVasilhame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbQuantidadeEntrar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtQuantidadeSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        table.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Vasilhame", "Designacao", "Qtd. Existente", "Qtd. Sair", "Qtd. Actualizada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setCellSelectionEnabled(true);
        table.setGridColor(new java.awt.Color(51, 153, 0));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        procedimento_salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cmbTipoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoProdutoActionPerformed
        
        try {
            // TODO add your handling code here:
            //System.out.println("CODIGO: " +getCodigoTipoProduto());
            
            cmbProduto.setModel(new DefaultComboBoxModel(conexao.getElementosProdutoStock(getCodigoTipoProduto())));

//            txtQuatidadeExistente.setText(String.valueOf(BDConexao.getQuantidade_Existente(getCodigoProduto(), id_armzem)));
//            Vector<String> vector = new Vector<String>();
//          
//            txtCodigoProduto.setText(String.valueOf(getCodigoProduto()));
            this.codigo = getCodigoProduto();
         
            
        } catch (SQLException ex) {
            Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_cmbTipoProdutoActionPerformed

    private void cmbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProdutoActionPerformed
        
        try {
            
            this.codigo = getCodigoProduto();
            
            cmbVasilhame.setModel( new DefaultComboBoxModel(  (Vector)  vasilhameDao.getAllVasilhamesByCodigoProduto(codigo)    ));
            
                
        } catch (SQLException ex) {
            Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_cmbProdutoActionPerformed

    private void cmbArmazemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbArmazemActionPerformed
        // TODO add your handling code here:
        
        
          id_armzem = getCodigoArmazem(); 
                    
                    ProdutoModelo produtoModelo = new ProdutoModelo();
                    try {
                        produtoModelo = new ProdutoController(conexao).getProduto( codigo );
                    } catch (SQLException ex) {
                        Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(Level.SEVERE, null, ex);
                    }


                    
                    txtQuatidadeExistente.setText(String.valueOf (BDConexao.getQuantidade_Existente(codigo, id_armzem)  ) );
                  
                    Vector<String> vector = new Vector<String>();
                    vector.add( produtoModelo.getDesignacao()  );    
                    cmbProduto.setModel( new DefaultComboBoxModel( vector ) );  
                
                    Cursor cursor = new Cursor(1);
                  
                    
                    txtQuantidadeSair.requestFocus();
                    
                   
        
        
    }//GEN-LAST:event_cmbArmazemActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        adicionar_produto();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            
          remover_item_carrinho();
            
        } catch (Exception ex) {
           //Logger.getLogger(VendaUsuarioVisao.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Possivelmente n√£o selecionaste \n nenhuma linha ou n√£o existe dados na tabela","AVISO", JOptionPane.WARNING_MESSAGE );
        }
        

    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmbVasilhameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVasilhameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbVasilhameActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    SaidaVasilhameVisao dialog = new SaidaVasilhameVisao( 15);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    
    
    /* CRIACAO DOS GETS  */
    public String getNome()
    {
        return "";
    }
    
    public String getProduto()
    {
        return "";
    }
    
     public String getCodBarra()
    {
        //return txtCodigoBarra.getText();
        return "";
    }
  
    
    
    public int getCodigoTipoProduto() throws SQLException
    {
           return BDConexao.getCodigo("tb_tipo_produto", String.valueOf(  cmbTipoProduto.getSelectedItem()));   
    }
    
    
    public int getCodigoFornecedor() throws SQLException
    {
       // return BDConexao.getCodigoByName("tb_fornecedor", "nome", String.valueOf(  cmbFornecedor.getSelectedItem()));
        return 0;
    }
    
    
     
    public int getCodigoProduto() throws SQLException
    {
        return BDConexao.getCodigoByName("tb_produto", "designacao", String.valueOf(  cmbProduto.getSelectedItem() ) );
       
    }
    

    public String getStatus(){
          return "";
    }
    
     public float getPreco(){
     
                return Float.parseFloat(  txtQuatidadeExistente.getText());
                
     }
     
    public String getDataEntrada()
    {
        GregorianCalendar gc = new GregorianCalendar();
       // gc.setTime(jcDataFabrico.getDate());
        
        String dataSelecionada = gc.get(GregorianCalendar.YEAR) + "-" +
                        (gc.get(GregorianCalendar.MONTH) + 1) + "-" +
                        gc.get(GregorianCalendar.DATE);
        return dataSelecionada;
    }
    
    
    public void operacao(int operacao , String descricaoCerto, String descricaoErro) throws SQLException
    {

        entradaModelo = new EntradaModelo();

        entradaModelo.setIdProduto(  getCodigoProduto() );
        entradaModelo.setIdUsuario( this.idUser );
        entradaModelo.setQuantidade( Integer.parseInt( txtQuantidadeSair.getText() ) );
        entradaModelo.setData_entrada(getDataEntrada());
        entradaModelo.setIdArmazemFK(id_armzem);
       
 
        if(operacao == 1)
            entradaModelo.setIdEntrada(0);
 
        //validacao
        if(true)  
        {
                       if( entradaController.operacao(operacao, entradaModelo, this.stocavel) )
                       {
                            //actualiza a quantidade
                            int quatidade_nova = 0;
                            //1 - armazem geral
                            quatidade_nova = BDConexao.getQuantidade_Existente(  entradaModelo.getIdProduto(), id_armzem ) + entradaModelo.getQuantidade();
                            conexao.executeUpdate("UPDATE tb_stock SET quantidade_existente = " + quatidade_nova +" WHERE cod_produto_codigo = " +entradaModelo.getIdProduto()  +" AND cod_armazem = " +id_armzem);
                            txtQuatidadeExistente.setText(String.valueOf(BDConexao.getQuantidade_Existente(  getCodigoProduto(), id_armzem )  ) );
                           
                            //limpar();
                       }
                       else JOptionPane.showMessageDialog(null, "ERRO AO " + descricaoErro + "A ENTRADA!...", "ERRO", JOptionPane.ERROR_MESSAGE);
         }
          
    }
  
    private boolean tabela_preenchida()
    {
            return  table.getModel().getRowCount() > 0;
    }
    
     //----------- evento do teclado ---------------------------------------
    class TratarEventoTeclado implements KeyListener
    {
        String prefixo = "";

        public void keyPressed(KeyEvent evt)
        {

            if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                char key = evt.getKeyChar();               
                prefixo = txtCodigoVasilhame.getText().trim() + key;
                codigo_vasilhame = Integer.parseInt(prefixo.trim());
                
                try{
                    
                    id_armzem = getCodigoArmazem(); 
                    TbVasilhame vasilhame = new TbVasilhame(); 
                    vasilhame = vasilhameDao.getVasilhameByCodigoAndIdArmazem(codigo_vasilhame, id_armzem);
                    
                    String categoria =   getDesignacaoTipoProutoByCodigo(    vasilhame.getFkProduto().getCodTipoProduto().getCodigo()  );
                    cmbTipoProduto.setSelectedItem(  categoria );
                    txtQuatidadeExistente.setText( String.valueOf (   vasilhame.getQtdExistente() ) );
                    cmbProduto.setSelectedItem(   vasilhame.getFkProduto().getDesignacao()   );
                    
                    cmbVasilhame.setSelectedItem(   vasilhame.getDescricao() );
                    
                    
                    txtQuatidadeExistente.setText( String.valueOf( vasilhame.getQtdExistente()  ));
                    
                    txtQuantidadeSair.requestFocus();
                    
                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null, "Impossivel dar saida , porque este vasilhame n√£o esta cadastrado neste armzem.", "AVISO", JOptionPane.WARNING_MESSAGE);
                           
                }
               
               
            }
        }

        public void keyReleased(KeyEvent evt)
        {}
        public void keyTyped(KeyEvent evt)
        {}
    }

  
    public void ver_dados_produtos(int codigo)
    {
               
               
    }
    
    private String  getDesignacaoTipoProutoByCodigo(int codigo)
    {
        try {
             return new TipoProdutoController(conexao).getTipoProdutoModelo(codigo ).getDesignacao();
        } catch (Exception e) {
        }
       return "";
    
    }
    
     public int getCodigoArmazem() 
    {
           return conexao.getCodigoPublico("tb_armazem", String.valueOf(  cmbArmazem.getSelectedItem() ) );   
    }


     private int getCodigoVasilhame()
     {
            return vasilhameDao.getVasilhameByDescricao(  String.valueOf( cmbVasilhame.getSelectedItem() )  ).getPkVasilhame();
     
     }
     
    //----------- evento do teclado ---------------------------------------
    class TratarEventoQuantidade implements KeyListener
    {
        String prefixo = "";
        int codigo =0, codigo_categoria=0, quatidade_produto=0;
        public void keyPressed(KeyEvent evt)
        {

            if (  evt.getKeyCode() == KeyEvent.VK_ENTER)
            {
                
              
                try {
                  
                    txtCodigoVasilhame.requestFocus();
                    
                    adicionar_produto();
                            
                    txtCodigoVasilhame.setText("");
                    txtQuantidadeSair.setText("");
                    
                } catch (Exception ex) {
                    Logger.getLogger(VendaUsuarioVisao.class.getName()).log(Level.SEVERE, null, ex);
                }
              
            }
        }

        public void keyReleased(KeyEvent evt)
        {}
        public void keyTyped(KeyEvent evt)
        {}
    }
     
     
    public void adicionar_produto() 
    {
        DefaultTableModel modelo = (DefaultTableModel) table.getModel();       
        
        try {
            
            if (compativel_armazem()) {
                if (!exist_produto(Integer.parseInt(txtCodigoVasilhame.getText()))) {

                    if (vasilhameDao.findTbVasilhame(codigo_vasilhame).getQtdExistente() >= Integer.parseInt(txtQuantidadeSair.getText())) {
                        modelo.addRow(new Object[]{
                            codigo_vasilhame,
                            vasilhameDao.findTbVasilhame(codigo_vasilhame).getDescricao(),
                            vasilhameDao.findTbVasilhame(codigo_vasilhame).getQtdExistente(),
                            txtQuantidadeSair.getText(),
                            vasilhameDao.findTbVasilhame(codigo_vasilhame).getQtdExistente()
                            - Integer.parseInt(txtQuantidadeSair.getText())

                        });

                    } else {
                        JOptionPane.showMessageDialog(null, "A quantidade a sair n√£o pode ser maior do que a quantidade existente!", "AVISO", JOptionPane.WARNING_MESSAGE);
                    }

                } else {

                    if (vasilhameDao.findTbVasilhame(codigo_vasilhame).getQtdExistente() >= Integer.parseInt(txtQuantidadeSair.getText())) {
                        actuazlizar_quantidade(txtQuantidadeSair.getText());
                    } else {
                        JOptionPane.showMessageDialog(null, "A quantidade a sair n√£o pode ser maior do que a quantidade existente!", "AVISO", JOptionPane.WARNING_MESSAGE);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Impossivel dar saida , porque este vasilhame n√£o esta cadastrado neste armzem.", "AVISO", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception e) {

        }

    }
 
    
    private boolean exist_produto(int codigo)
    {    
          DefaultTableModel modelo = (DefaultTableModel) table.getModel();
          for (int i = 0; i < modelo.getRowCount(); i++) {
                  if ( Integer.parseInt(String.valueOf(  table.getValueAt(i, 0) ) ) == codigo )
                  {
                      this.linha_actual = i;
                      return true;
                  }
            
          }
          return false;    
    }
    
    
    
    
    private int getQuantidadeTabela(int codigo)
    {    
          DefaultTableModel modelo = (DefaultTableModel) table.getModel();
          for (int i = 0; i < modelo.getRowCount(); i++) {
                  if ( Integer.parseInt(String.valueOf(  table.getValueAt(i, 0) ) ) == codigo )
                  {
                      return Integer.parseInt(   String.valueOf( table.getValueAt(i, 3)   ));
                  }
            
          }
          return 0;    
    }
    
    
    private void actuazlizar_quantidade(String quantidade)
    {
            DefaultTableModel modelo  = (DefaultTableModel) table.getModel();
            
            int qtd_existente =    Integer.parseInt( String.valueOf( modelo.getValueAt( linha_actual, 2) ) );
            int qtd_sair = Integer.parseInt(quantidade);
            int qtd_actualizada = qtd_existente - qtd_sair;
            
            modelo.setValueAt(quantidade, linha_actual , 3);
            modelo.setValueAt(qtd_actualizada, linha_actual , 4);
            
            this.linha_actual = -1;
    
    }
    
    private boolean salvar_saida_vasilhame()
    {
            
        TbSaidaVasilhame saidaVasilhame = new TbSaidaVasilhame();
        saidaVasilhame.setDataSaida( new Date() );
        saidaVasilhame.setHoraSaida( new Date() );
        saidaVasilhame.setFkArmazem( armazemDao.findTbArmazem(  getCodigoArmazem() ) );
        saidaVasilhame.setFkUsuario( usuarioDao.findTbUsuario(idUser) );
        saidaVasilhame.setNomeFuncionario( txtFuncionario.getText() );
        
        try {
            saidaVasilhameDao.create(saidaVasilhame);
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro  ao registrar a saida de vasilhame", "ERRO", JOptionPane.ERROR);
            return false;
        }
    
    }
    
    private void salvar_item_saida_vasilhame()
    {
        
        DefaultTableModel modelo  = (DefaultTableModel) table.getModel();
        
        int idVasilhame = 0;
        int last_entrada_vasilhame = saidaVasilhameDao.getLastSaidaVasilhame();
        boolean operacao_efectuada = true;
        
        for (int i = 0; i < modelo.getRowCount(); i++) 
        {                     
//             try {
//                     if ( tabela_preenchida() )
//                     {
//                            idVasilhame = Integer.parseInt(   String.valueOf(  modelo.getValueAt(i, 0)    )   );
//
//                     
//                            itemSaidaVasilhame = new TbItemSaidaVasilhame();
//                            itemSaidaVasilhame.setQtd(   Integer.parseInt(   String.valueOf(  modelo.getValueAt(i, 3)    )   )     );
//                            itemSaidaVasilhame.setFkVasihame( vasilhameDao.findTbVasilhame( idVasilhame )   );
//                            itemSaidaVasilhame.setFkSaidaVazilhame( saidaVasilhameDao.findSaidaVasilhame(   last_entrada_vasilhame) );
//
//                             try {
//                                 itemSaidaVasilhameDao.create(itemSaidaVasilhame);
//                                 actualizar_vasilhame(idVasilhame, Integer.parseInt(   String.valueOf(  modelo.getValueAt( i , 4  )  ) ) );
//                             } catch (Exception e) {
//                                 operacao_efectuada = false;
//                                 break;
//                             }
//                             
//                        
//
//                     } else {
//                         
//                         JOptionPane.showMessageDialog(null, "Pf! adiciona os campos na tabela", "AVISO", JOptionPane.WARNING_MESSAGE);
//                         operacao_efectuada = false;
//                         break;
//                         
//                     }

//             } catch (Exception ex) {
//                 Logger.getLogger(SaidaVasilhameVisao.class.getName()).log(Level.SEVERE, null, ex);
//             }
        }
        
        if( operacao_efectuada )
        {
            JOptionPane.showMessageDialog(null,  "SAIDA DE VASILHAMES EFECTUADA COM SUCESSO!...");
        }else  { 
            JOptionPane.showMessageDialog(null, "Erro ao registrar a saida de vasilhame", "ERRO", JOptionPane.ERROR);
        }    
        remover_all_item_carrinho();        
    }
    
    private void procedimento_salvar()
    {
           if( salvar_saida_vasilhame() )
           {
                salvar_item_saida_vasilhame();
                limpar();
                try {
                    new ImprimirSaidaVasilhame(   saidaVasilhameDao.getLastSaidaVasilhame()  );
               } catch (Exception e) {
               }
           }
    }
   
    private boolean compativel_armazem()
    {
            return vasilhameDao.findTbVasilhame(  Integer.parseInt(   txtCodigoVasilhame.getText()  ) ).getFkArmazem().getCodigo() ==   getCodigoArmazem();
    }
    
    private void remover_all_item_carrinho()
    {
        DefaultTableModel modelo = (DefaultTableModel) table.getModel();
        modelo.setRowCount(0 );    
    }
    
    private void remover_item_carrinho()
    {    
        DefaultTableModel modelo = (DefaultTableModel) table.getModel();
        modelo.removeRow( table.getSelectedRow() );     
    }
    
    private void actualizar_vasilhame(int idVasilhame,double qtd)
    {
        TbVasilhame vasilhame = vasilhameDao.findTbVasilhame(idVasilhame);
        vasilhame.setQtdExistente(qtd);            
        try {
            vasilhameDao.edit(vasilhame);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao actualizar a quantidade de saida deste vasilhame", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }
    
    private void limpar()
    {
            txtCodigoVasilhame.setText("");
            txtQuantidadeSair.setText("");
            txtFuncionario.setText("");
            txtQuatidadeExistente.setText("");
            txtCodigoVasilhame.requestFocus();
  
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbArmazem;
    private javax.swing.JComboBox cmbProduto;
    private javax.swing.JComboBox cmbTipoProduto;
    private javax.swing.JComboBox cmbVasilhame;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbArmazem;
    private javax.swing.JLabel lbCategoria;
    private javax.swing.JLabel lbCodigoProduto;
    private javax.swing.JLabel lbCodigoProduto1;
    private javax.swing.JLabel lbProduto;
    private javax.swing.JLabel lbQuantidadeEntrar;
    private javax.swing.JLabel lbQuantidadeExistente;
    private javax.swing.JLabel lbVasilhame;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtCodigoVasilhame;
    private javax.swing.JTextField txtFuncionario;
    private javax.swing.JTextField txtQuantidadeSair;
    private javax.swing.JTextField txtQuatidadeExistente;
    // End of variables declaration//GEN-END:variables
}

