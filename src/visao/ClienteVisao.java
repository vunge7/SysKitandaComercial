/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import comercial.controller.ClientesController;
import controller.TipoClienteController;
import dao.ClienteDao;
import entity.TbCliente;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import static kitanda.util.CfMethodsSwing.resizeJButtonIcon;
import modelo.TipoClienteModelo;
import util.BDConexao;
import util.DVML;
import util.JPAEntityMannagerFactoryUtil;
import static util.MetodosUtil.normalizarEndereco;
import static util.MetodosUtil.normalizarNif;

/**
 *
 * @author DMartinho Luis
 */
public class ClienteVisao extends javax.swing.JDialog
{

    /**
     * Creates new form UsuarioVisao
     */
    private BDConexao conexao;
    private TipoClienteModelo tipoClienteModelo;
    private TipoClienteController tipoClienteController;
    private ClientesController clientesController;
    private EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
    private ClienteDao clienteDao = new ClienteDao( emf );
    private TbCliente cliente;
    private Frame parent;
    private int codigo = 0;

    public ClienteVisao( java.awt.Frame parent, boolean modal, BDConexao conexao )
    {
        //this.parent =  parent1;

        super( parent, modal );

        this.parent = parent;
        this.conexao = conexao;
        tipoClienteController = new TipoClienteController( conexao );
        clientesController = new ClientesController( conexao );
        initComponents();
        postInitComponents();
        confLabel();
        btnAlterar.setEnabled( false );
        setLocationRelativeTo( null );
        txtInicias.addKeyListener( new TratarEvento() );
        adicionar();

    }

    public void confLabel()
    {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbTipoProduto = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtContactos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNif = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_cliente = new javax.swing.JTable();
        txtInicias = new javax.swing.JTextField();
        lbTipoProduto1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::::: DVML-CLIENTES::::...");
        setIconImage(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/salvar_16x16.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setAlignmentX(0.5F);
        btnSalvar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/alterar_16x16.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setAlignmentX(0.5F);
        btnAlterar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAlterarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Logout 32x32.png"))); // NOI18N
        btnCancelar.setText("Sair");
        btnCancelar.setAlignmentX(0.5F);
        btnCancelar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/eliminar_16x16.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setAlignmentX(0.5F);
        btnEliminar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8_add_64px.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setAlignmentX(0.5F);
        btnNovo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                            .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 153, 0))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N

        lbTipoProduto.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTipoProduto.setText("Nome do Cliente:");

        txtNomeCliente.setCaretColor(new java.awt.Color(255, 255, 255));
        txtNomeCliente.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtNomeClienteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        jLabel1.setText("Endere√ßo:");

        txtEndereco.setCaretColor(new java.awt.Color(255, 255, 255));
        txtEndereco.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtEnderecoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        jLabel2.setText("Tel:");

        txtContactos.setCaretColor(new java.awt.Color(255, 255, 255));
        txtContactos.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtContactosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        jLabel3.setText("Nif:");

        txtNif.setCaretColor(new java.awt.Color(255, 255, 255));
        txtNif.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtNifActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        jLabel4.setText("Email:");

        txtEmail.setCaretColor(new java.awt.Color(255, 255, 255));
        txtEmail.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(134, 134, 134))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNif, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtContactos, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTipoProduto)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(txtNif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(txtContactos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127))
        );

        tabela_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Cod", "Nome", "Nif", "Morada", "Telefone"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tabela_cliente.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tabela_clienteMouseClicked(evt);
            }
        });
        tabela_cliente.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                tabela_clienteKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabela_cliente);
        if (tabela_cliente.getColumnModel().getColumnCount() > 0)
        {
            tabela_cliente.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        txtInicias.setCaretColor(new java.awt.Color(255, 255, 255));

        lbTipoProduto1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 16)); // NOI18N
        lbTipoProduto1.setText("Iniciais nome");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lbTipoProduto1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtInicias, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTipoProduto1)
                    .addComponent(txtInicias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabela_clienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabela_clienteMouseClicked
        // TODO add your handling code here:
        if ( evt.getClickCount() >= 1 )
        {
            btnAlterar.setEnabled( true );
            btnSalvar.setEnabled( false );

            mostar_dados();
//            procedimento_desactivar_campo();
        }

    }//GEN-LAST:event_tabela_clienteMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        procedimento_salvar();

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        procedimento_alterar();

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        procedimento_eliminar();

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        novo_cliente();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void txtNomeClienteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtNomeClienteActionPerformed
    {//GEN-HEADEREND:event_txtNomeClienteActionPerformed
        txtEndereco.requestFocus();
    }//GEN-LAST:event_txtNomeClienteActionPerformed

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtEnderecoActionPerformed
    {//GEN-HEADEREND:event_txtEnderecoActionPerformed
        txtNif.requestFocus();
    }//GEN-LAST:event_txtEnderecoActionPerformed

    private void txtNifActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtNifActionPerformed
    {//GEN-HEADEREND:event_txtNifActionPerformed
        txtEmail.requestFocus();
    }//GEN-LAST:event_txtNifActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtEmailActionPerformed
    {//GEN-HEADEREND:event_txtEmailActionPerformed
        txtContactos.requestFocus();
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtContactosActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtContactosActionPerformed
    {//GEN-HEADEREND:event_txtContactosActionPerformed
        procedimento_salvar();
    }//GEN-LAST:event_txtContactosActionPerformed

    private void tabela_clienteKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tabela_clienteKeyPressed
    {//GEN-HEADEREND:event_tabela_clienteKeyPressed
        btnSalvar.setEnabled( false );
    }//GEN-LAST:event_tabela_clienteKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Windows".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( ClienteVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( ClienteVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( ClienteVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( ClienteVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                ClienteVisao dialog = new ClienteVisao( new javax.swing.JFrame(), true, new BDConexao() );
                dialog.addWindowListener( new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing( java.awt.event.WindowEvent e )
                    {
                        System.exit( 0 );
                    }
                } );
                dialog.setVisible( true );
            }
        } );
    }

    /* CRIACAO DO GETS  */
    public String getTipoCliente()
    {
        return txtNomeCliente.getText();
    }

    public String getMorada()
    {
        return txtEndereco.getText();
    }

    public String getTelefone()
    {
        return txtContactos.getText();
    }

    /*
     *   lbNome.setHorizontalAlignment(JLabel.RIGHT);
        lbSobreNome.setHorizontalAlignment(JLabel.RIGHT);
        lbUserName.setHorizontalAlignment(JLabel.RIGHT);
        lbSenha.setHorizontalAlignment(JLabel.RIGHT);
        lbConfirSenha.setHorizontalAlignment(JLabel.RIGHT);
        lbDataNascimento.setHorizontalAlignment(JLabel.RIGHT);
        lbTelefone.setHorizontalAlignment(JLabel.RIGHT);
        lbEmail.setHorizontalAlignment(JLabel.RIGHT);
        lbEndereco.setHorizontalAlignment(JLabel.RIGHT);
     
     */
 /*VALIDACOES */
    public void limpar()
    {

        txtNomeCliente.setText( "" );
        txtEndereco.setText( "" );
        txtContactos.setText( "" );
        txtNif.setText( "" );
        txtEmail.setText( "" );

        txtInicias.setText( "" );

    }

    public boolean campos_invalidos()
    {
        Color backGround = Color.WHITE;
        Color foreGround = Color.BLACK;
        Color caretColor = Color.BLACK;

        if ( getTipoCliente().equals( "" ) )
        {
            txtNomeCliente.setBackground( backGround );
            txtNomeCliente.setForeground( foreGround );
            txtNomeCliente.setCaretColor( caretColor );
            JOptionPane.showMessageDialog( null, "Pf. Pre√™ncha o campo Nome: " );
            return true;
        }
        else if ( getMorada().equals( "" ) )
        {

            txtEndereco.setBackground( backGround );
            txtEndereco.setForeground( foreGround );
            txtEndereco.setCaretColor( caretColor );
            JOptionPane.showMessageDialog( null, "Pf. Pre√™ncha o campo Morada: " );
            return true;

        }
        else if ( getTelefone().equals( "" ) )
        {

            txtContactos.setBackground( backGround );
            txtContactos.setForeground( foreGround );
            txtContactos.setCaretColor( caretColor );
            JOptionPane.showMessageDialog( null, "Pf. Pre√™ncha o campo Telefone: " );
            return true;

        }

        return false;
    }

//    int codigo, String nome, String morada, String telefone
    public void operacao( int operacao, String nomeCerto, String nomeErro ) throws SQLException
    {
        //(int codigo, String nome, String telefone, String email, String site, String enderreco)
        tipoClienteModelo = new TipoClienteModelo( codigo, getTipoCliente(), getMorada(), getTelefone() );
        if ( operacao != 3 )
        {

            if ( tipoClienteController.operacao( operacao, tipoClienteModelo ) )
            {
                JOptionPane.showMessageDialog( null, "DADOS   " + nomeCerto + " COM SUCESSO NA BD!..." );
                limpar();
            }
            else
            {
                JOptionPane.showMessageDialog( null, "ERRO AO " + nomeErro + "NA BD!...", "ERRO", JOptionPane.ERROR_MESSAGE );
            }

        }
        else
        {
            if ( tipoClienteController.operacao( operacao, tipoClienteModelo ) )
            {
                JOptionPane.showMessageDialog( null, "DADOS   " + nomeCerto + " COM SUCESSO NA BD!..." );
                limpar();
            }
            else
            {
                JOptionPane.showMessageDialog( null, "ERRO AO " + nomeErro + "NA BD!...", "ERRO", JOptionPane.ERROR_MESSAGE );
            }
        }

    }

    //CLASSE EVENTO TECLADO 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTipoProduto;
    private javax.swing.JLabel lbTipoProduto1;
    private javax.swing.JTable tabela_cliente;
    private javax.swing.JTextField txtContactos;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtInicias;
    private javax.swing.JTextField txtNif;
    private javax.swing.JTextField txtNomeCliente;
    // End of variables declaration//GEN-END:variables

    private void procedimento_salvar()
    {

        try
        {
            if ( validar() )
            {
                if ( !clientesController.existeClienteNome( txtNomeCliente.getText(), BDConexao.getConexao() ) )
                {

                    if ( !clientesController.existeClienteNIF( txtNif.getText(), BDConexao.getConexao() ) )
                    {
                        this.cliente = new TbCliente();
                        setDados();
                        try
                        {
                            clientesController.salvar( cliente );
                            limpar();
                            adicionar();
                            scrolltable();
                            btnNovo.setEnabled( true );
                            JOptionPane.showMessageDialog( null, "Cliente salvo com sucesso!...", DVML.DVML_COMERCIAL, JOptionPane.INFORMATION_MESSAGE );
                            txtNomeCliente.requestFocus();
                            if ( !Objects.isNull( VendaUsuarioVisao.cmbCliente ) )
                            {
//                            VendaUsuarioVisao.cmbCliente.setModel( new DefaultComboBoxModel( clienteDao.buscaTodos() ) );
                                VendaUsuarioVisao.cmbCliente.setModel( new DefaultComboBoxModel( clientesController.getVector() ) );
                                VendaUsuarioVisao.cmbCliente.setSelectedItem( cliente.getNome() );
                                dispose();
                            }
                            if ( !Objects.isNull( RecolhaPedidosVisao.cmbCliente ) )
                            {
                                RecolhaPedidosVisao.cmbCliente.setModel( new DefaultComboBoxModel( clienteDao.buscaTodos() ) );
                                RecolhaPedidosVisao.cmbCliente.setSelectedItem( cliente.getNome() );
                                dispose();
                            }
                            if ( !Objects.isNull( VendaPOSVisao.cmbCliente ) )
                            {
                                VendaPOSVisao.cmbCliente.setModel( new DefaultComboBoxModel( clienteDao.buscaTodos() ) );
                                VendaPOSVisao.cmbCliente.setSelectedItem( cliente.getNome() );
                                dispose();
                            }
                            if ( !Objects.isNull( VendasPraticasVisao.cmbCliente ) )
                            {
                                VendasPraticasVisao.cmbCliente.setModel( new DefaultComboBoxModel( clienteDao.buscaTodos() ) );
                                VendasPraticasVisao.cmbCliente.setSelectedItem( cliente.getNome() );
                                dispose();
                            }

                        }
                        catch ( Exception e )
                        {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog( null, "Erro ao salvar o cliente", DVML.DVML_COMERCIAL, JOptionPane.ERROR_MESSAGE );
                        }
//                }
//                else
//                {
//                    JOptionPane.showMessageDialog( null, "Aviso: Nif j√° existente", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );
//                }

                    }
                    else
                    {
                        JOptionPane.showMessageDialog( null, "Este NIF j√° existe.", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog( null, "Este Cliente j√° existe.", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );
                }

            }
        }
        catch ( SQLException ex )
        {
            Logger.getLogger( ClienteVisao.class.getName() ).log( Level.SEVERE, null, ex );
        }

    }

    public boolean validar()
    {

        if ( txtNomeCliente.getText().equalsIgnoreCase( "" ) )
        {
            JOptionPane.showMessageDialog( null, "Introduza o nome do Cliente!..." );
            return false;
        }
        if ( txtEndereco.getText().equalsIgnoreCase( "" ) )
        {
            JOptionPane.showMessageDialog( null, "Introduza o endere√ßo do Cliente!..." );
            return false;
        }
        if ( txtNif.getText().equalsIgnoreCase( "" ) )
        {
            JOptionPane.showMessageDialog( null, "Introduza o NIF do Cliente!..." );
            return false;
        }
        return true;
    }

    private void procedimento_salvar_client_only()
    {

        if ( !clienteDao.existe_cliente( txtNomeCliente.getText() ) )
        {

            String nif = txtNif.getText();

            if ( !clienteDao.nif_existente( nif, conexao ) || nif.isEmpty() )
            {

                this.cliente = new TbCliente();
                setDados();
                try
                {
                    clienteDao.create( cliente );
                    limpar();
                    adicionar();
                    btnNovo.setEnabled( true );
                    JOptionPane.showMessageDialog( null, "Cliente salvo com sucesso!...", DVML.DVML_COMERCIAL, JOptionPane.INFORMATION_MESSAGE );

                    dispose();
                }
                catch ( Exception e )
                {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog( null, "Erro ao salvar o cliente", DVML.DVML_COMERCIAL, JOptionPane.ERROR_MESSAGE );
                }
            }
            else
            {
                JOptionPane.showMessageDialog( null, "Aviso: Nif j√° existente", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );
            }

        }
        else
        {
            JOptionPane.showMessageDialog( null, "Este cliente j√° existe.", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );
        }

    }

    private boolean valido()
    {

        if ( txtNomeCliente.getText().isEmpty() )
        {
            txtNomeCliente.requestFocus();
            JOptionPane.showMessageDialog( null, "Pf. digite o nome do cliente", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );
            return false;
        }
//        else if( !clienteDao.nif_existente(txtNif.getText(), conexao)){
//            JOptionPane.showMessageDialog(null,"Impossivel alterar os dados porque n√£o existe cliente cadastro com este nif.", "AVISO", JOptionPane.WARNING_MESSAGE);
//            return false;
//        }
        return true;

    }

    private void setDados()
    {

        String nomeMorada = normalizarEndereco( txtEndereco.getText() );
        String nif = normalizarNif( txtNif.getText() );

        cliente.setNome( txtNomeCliente.getText() );
        cliente.setMorada( nomeMorada );
        cliente.setNif( nif );
        this.cliente.setTelefone( txtContactos.getText() );
        this.cliente.setEmail( txtEmail.getText().trim() );

    }

    private void mostar_dados()
    {

        DefaultTableModel modelo = (DefaultTableModel) tabela_cliente.getModel();
        this.codigo = Integer.parseInt( modelo.getValueAt( tabela_cliente.getSelectedRow(), 0 ).toString() );
        this.cliente = clienteDao.findTbCliente( this.codigo );
        txtNomeCliente.setText( this.cliente.getNome() );
        txtContactos.setText( this.cliente.getTelefone() );
        txtEndereco.setText( this.cliente.getMorada() );
        txtEmail.setText( this.cliente.getEmail() );
        txtNif.setText( this.cliente.getNif() );

    }

    private void adicionar()
    {

        DefaultTableModel modelo = (DefaultTableModel) tabela_cliente.getModel();
        List<TbCliente> list = clienteDao.getAllClienteOrdenado();

        modelo.setRowCount( 0 );
        for ( int i = 0; i < list.size(); i++ )
        {

            TbCliente cliente = list.get( i );
            modelo.addRow(
                    new Object[]
                    {
                        cliente.getCodigo(),
                        cliente.getNome(),
                        cliente.getNif(),
                        cliente.getMorada(),
                        cliente.getTelefone(),
                        cliente.getEmail(),
                    }
            );
        }

    }

    private void adicionar( List<TbCliente> list )
    {

        DefaultTableModel modelo = (DefaultTableModel) tabela_cliente.getModel();

        modelo.setRowCount( 0 );
        for ( int i = 0; i < list.size(); i++ )
        {

            TbCliente cliente = list.get( i );
            modelo.addRow(
                    new Object[]
                    {
                        cliente.getCodigo(),
                        cliente.getNome(),
                        cliente.getNif(),
                        cliente.getMorada(),
                        cliente.getTelefone(),
                        cliente.getEmail(),
                    }
            );
        }

    }

    private void procedimento_alterar()
    {
        if ( valido() )
        {
            this.cliente = clienteDao.findTbCliente( this.codigo );
            if ( !clientesController.existeClienteNIFParaOutroCliente( txtNif.getText(), codigo, conexao.getConnection1() ) )
            {
                setDados();
                try
                {
                    clienteDao.edit( cliente );
                    limpar();
                    adicionar();
                    JOptionPane.showMessageDialog( null, "Dados alterados com sucesso!...", DVML.DVML_COMERCIAL, JOptionPane.INFORMATION_MESSAGE );
                }
                catch ( Exception e )
                {
                    JOptionPane.showMessageDialog( null, "Erro ao alteraer os dados", DVML.DVML_COMERCIAL, JOptionPane.ERROR_MESSAGE );
                }

            }
            else
            {
                JOptionPane.showMessageDialog( null, "J√° existe um cliente com este NIF na base de dados", DVML.DVML_COMERCIAL, JOptionPane.INFORMATION_MESSAGE );
            }

        }
    }

    private void procedimento_eliminar()
    {

        int opcao = JOptionPane.showConfirmDialog( null, "Tens a plena certeza que pretendes eliminar essa categria?" );
        if ( opcao == JOptionPane.YES_OPTION )
        {

            try
            {
                clienteDao.destroy( this.codigo );
                adicionar();
                limpar();
                JOptionPane.showMessageDialog( null, "Cliente eliminado com sucesso!...", DVML.DVML_COMERCIAL, JOptionPane.INFORMATION_MESSAGE );

            }
            catch ( Exception e )
            {

                e.printStackTrace();
                JOptionPane.showMessageDialog( null, "Erro ao eliminar este Cliente.\nPossivelmente j√° esta realcionado com algumas vendas.", DVML.DVML_COMERCIAL, JOptionPane.ERROR_MESSAGE );
            }

        }

    }

    private void novo_cliente()
    {
        habilitar_campos( true );
        limpar();
        txtNomeCliente.requestFocus();
        btnNovo.setEnabled( false );
    }

    class TratarEvento implements KeyListener
    {

        String prefixo = "";

        public void keyPressed( KeyEvent evt )
        {

            if ( evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != KeyEvent.VK_ENTER )
            {
                char key = evt.getKeyChar();
                prefixo = txtInicias.getText().trim() + key;
                adicionar( clienteDao.getClienteLIKE_Nome( prefixo ) );

            }
            else if ( evt.getKeyCode() == KeyEvent.VK_BACK_SPACE )
            {
                try
                {

                    prefixo = prefixo.toString().trim().substring( 0, prefixo.length() - 1 );
                    adicionar( clienteDao.getClienteLIKE_Nome( prefixo ) );

                }
                catch ( Exception e )
                {

                }

            }
        }

        public void keyReleased( KeyEvent evt )
        {
        }

        public void keyTyped( KeyEvent evt )
        {
        }

    }

    /**
     * Descri√ß√£o: N√£o √© permitido:
     *
     * 1¬∫ CASO: A altera√ß√£o do NIF, numa ficha de cliente j√° existente e com
     * documentos emitidos. Apenas poder√° ser averbado(alterado) o NIF em falta,
     * no caso de o campo n√£o estar preenchido, ou estar preenchido com o NIF do
     * cliente gen√©rico "999999999";
     *
     * @Solu√ß√£o:
     *
     *
     *
     * @2¬∫CASO A altera√ß√£o do nome numa ficha de cliente j√° existente e com
     * documentos emitidos, mas cujo NIF n√£o foi fornecido. Esta limita√ß√£o
     * cessa, quando na ficha do cliente for averbado o respectivo NIF (j√° se
     * pode alterar o nome);
     *
     * @Solu√ß√£o:
     *
     */
    private void procedimento_desactivar_campo()
    {

        if ( this.codigo != 0 )
        {

            boolean is_cliente_venda = clienteDao.isClienteComVendasEfectuadas( this.codigo, conexao );
            //cliente com documentos emitidos. 
            if ( is_cliente_venda )
            {
                //verificar se o cliente tem o nif em falta. Ou tem NIF gen√©rico.
                if ( clienteDao.isClienteNIfGenerico( codigo ) || clienteDao.isClienteNIFVazio( codigo ) )
                {
                    //desablita todos os campos e hablita o campo NIF.
                    proteger_campos_excepto_nif();
                    txtNif.requestFocus();
                }
                else
                {
                    proteger_campos( false );
                    txtNomeCliente.requestFocus();
                }

            }
            else
            {
                habilitar_campos( true );
            }
        }

    }

    private void proteger_campos_excepto_nif()
    {

        txtNomeCliente.setEnabled( false );
        txtEndereco.setEnabled( false );
        txtNif.setEnabled( true );
        txtContactos.setEnabled( false );
        txtEmail.setEnabled( false );
    }

    private void habilitar_campos( boolean status )
    {

        txtNomeCliente.setEnabled( status );
        txtEndereco.setEnabled( status );
        txtNif.setEnabled( status );
        txtContactos.setEnabled( status );
        txtEmail.setEnabled( status );
    }

    private void proteger_campos( boolean status )
    {

        txtNomeCliente.setEnabled( !status );
        txtEndereco.setEnabled( status );
        txtNif.setEnabled( status );
        txtContactos.setEnabled( status );
        txtEmail.setEnabled( status );

    }

    private void postInitComponents()
    {

        int tamanho = 20;
        resizeJButtonIcon( tamanho, tamanho, getClass().getResource( "/imagens/icons8_add_64px.png" ), btnNovo );
        DocumentListener listener = new DocumentListener()
        {

            @Override
            public void insertUpdate( DocumentEvent e )
            {
                actualizar_formulario();
            }

            @Override
            public void removeUpdate( DocumentEvent e )
            {
                actualizar_formulario();
            }

            @Override
            public void changedUpdate( DocumentEvent e )
            {
            }

        };
        btnSalvar.setEnabled( false );
        txtNomeCliente.getDocument().addDocumentListener( listener );
    }

    public void actualizar_formulario()
    {
        btnSalvar.setEnabled( validar_campos() );

    }

    private boolean validar_campos()
    {

        boolean nomeNaoVazio = !txtNomeCliente.getText().isEmpty();
        return nomeNaoVazio;
    }

    public void scrolltable()
    {

        tabela_cliente.scrollRectToVisible( tabela_cliente.getCellRect( tabela_cliente.getRowCount() - 1, tabela_cliente.getColumnCount(), true ) );

    }

}
