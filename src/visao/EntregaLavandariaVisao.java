/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visao;


import java.sql.Connection;
import comercial.controller.AnoEconomicoController;
import comercial.controller.ClientesController;
import comercial.controller.DocumentosController;
import comercial.controller.ItemVendasController;
import comercial.controller.PrecosController;
import comercial.controller.ProdutosController;
import comercial.controller.VendasController;
import dao.ItemVendaDao;
import dao.VendaDao;
import entity.AnoEconomico;
import entity.Documento;
import entity.TbAno;
import entity.TbCliente;
import entity.TbItemVenda;
import entity.TbPreco;
import entity.TbProduto;
import entity.TbUsuario;
import entity.TbVenda;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import javax.persistence.EntityManagerFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lista.ListaVenda1;
import lista.ListaVendaRecolhas;
import tesouraria.novo.util.AnyReport;
import util.BDConexao;
import util.DVML;
import util.JPAEntityMannagerFactoryUtil;
import util.MetodosUtil;
import static visao.RecolhaPedidosVisao.abreviacao;

/**
 *
 * @author Domingos Dala Vunge
 */
public class EntregaLavandariaVisao extends javax.swing.JFrame
{

    private static EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
    private int idUser;
    private BDConexao conexao;
    private ItemVendasController itemVendasController;
    private VendasController vendasController;
    private ProdutosController produtosController;
    private ClientesController clientesController;
    private PrecosController precosController;
    private DocumentosController documentosController;
    private AnoEconomicoController anoEconomicoController;
    private List<TbItemVenda> listarTodosByCodFact;
    private TbVenda venda;
    private Documento documento;
    private AnoEconomico anoEconomico;
    private String prox_doc;
    private int doc_prox_cod;
    private DVML.Abreviacao abreviacao;
    private String codFact;
    private List<Integer> listaID = new ArrayList<>();
    private static VendaDao vendaDao = new VendaDao( emf );
    private List<TbVenda> lista = null;
    private boolean todasPecas = false;

    public EntregaLavandariaVisao( int idUser, BDConexao conexao )
    {
        initComponents();
        setLocationRelativeTo( null );
        this.conexao = conexao;
        this.idUser = idUser;
        dcDataInicio.setDate( new Date() );
        dcDataFim.setDate( new Date() );

        itemVendasController = new ItemVendasController( conexao );
        vendasController = new VendasController( conexao );
        produtosController = new ProdutosController( conexao );
        clientesController = new ClientesController( conexao );
        precosController = new PrecosController( conexao );
        documentosController = new DocumentosController( conexao );
        anoEconomicoController = new AnoEconomicoController( conexao );

        setWindowsListener();
        
        jPanel4.setVisible( false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        lbEntregaLavandaria = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtCodRef = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObsEntrega = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        btnTelefone = new javax.swing.JButton();
        btnRecolha = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtable_reimpressao = new javax.swing.JTable();
        dcDataInicio = new com.toedter.calendar.JDateChooser();
        dcDataFim = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbNomeCliente = new javax.swing.JLabel();
        lbTelefone = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        lbMorada = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbEntregaLavandaria.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lbEntregaLavandaria.setForeground(new java.awt.Color(255, 255, 255));
        lbEntregaLavandaria.setText("EL 2023/1");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ENTREGA DE PEÇAS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbEntregaLavandaria, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addComponent(lbEntregaLavandaria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCodRef.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        txtCodRef.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtCodRefActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "cod", "id", "Peça", "qtd", "PU", "Total", "Data Entrega"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0)
        {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        jScrollPane2.setViewportView(txtObsEntrega);

        jLabel2.setText("Obs Entrega");

        btnTelefone.setText("Telefone Nº");
        btnTelefone.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnTelefoneActionPerformed(evt);
            }
        });

        btnRecolha.setText("Recolha Nº");
        btnRecolha.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRecolhaActionPerformed(evt);
            }
        });

        jtable_reimpressao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Doc"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jtable_reimpressao.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jtable_reimpressaoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtable_reimpressao);

        dcDataInicio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        dcDataFim.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/actualizar_1_32x32.png"))); // NOI18N
        jButton4.setText("Pesquisar");
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(dcDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dcDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dcDataFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnRecolha, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCodRef)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtCodRef, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRecolha, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbNomeCliente.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbNomeCliente.setText("Cliente:");

        lbTelefone.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbTelefone.setText("Telefone:");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Button-Add-icon.png"))); // NOI18N
        jButton2.setText("Entregar peça  Seleccionada");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        lbMorada.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMorada.setText("Morada:");

        jButton1.setText("Entregar Tudo");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTelefone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbMorada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbNomeCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbTelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbMorada)
                .addGap(184, 184, 184)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        // TODO add your handling code here:
        todasPecas = false;
        setIds();
        procedimentoEntergarPorPeca();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        todasPecas = true;
        procedimentoEntergarTodas();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCodRefActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtCodRefActionPerformed
    {//GEN-HEADEREND:event_txtCodRefActionPerformed
        // TODO add your handling code here:
        procdimentoBusca();
    }//GEN-LAST:event_txtCodRefActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnTelefoneActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnTelefoneActionPerformed
    {//GEN-HEADEREND:event_btnTelefoneActionPerformed
        // TODO add your handling code here:
        activarButton( btnTelefone );
    }//GEN-LAST:event_btnTelefoneActionPerformed

    private void btnRecolhaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRecolhaActionPerformed
    {//GEN-HEADEREND:event_btnRecolhaActionPerformed
        // TODO add your handling code here:
        activarButton( btnRecolha );
    }//GEN-LAST:event_btnRecolhaActionPerformed

    private void jtable_reimpressaoMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jtable_reimpressaoMouseClicked
    {//GEN-HEADEREND:event_jtable_reimpressaoMouseClicked

    }//GEN-LAST:event_jtable_reimpressaoMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
        adicionar_tabela();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void adicionar_tabela()
    {

        DefaultTableModel modelo = null;

        try
        {
            modelo = ( DefaultTableModel ) jtable_reimpressao.getModel();
            modelo.setRowCount( 0 );
            listarTodosByCodFact = itemVendasController.listarTodosByCodFactByData1(dcDataInicio.getDate(), dcDataFim.getDate(), false, DVML.DOC_FACTURA_RECIBO_FR );
//            lista = vendaDao.getAllFRVendaByBetweenDataAndArmazemAndDocumentoRecolha( dcDataInicio.getDate(), dcDataFim.getDate(), getCodigoArmazem(), DVML.DOC_FACTURA_RECIBO_FR );
            if ( listarTodosByCodFact != null )
            {
                for ( TbItemVenda object : listarTodosByCodFact )
                {

                    modelo.addRow( new Object[]
                    {
                        object.getCodigo(),
                    } );

                }

            }

        }
        catch ( Exception e )
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog( null, "Não há registro para esse armazém", DVML.DVML_COMERCIAL, JOptionPane.WARNING_MESSAGE );
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Windows".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( EntregaLavandariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( EntregaLavandariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( EntregaLavandariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( EntregaLavandariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

//        /* Create and display the form */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                new EntregaLavandariaVisao( 15, BDConexao.getInstancia() ).setVisible( true );
            }
        } );
//        imprimiRecibo( 29 );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRecolha;
    private javax.swing.JButton btnTelefone;
    private com.toedter.calendar.JDateChooser dcDataFim;
    private com.toedter.calendar.JDateChooser dcDataInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jtable_reimpressao;
    private javax.swing.JLabel lbEntregaLavandaria;
    private javax.swing.JLabel lbMorada;
    private javax.swing.JLabel lbNomeCliente;
    private javax.swing.JLabel lbTelefone;
    private javax.swing.JTextField txtCodRef;
    private javax.swing.JTextPane txtObsEntrega;
    // End of variables declaration//GEN-END:variables

    private void procdimentoBusca()
    {

        if ( !btnRecolha.isSelected() )
        {
            codFact = txtCodRef.getText();
            listarTodosByCodFact = itemVendasController.listarTodosByCodFact( codFact, false );

            System.out.println( "SIZE: " + listarTodosByCodFact.size() );
            if ( Objects.isNull( listarTodosByCodFact ) || listarTodosByCodFact.size() == 0 )
            {
                JOptionPane.showMessageDialog( null, "Não existe recolha com esta referência ou já foi entregue as peças." );
                return;
            }

            DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
            jTable1.setRowHeight( 30 );
            modelo.setRowCount( 0 );
            if ( Objects.nonNull( listarTodosByCodFact ) )
            {

                venda = ( TbVenda ) vendasController.findByCodFactX( codFact );

                TbCliente cliente = ( TbCliente ) clientesController.findByCodigo( venda.getCodigoCliente().getCodigo() );
                if ( Objects.nonNull( cliente ) )
                {
                    setDadosCliente( cliente );

                    for ( int i = 0; i < listarTodosByCodFact.size(); i++ )
                    {
                        TbItemVenda item = listarTodosByCodFact.get( i );
                        TbProduto produto = ( TbProduto ) produtosController.findById( item.getCodigoProduto().getCodigo() );
                        TbPreco preco = ( TbPreco ) precosController.findById( item.getFkPreco().getPkPreco() );

                        int id = item.getCodigo();
                        String peca = produto.getDesignacao();
                        String obs = item.getObs();
                        double qtd = item.getQuantidade();
                        int posicao = item.getPosicao();
                        BigDecimal precoUnitario = preco.getPrecoVenda();
                        BigDecimal total = preco.getPrecoVenda();
                        String dataEntrega = MetodosUtil.getDataBanco( item.getDataEntrega() );
                        peca += "-" + obs;

                        modelo.addRow( new Object[]
                        {
                            produto.getCodigo(),
                            posicao,
                            peca,
                            qtd,
                            precoUnitario,
                            total,
                            dataEntrega
                        }
                        );

                    }

                }

            }

        }

    }

    private void setDadosCliente( TbCliente cliente )
    {
        if ( Objects.nonNull( cliente ) )
        {
            lbNomeCliente.setText( cliente.getNome() );
            lbMorada.setText( cliente.getMorada() );
            lbTelefone.setText( cliente.getTelefone() );
        }
        else
        {
            lbNomeCliente.setText( "" );
            lbMorada.setText( "" );
            lbTelefone.setText( "" );
        }

    }

    private void procedimentoEntergarPorPeca()
    {

        if ( jTable1.getSelectedRow() < 0 )
        {
            JOptionPane.showMessageDialog( null, "Selecione a linha." );
            return;
        }

        int opcao = JOptionPane.showConfirmDialog( null, "Tem a certeza que pretendes entregar a peça ao cliente?" );
        if ( opcao == JOptionPane.YES_OPTION )
        {
            DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();

            int linhaSeleccionada = jTable1.getSelectedRow();
            int cod = Integer.parseInt( jTable1.getValueAt( linhaSeleccionada, 0 ).toString() );

            if ( itemVendasController.actualizarEntrega( cod ) )
            {
                modelo.removeRow( linhaSeleccionada );

                salvar_venda();
            }
        }

    }

    private void procedimentoEntergarTodas()
    {

        int opcao = JOptionPane.showConfirmDialog( null, "Tem a certeza que pretendes entregar a peça ao cliente?" );
        if ( opcao == JOptionPane.YES_OPTION )
        {
            DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
            salvar_venda();
        }

    }

    public void salvar_venda()
    {

        TbVenda nota_levantamento = new TbVenda();

        nota_levantamento.setRefCodFact( venda.getCodFact() );
        nota_levantamento.setDataVenda( new Date() );
        nota_levantamento.setDataVencimento( new Date() );
        nota_levantamento.setHora( new Date() );

        nota_levantamento.setRefDataFact( venda.getDataVenda() );
        nota_levantamento.setFkDocumento( documento );
        nota_levantamento.setCodFact( getCodDocActualizador() );

        nota_levantamento.setNomeCliente( venda.getNomeCliente() );
        nota_levantamento.setClienteNif( venda.getClienteNif() );

        nota_levantamento.setNomeCliente( venda.getNomeCliente() );
        nota_levantamento.setClienteNif( venda.getClienteNif() );

        //Total Ilíquido
        nota_levantamento.setLocalDescarga( venda.getLocalDescarga() );
        //desconto por linha
        nota_levantamento.setDescontoComercial( venda.getDescontoComercial() );
        //imposto
        //calculaTotalIVA();
        nota_levantamento.setTotalIva( venda.getTotalIva() );
        //desconto global
        nota_levantamento.setDescontoFinanceiro( venda.getDescontoFinanceiro() );
        //Total(AOA) <=> Total Líquido
        nota_levantamento.setTotalVenda( venda.getTotalVenda() );
        nota_levantamento.setTotalGeral( venda.getTotalGeral() );
        nota_levantamento.setValorEntregue( venda.getValorEntregue() );
        nota_levantamento.setTroco( venda.getTroco() );
        nota_levantamento.setTotalIncidencia( venda.getTotalIncidencia() );
        nota_levantamento.setTotalIncidenciaIsento( venda.getTotalIncidenciaIsento() );

        /*outros campos*/
        nota_levantamento.setDescontoTotal( venda.getDescontoTotal() );
        nota_levantamento.setIdBanco( venda.getIdBanco() );
        nota_levantamento.setIdArmazemFK( venda.getIdArmazemFK() );
        nota_levantamento.setCodigoUsuario( venda.getCodigoUsuario() );
        nota_levantamento.setCodigoCliente( venda.getCodigoCliente() );
        nota_levantamento.setFkAnoEconomico( venda.getFkAnoEconomico() );
        nota_levantamento.setReferencia( venda.getReferencia() );
        nota_levantamento.setNomeConsumidorFinal( venda.getNomeConsumidorFinal() );

//        venda_local.setHashCod( MetodosUtil.criptografia_hash( prox_doc ) );
        nota_levantamento.setTotalPorExtenso( venda.getTotalPorExtenso() );
        nota_levantamento.setModelo( "" );
        nota_levantamento.setNumMotor( "" );
        nota_levantamento.setNumChassi( "" );
        nota_levantamento.setKilometro( "" );

        nota_levantamento.setNomeMotorista( "" );
        nota_levantamento.setMarcaCarro( "" );
        nota_levantamento.setCorCarro( "" );
        nota_levantamento.setNDocMotorista( "" );
        nota_levantamento.setMatricula( "" );
        nota_levantamento.setCodigoUsuario( new TbUsuario( idUser ) );
        nota_levantamento.setLocalDescarga( "" );
//        nota_levantamento.setHashCod( MetodosUtil.criptografia_hash( venda_local, getGrossTotal(), conexao ) );

        nota_levantamento.setHashCod( MetodosUtil.criptografia_hash( nota_levantamento, nota_levantamento.getTotalGeral().doubleValue(), conexao ) ); // não coloquei o totalGross porque não há necessidade.

        nota_levantamento.setAssinatura( MetodosUtil.assinatura_doc( nota_levantamento.getHashCod() ) );

        nota_levantamento.setFkCambio( venda.getFkCambio() );

        /*status documento*/
        nota_levantamento.setStatusEliminado( "false" );
        nota_levantamento.setPerformance( "false" );
        nota_levantamento.setCredito( "false" );
        nota_levantamento.setObs( txtObsEntrega.getText() );

        try
        {
            System.out.println( "STATUS:factura criada com sucesso." );
            Integer last_venda = VendaDao.criarVendaComProcedu( nota_levantamento, conexao );
            //criar_itens
            salvarItemVenda( last_venda, itemVendasController.listarTodosByCodFact( codFact, false ) );
            // txtClienteNome.requestFocus();
            actualizar_abreviacao();
            JOptionPane.showMessageDialog( null, "Documento criado com sucesso!" );

            imprimiRecibo( last_venda );

            System.out.println( "STATUS:itens adicionado na factura com sucesso." );
        }
        catch ( Exception e )
        {
            System.err.println( "STATUS: falha ao actualizar a factura" );
            e.printStackTrace();
            JOptionPane.showMessageDialog( null, "Falha ao Processar a Factura", "FALHA", JOptionPane.ERROR_MESSAGE );
        }

    }

    private void actualizar_abreviacao()
    {

        switch ( getIdDocumento() )
        {

            case DVML.DOC_GUIA_TRANSPORTE_GT:
                this.abreviacao = DVML.Abreviacao.GT;
                break;
            default:
                break;
        }

    }

    private String getCodDocActualizador()
    {
        try
        {
            this.documento = ( Documento ) documentosController.findById( getIdDocumento() );
            this.anoEconomico = ( AnoEconomico ) anoEconomicoController.findById( getIdAnoEconomico() );
            // this.doc_prox_cod = documento.getCodUltimoDoc() + 1;
            this.doc_prox_cod = vendasController.getUltimaContagemByIdDocumentoAndAnoEconomico( getIdDocumento(), getIdAnoEconomico(), conexao ) + 1;
            prox_doc = documento.getAbreviacao();
            //FA Série / codigo
            prox_doc += " " + this.anoEconomico.getSerie() + "/" + this.doc_prox_cod;
            return prox_doc;
        }
        catch ( Exception e )
        {
            return "";
        }
    }

    public int getIdDocumento()
    {
        try
        {
            return DVML.DOC_ENTREGA_LAVANDARIA;
        }
        catch ( Exception e )
        {
            return 0;
        }
    }

    private int getIdAnoEconomico()
    {
        return anoEconomicoController.getLastObject().getPkAnoEconomico();
    }

    private void setIds()
    {
        int[] selectedRows = jTable1.getSelectedRows();
        for ( int i = 0; i < selectedRows.length; i++ )
        {
            int row = selectedRows[ i ];
            listaID.add( Integer.valueOf( jTable1.getValueAt( row, 0 ).toString() ) );

            System.err.println( "ID: " + Integer.valueOf( jTable1.getValueAt( row, 0 ).toString() ) );

        }

    }

    private void setAllIds()
    {
        int[] selectedRows = jTable1.getSelectedRows();
        for ( int i = 0; i < selectedRows.length; i++ )
        {
            int row = selectedRows[ i ];
            listaID.add( Integer.valueOf( jTable1.getValueAt( row, 0 ).toString() ) );

            System.err.println( "ID: " + Integer.valueOf( jTable1.getValueAt( row, 0 ).toString() ) );

        }

    }

    private boolean existe( int cod )
    {
        for ( int i = 0; i < listaID.size(); i++ )
        {
            Integer id = listaID.get( i );
            System.out.println( "COD: " + id );
            if ( id == cod )
            {
                return true;
            }
        }
        return false;

    }

    private void salvarItemVenda( int cod_venda, List<TbItemVenda> tbItemVendaList )
    {

        if ( todasPecas )
        {
            for ( TbItemVenda tbItemVenda : tbItemVendaList )
            {
                TbItemVenda linha_local = new TbItemVenda();
                linha_local.setCodigoProduto( tbItemVenda.getCodigoProduto() );
                linha_local.setCodigoVenda( new TbVenda( cod_venda ) );
                linha_local.setQuantidade( tbItemVenda.getQuantidade() );
                linha_local.setDesconto( tbItemVenda.getDesconto() );
                linha_local.setValorIva( tbItemVenda.getValorIva() );
                linha_local.setMotivoIsensao( tbItemVenda.getMotivoIsensao() );
                linha_local.setCodigoIsensao( tbItemVenda.getCodigoIsensao() );
                linha_local.setTotal( tbItemVenda.getTotal() );
                linha_local.setFkPreco( tbItemVenda.getFkPreco() );
                linha_local.setFkLugares( tbItemVenda.getFkLugares() );
                linha_local.setFkMesas( tbItemVenda.getFkMesas() );
                linha_local.setDataServico( tbItemVenda.getDataServico() );
                linha_local.setStatusEntrega( true );
                linha_local.setObs( tbItemVenda.getObs() );
                linha_local.setPosicao( tbItemVenda.getPosicao() );
                itemVendasController.salvarLavandaria( linha_local );
                itemVendasController.actualizarEntrega( tbItemVenda.getCodigo() );
            }

            DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
            modelo.setRowCount( 0 );

        }
        else
        {
            setIds();
            if ( Objects.nonNull( listaID ) )
            {

                System.err.println( "CHEGUEI 000" );
                for ( TbItemVenda tbItemVenda : tbItemVendaList )
                {
                    System.err.println( "CHEGUEI 001" );
                    System.err.println( "id produto : " + tbItemVenda.getCodigoProduto().getCodigo() );

                    if ( existe( tbItemVenda.getCodigoProduto().getCodigo() ) )
                    {
                        System.err.println( "CHEGUEI 002 - EXISTE" );
                        TbItemVenda linha_local = new TbItemVenda();
                        linha_local.setCodigoProduto( tbItemVenda.getCodigoProduto() );
                        linha_local.setCodigoVenda( new TbVenda( cod_venda ) );
                        linha_local.setQuantidade( tbItemVenda.getQuantidade() );
                        linha_local.setDesconto( tbItemVenda.getDesconto() );
                        linha_local.setValorIva( tbItemVenda.getValorIva() );
                        linha_local.setMotivoIsensao( tbItemVenda.getMotivoIsensao() );
                        linha_local.setCodigoIsensao( tbItemVenda.getCodigoIsensao() );
                        linha_local.setTotal( tbItemVenda.getTotal() );
                        linha_local.setFkPreco( tbItemVenda.getFkPreco() );
                        linha_local.setFkLugares( tbItemVenda.getFkLugares() );
                        linha_local.setFkMesas( tbItemVenda.getFkMesas() );
                        linha_local.setDataServico( tbItemVenda.getDataServico() );
                        linha_local.setStatusEntrega( true );
                        linha_local.setObs( tbItemVenda.getObs() );
                        linha_local.setPosicao( tbItemVenda.getPosicao() );
                        itemVendasController.salvarLavandaria( linha_local );
                        itemVendasController.actualizarEntrega( tbItemVenda.getCodigo() );
                        System.err.println( "Registrei a linha." );

                    }

                }

                listaID.clear();
            }
        }

    }

    private void setWindowsListener()
    {

        this.addWindowListener( new WindowAdapter()
        {
            @Override
            public void windowActivated( WindowEvent e )
            {
                String codDocActualizador = getCodDocActualizador();
                lbEntregaLavandaria.setText( codDocActualizador );
            }

        } );

    }

    private void activarButton( JButton button )
    {

        if ( button.equals( btnRecolha ) )
        {
            btnRecolha.setEnabled( false );
            btnTelefone.setEnabled( true );
        }
        else
        {
            btnRecolha.setEnabled( true );
            btnTelefone.setEnabled( false );

        }
        txtCodRef.requestFocus();

    }

    private static void imprimiRecibo( int last_venda )
    {
        HashMap hashMap = new HashMap();
        hashMap.put( "CODIGO_VENDA", last_venda );
        hashMap.put( "SOFTWARE_NAME", "Kitanda" );
//        AnyReport anyReport = new AnyReport( hashMap, "lv_entrega_cliente.jasper" );
        AnyReport anyReport = new AnyReport( hashMap, "lv_entrega_cliente.jasper", true );
    }

}
