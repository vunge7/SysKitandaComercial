/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tesouraria.visao;

import visao.*;
//import controller.ClienteEncomendaController;
import exemplos.PermitirNumeros;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import modelo.ClienteEncomendaModelo;
import util.BDConexao;

/**
 *
 * @author Domingos Dala Vunge
 */
public final class AdicionarSaldoVisao extends javax.swing.JFrame {

    /**
     * Creates new form CadastroClienteVisao
     */
    
    private ClienteEncomendaModelo clienteEncomendaModelo;
    
    private Integer codigo_cliente;
   
    private BDConexao conexao;
    private Integer idUser;
    
    public AdicionarSaldoVisao(Integer idUser) {
        
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setLabel();
        this.idUser   = idUser;
        //txtSaldoCliente.setDocument( new PermitirNumeros() );
    
        txtNomeCliente.requestFocus();
       
        conexao = new BDConexao();
        
        getClientes();
        txtIniciasNome.addKeyListener(  new TratarEventoTeclado() );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbNomeCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        lbInicaisNome = new javax.swing.JLabel();
        txtIniciasNome = new javax.swing.JTextField();
        lbClientes = new javax.swing.JLabel();
        cmbClientes = new javax.swing.JComboBox();
        lbSaldo = new javax.swing.JLabel();
        lbCredito = new javax.swing.JLabel();
        txtCredito = new javax.swing.JTextField();
        txtSaldoCliente = new javax.swing.JTextField();
        lbQuantiaAdicionar = new javax.swing.JLabel();
        txtQuantiaAdicionar = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ADICIONAR SALDO");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lbNomeCliente.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbNomeCliente.setText("Nome do Cliente");

        txtNomeCliente.setFont(new java.awt.Font("Vrinda", 0, 12)); // NOI18N

        lbInicaisNome.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbInicaisNome.setText("Inicias do nome");

        lbClientes.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbClientes.setText("Clientes");

        cmbClientes.setFont(new java.awt.Font("Vrinda", 0, 12)); // NOI18N
        cmbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientesActionPerformed(evt);
            }
        });

        lbSaldo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbSaldo.setText("Saldo Actual");

        lbCredito.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbCredito.setText("Cr√©dito");

        txtCredito.setEditable(false);
        txtCredito.setFont(new java.awt.Font("Vrinda", 0, 12)); // NOI18N

        txtSaldoCliente.setEditable(false);

        lbQuantiaAdicionar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbQuantiaAdicionar.setText("Qtd Adicionar/Remover");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbInicaisNome, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIniciasNome)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbQuantiaAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtNomeCliente))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtQuantiaAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSaldoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbCredito)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCredito, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbInicaisNome)
                    .addComponent(txtIniciasNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbClientes)
                    .addComponent(cmbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNomeCliente)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSaldo)
                    .addComponent(txtSaldoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCredito)
                    .addComponent(txtCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbQuantiaAdicionar)
                    .addComponent(txtQuantiaAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnSalvar.setBackground(new java.awt.Color(255, 255, 255));
        btnSalvar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/salvar_16x16.png"))); // NOI18N
        btnSalvar.setText("adicionar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(255, 51, 102));
        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/eliminar_16x16.png"))); // NOI18N
        btnCancelar.setText("cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
        
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        
        try{
                adicionar_saldo(Long.parseLong(  txtQuantiaAdicionar.getText()  ));
        
        }catch(SQLException e){
                e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cmbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientesActionPerformed
        // TODO add your handling code here:
//        preencher_dados(    new ClienteEncomendaController().getClienteByCodigo(   getCodigo(  String.valueOf(  cmbClientes.getSelectedItem() ) ) ) );
        
    }//GEN-LAST:event_cmbClientesActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdicionarSaldoVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdicionarSaldoVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdicionarSaldoVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdicionarSaldoVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdicionarSaldoVisao(15).setVisible(true);
            }
        });
    }
    
    
    public Integer getCodigo(String nome_cliente){
        
//        codigo_cliente = new ClienteEncomendaController().getCodigoByNome(nome_cliente);
        
        return codigo_cliente;
                
    }
    
    
    
    public void getClientes(){
            cmbClientes.setModel( new DefaultComboBoxModel(  conexao.getElementos("tb_clientes_encomenda", "nome_cliente", false)  ));
    
    }
    private void setLabel(){
        
            lbInicaisNome.setHorizontalAlignment(JLabel.RIGHT);
            lbClientes.setHorizontalAlignment(JLabel.RIGHT);
            
            lbNomeCliente.setHorizontalAlignment(JLabel.RIGHT);
            lbQuantiaAdicionar.setHorizontalAlignment(JLabel.RIGHT);
            lbCredito.setHorizontalAlignment(JLabel.RIGHT);
            lbSaldo.setHorizontalAlignment(JLabel.RIGHT);
    
    }
   
    
    
    public void adicionar_saldo( double saldo_adicionar ) throws SQLException{
    
       
           double saldo_actual = 0, diferenca = 0;
           String sql = "";
           
           ResultSet resultado = conexao.executeQuery("SELECT saldo FROM tb_clientes_encomenda WHERE idCliente = " +codigo_cliente);
           
           if(resultado.next()){
                
                saldo_actual = resultado.getLong("saldo");
                
           }
    
           System.out.println("SALDO ANTES " +saldo_actual);
           System.out.println("SALDO ADICIONAR " +saldo_adicionar);
           
           
           int opcao = JOptionPane.showConfirmDialog(null, "Tens a certeza que pretendes adicionar o saldo do cliente " + saldo_adicionar +" kz");
           
           if(opcao == JOptionPane.YES_OPTION)
           {
              
                 saldo_actual = saldo_actual + saldo_adicionar;
                 
                 System.out.println("SALDO ACTUAL " +saldo_actual);
                 
                 diferenca =  ( ( saldo_actual )  + (clienteEncomendaModelo.getCredito()) );
                  
                  
                 if( diferenca < 0 )  
                      sql = "UPDATE tb_clientes_encomenda SET saldo = 0 , credito = " + diferenca +" WHERE idCliente = " +codigo_cliente;     
                 else  sql = "UPDATE tb_clientes_encomenda SET saldo = " +diferenca   +" ,  credito = 0 WHERE idCliente = " +codigo_cliente;     
                    
         
                 if( conexao.executeUpdate( sql ) )
                 {
                             JOptionPane.showMessageDialog(null, "Saldo adicionado com sucesso!..");
                             txtQuantiaAdicionar.setText("");
//                             preencher_dados(    new ClienteEncomendaController().getClienteByCodigo(   getCodigo(  String.valueOf(  cmbClientes.getSelectedItem() ) ) ) );
                 }
                 else JOptionPane.showMessageDialog(null, "ERRO AO ADICONAR O SALDO!..", "ERROR",JOptionPane.ERROR_MESSAGE );
           
           } else {
               
                txtQuantiaAdicionar.setText("");
                JOptionPane.showMessageDialog(null, "SALDO NAO ADICIONADO!..", "AVISO", JOptionPane.WARNING_MESSAGE);
                
           }
           
         
           
         
   
    }
    
    
    
    
//    public boolean campo_vazio(boolean status_mensagem)
//    {
//                
//            if(txtNomeCliente.getText().equals(""))
//            {       
//                    if(status_mensagem)
//                    {
//                            txtNomeCliente.requestFocus();
//                            JOptionPane.showMessageDialog(null, "Pf. Digite o nome do cliente", "AVISO", JOptionPane.WARNING_MESSAGE); 
//                    }
//                    return true;
//
//            }else  if(txtTelefone.getText().equals(""))
//            {
//                   
//                    if(status_mensagem)
//                    {
//                            txtTelefone.requestFocus();
//                            JOptionPane.showMessageDialog(null, "Pf. Insira o telefone do cliente", "AVISO", JOptionPane.WARNING_MESSAGE);
//                    }
//                    return true;
//
//            }else  if(txtEndereco.getText().equals("")){
//
//                     if(status_mensagem)
//                     {
//                        txtEndereco.requestFocus();
//                        JOptionPane.showMessageDialog(null, "Pf. Insira o endereco do cliente", "AVISO", JOptionPane.WARNING_MESSAGE);
//                     }
//                    return true;
//
//            }else  if(txtSaldoCliente.getText().equals(""))
//            {
//                        if(status_mensagem)
//                        {
//                            txtSaldoCliente.requestFocus();
//                            JOptionPane.showMessageDialog(null, "Pf. Digite o saldo do cliente", "AVISO", JOptionPane.WARNING_MESSAGE);
//                        }
//                    return true;
//            }
//
//            return false;
//    }
    
    
//    public void salvar()
//    {
//       
//        if( !campo_vazio(true) )
//        {
//            
//            if(getCodigo(  txtNomeCliente.getText() ) == 0 )
//            {
//                clienteEncomendaModelo = new ClienteEncomendaModelo();
//                
//                clienteEncomendaModelo.setNome_cliente(  txtNomeCliente.getText().toUpperCase() );
//                clienteEncomendaModelo.setTelefone(txtTelefone.getText() );
//                clienteEncomendaModelo.setEndereco(txtEndereco.getText().toLowerCase() );
//                clienteEncomendaModelo.setEmail(txtEmail.getText() );
//                clienteEncomendaModelo.setSaldo(  Double.parseDouble(txtSaldoCliente.getText())  );
//                
//                if( new ClienteEncomendaController().guardar(clienteEncomendaModelo))
//                {
//                    btnSalvar.setEnabled(false);
//                    btnNovo.setEnabled(true);
//                    statusField(false);
//                    getClientes();
//                    JOptionPane.showMessageDialog(null, "Cliente adicionado com sucesso!...");
//                
//                }else  JOptionPane.showMessageDialog(null, "Erro: Ao inserir o cliente", "ERRO", JOptionPane.ERROR_MESSAGE);
//                
//            }else  JOptionPane.showMessageDialog(null, "Erro: ja existe um cliente com este nome!...", "ERRO", JOptionPane.ERROR_MESSAGE);
//        }
//        
//    
//    }
//    
    
    
    
    
    
    public void statusField(boolean status){
    
    
//              txtNomeCliente.setEnabled(status);
//              txtTelefone.setEnabled(status);
//              txtEndereco.setEnabled(status);
//              txtEmail.setEnabled(status);
//              txtSaldoCliente.setEnabled(status);
  
    }
    
    
    public void limpar(){
         
//              txtNomeCliente.setText("");
//              txtTelefone.setText("");
//              txtEndereco.setText("");
//              txtEmail.setText("");
//              txtSaldoCliente.setText("");
        
    }
    
    
    
       public void preencher_dados(ClienteEncomendaModelo clienteEncomendaModelo){
        
           
              this.clienteEncomendaModelo = clienteEncomendaModelo;
           
              txtNomeCliente.setText( clienteEncomendaModelo.getNome_cliente());
              
              txtSaldoCliente.setText(  String.valueOf(    clienteEncomendaModelo.getSaldo() ) );
              txtCredito.setText(  String.valueOf(    clienteEncomendaModelo.getCredito()) );
              
              
    
    }
    
       
       
         //----------- evento do teclado ---------------------------------------
    class TratarEventoTeclado implements KeyListener
    {
        String prefixo = "";

        public void keyPressed(KeyEvent evt)
        {

            if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != KeyEvent.VK_ENTER)
            {
                char key = evt.getKeyChar();
                prefixo = txtIniciasNome.getText().trim() + key;
                
                cmbClientes.setModel(new DefaultComboBoxModel(conexao.getElementosLike("tb_clientes_encomenda", "nome_cliente", prefixo) ) );
                
                try {
                        
                    codigo_cliente = getCodigo( String.valueOf(cmbClientes.getSelectedItem()));
//                    preencher_dados( new ClienteEncomendaController().getClienteByCodigo( codigo_cliente ) );
                    
                  
                } catch (Exception ex) {
                    //Logger.getLogger(UsuarioVisao.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        }

        public void keyReleased(KeyEvent evt)
        {}
        public void keyTyped(KeyEvent evt)
        {}
    }

       
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbClientes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbClientes;
    private javax.swing.JLabel lbCredito;
    private javax.swing.JLabel lbInicaisNome;
    private javax.swing.JLabel lbNomeCliente;
    private javax.swing.JLabel lbQuantiaAdicionar;
    private javax.swing.JLabel lbSaldo;
    private javax.swing.JTextField txtCredito;
    private javax.swing.JTextField txtIniciasNome;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtQuantiaAdicionar;
    private javax.swing.JTextField txtSaldoCliente;
    // End of variables declaration//GEN-END:variables
}
