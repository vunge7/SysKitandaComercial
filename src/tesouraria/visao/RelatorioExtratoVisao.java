/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tesouraria.visao;

//import dao.BancoDao;
//import dao.ConfirmacaoDao;
//import dao.DeclaracaDao;
import dao.DepositoBancariaDao;
import dao.EntradaDao;
import dao.EntradaTesourariaDao;
import dao.LevantamentoBancarioDao;
//import dao.PagamentoDiversosDao;
//import dao.PagamentoTransporteDao;
//import dao.PropinasDao;
import dao.SaidaDao;
import dao.TransferenciaBancariaDao;
import dao.VendaDao;
//import dao.TransferenciaDao;
//import entity.Declaracao;
import entity.DepositoBancario;
import entity.EntradaTesouraria;
import entity.LevantamentoBancario;
//import entity.PagamentoDiversos;
//import entity.PagamentoTransporte;
//import entity.Propinas;
import entity.SaidasTesouraria;
//import entity.Transferencia;
import entity.TransferenciaBancaria;
import entity.TbVenda;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lista.GeraRelatorioExtrato;
import util.Extrato;
import util.JPAEntityMannagerFactoryUtil;
import util.MetodosUtil;

/**
 *
 * @author macpro
 */
public class RelatorioExtratoVisao extends javax.swing.JFrame
{

    private EntityManagerFactory emf = JPAEntityMannagerFactoryUtil.em;
//     private BancoDao bancoDao = new BancoDao(emf);
    private EntradaTesourariaDao entradaTesourariaDao = new EntradaTesourariaDao( emf );
    private DepositoBancariaDao depositoBancariaDao = new DepositoBancariaDao( emf );
    private LevantamentoBancarioDao levantamentoBancarioDao = new LevantamentoBancarioDao( emf );
    private TransferenciaBancariaDao transferenciaBancariaDao = new TransferenciaBancariaDao( emf );
    private SaidaDao saidaTesourariaDao = new SaidaDao( emf );
    private VendaDao vendaDao = new VendaDao( emf );

    /**
     * Creates new form RelatorioExtratoVisao
     */
    public RelatorioExtratoVisao()
    {
        initComponents();
        setLocationRelativeTo( null );
        mostraCombos();
        dcDataInicio.setDate( new Date() );
        dcDataFim.setDate( new Date() );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btImprimir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        dcDataFim = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        dcDataInicio = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        cmbBanco = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Extratos de Movimentos de Contas");

        btImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/impressora1.png"))); // NOI18N
        btImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirActionPerformed(evt);
            }
        });

        jLabel6.setText("à");

        jLabel5.setText("De");

        cmbBanco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel2.setBackground(new java.awt.Color(0, 51, 153));
        jPanel2.setForeground(new java.awt.Color(0, 51, 153));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("EXTRATO DE MOVIMENTOS DE CONTAS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Banco / Caixa :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dcDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dcDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dcDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(dcDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(6, 6, 6)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Logout 32x32.png"))); // NOI18N
        jButton1.setText("Saír");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btImprimir)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean validarBanco()
    {

        if ( cmbBanco.getSelectedIndex() == 0 )
        {

            JOptionPane.showMessageDialog( rootPane, "Atenção\nSelecione o Banco!" );
            return false;
        }

        return true;
    }
    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirActionPerformed
//      if (validarBanco()){  
        metodoExemplicado();
//      }

    }//GEN-LAST:event_btImprimirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mostraCombos()
    {

//        cmbBanco.setModel(   new DefaultComboBoxModel( (Vector) bancoDao.buscaTodos() ) );
    }

    private Integer getIdBanco()
    {
        return 0;
    }

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Nimbus".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( RelatorioExtratoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( RelatorioExtratoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( RelatorioExtratoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( RelatorioExtratoVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                new RelatorioExtratoVisao().setVisible( true );
            }
        } );
    }

    public void metodoExemplicado()
    {

        List<Extrato> lista_geral = new ArrayList<>();
        Extrato extrato;
        double saldo = 0;

        //listas de buscas de todas as entradas
        List<TbVenda> lista_entradas_vendas = vendaDao.getBuscaTodasVendasEntreDatas_e_Banco( getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate() );
//        List<PagamentoDiversos> lista_entradas_pagamentos_diversos = pagamentoDiversosDao.getBuscaTodosPagamentosDiversosEntreDatas_e_Banco(getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate());
//        List<PagamentoTransporte> lista_entradas_pagamentos_transportes = pagamentoTransporteDao.getBuscaTodosPagamentosDeTransportesEntreDatas_e_Banco(getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate());
//        List<Declaracao> lista_entradas_pagamentos_declaracoes = declaracaDao.getBuscaTodosPagamentos_de_declaracoesEntreDatas_e_Banco(getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate());
//        List<Transferencia> lista_entradas_pagamentos_transferencias = transferenciaDao.getBuscaTodosPagamentos_de_transferenciaEntreDatas_e_Banco(getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate());
        List<EntradaTesouraria> lista__entradas_tesourarias = entradaTesourariaDao.getBuscaTodasEntradasTesourariaEntreDatas_e_Banco( getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate() );
        List<DepositoBancario> lista__entradas_depositos = depositoBancariaDao.getBuscaTodosDepositosBancariosEntreDatas_e_Banco( getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate() );
        List<TransferenciaBancaria> listar_entradas_transferencias_destinos = transferenciaBancariaDao.getBuscaTodasTransferenciasBancariasDestinoEntreDatas_e_Banco( getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate() );

        //listas de busca de todas as saidas
//        List<TbVenda> lista_vendas = vendaDao.getBuscaTodasVendasEntreDatas_e_Banco(getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate());
        List<SaidasTesouraria> lista__saidas_tesourarias = saidaTesourariaDao.getBuscaTodasSaidasBancariasEntreDatas_e_Banco( getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate() );
        List<LevantamentoBancario> lista__saidas_levantamentos = levantamentoBancarioDao.getBuscaTodosLevantamentosBancariosEntreDatas_e_Banco( getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate() );
        List<TransferenciaBancaria> listar__saidas_transferencias_origens = transferenciaBancariaDao.getBuscaTodasTransferenciasBancariasOrigemEntreDatas_e_Banco( getIdBanco(), dcDataInicio.getDate(), dcDataFim.getDate() );

        //busca todas as entradas
//        if (lista_entradas_vendas.get(0).getCodigo() != 0) {
//            
//             for (TbVenda listas : lista_entradas_vendas) {
//                  
//                  extrato = new Extrato();
//                  extrato.setDescricao(  "Processamento de TbVenda  "+listas.getIdBanco().getDescrisao()+" ref. ao doc nº."+listas.getCodigo() );
//                  extrato.setEntrada(  Double.parseDouble(  String.valueOf(listas.getTotalVenda() ) )  );
//                  extrato.setData( listas.getDataVenda());
//                  extrato.setSaida(0.0);
//                  extrato.setSaldo(0.0);
//                  lista_geral.add(extrato);
//            
//          }
//            
//        }
        if ( lista__entradas_tesourarias.get( 0 ).getPkEntradaTesouraria() != 0 )
        {

//          Ciclo for para entradas de caixa
            for ( EntradaTesouraria lista_entradas_tesouraria : lista__entradas_tesourarias )
            {

                extrato = new Extrato();
                extrato.setDescricao( "Entrada de Caixa  " + "ref. ao doc nº." + lista_entradas_tesouraria.getPkEntradaTesouraria() );
                extrato.setEntrada( lista_entradas_tesouraria.getValor() );
                extrato.setData( lista_entradas_tesouraria.getDataEntrada() );
                extrato.setSaida( 0.0 );
                extrato.setSaldo( 0.0 );
                lista_geral.add( extrato );

            }

        }
//        
        if ( lista__entradas_depositos.get( 0 ).getPkDeposito() != 0 )
        {

            //          Ciclo for para depositos bancarios
            for ( DepositoBancario listar__entradas_depositos : lista__entradas_depositos )
            {

                extrato = new Extrato();
//                  extrato.setDescricao(  "Depósito Bancário no  "+listar__entradas_depositos.getFkBanco().getDescrisao()+" ref. ao doc nº."+listar__entradas_depositos.getPkDeposito() );
                extrato.setEntrada( ( listar__entradas_depositos.getValor() ) );
                extrato.setData( listar__entradas_depositos.getData() );
                extrato.setSaida( 0.0 );
                extrato.setSaldo( 0.0 );
                lista_geral.add( extrato );

            }

        }

        if ( listar_entradas_transferencias_destinos.get( 0 ).getPkTransferencia() != 0 )
        {
            //          Ciclo for para transferencia bancarias
//              TransferenciaBancaria listar__transferencias_origem = new TransferenciaBancaria();
            for ( TransferenciaBancaria listar__transferencia_destino : listar_entradas_transferencias_destinos )
            {

                extrato = new Extrato();
                extrato.setDescricao( "Transferência beneficiada pelo  " + listar__transferencia_destino.getFkBancoDestino().getDescrisao() + " a partir do " + listar__transferencia_destino.getFkBancoOrigem().getDescrisao() + " ref.doc nº." + listar__transferencia_destino.getPkTransferencia() );
                extrato.setEntrada( ( listar__transferencia_destino.getValor() ) );
                extrato.setData( listar__transferencia_destino.getData() );
                extrato.setSaida( 0.0 );
                extrato.setSaldo( 0.0 );
                lista_geral.add( extrato );

            }

        }

///////////////////////////           SAIDAS    /////////////////////////////     
        if ( lista__saidas_tesourarias.get( 0 ).getPkSaidasTesouraria() != 0 )
        {

            //          Ciclo for para saidas de caixa
            for ( SaidasTesouraria lista_saidas_tesouraria : lista__saidas_tesourarias )
            {

                extrato = new Extrato();
                extrato.setDescricao( "Saída de Caixa " + "ref. ao doc nº." + lista_saidas_tesouraria.getPkSaidasTesouraria() );
                extrato.setEntrada( 0.0 );
                extrato.setData( lista_saidas_tesouraria.getDataSaida() );
                extrato.setSaida( lista_saidas_tesouraria.getValor() );
                extrato.setSaldo( 0.0 );
                lista_geral.add( extrato );

            }
//          

        }

        if ( lista__saidas_levantamentos.get( 0 ).getPkLevantamento() != 0 )
        {

            //          Ciclo for para levantamentos bancarios
            for ( LevantamentoBancario lista__saidas_levantamento : lista__saidas_levantamentos )
            {

                extrato = new Extrato();
                extrato.setDescricao( "Levantamento Bancário no  " + lista__saidas_levantamento.getFkBanco().getDescrisao() + " ref. ao doc nº." + lista__saidas_levantamento.getPkLevantamento() );
                extrato.setEntrada( 0.0 );
                extrato.setData( lista__saidas_levantamento.getData() );
                extrato.setSaida( ( lista__saidas_levantamento.getValor() ) );
                extrato.setSaldo( 0.0 );
                lista_geral.add( extrato );

            }

        }

        if ( listar__saidas_transferencias_origens.get( 0 ).getPkTransferencia() != 0 )
        {
            //          Ciclo for para transferencia bancarias
//              TransferenciaBancaria listar__transferencia_destino = new TransferenciaBancaria();
            for ( TransferenciaBancaria listar__transferencias_origem : listar__saidas_transferencias_origens )
            {

                extrato = new Extrato();
//                  extrato.setDescricao(  "Transferência do  "+listar__transferencias_origem.getFkBancoOrigem().getDescrisao()+ "para o  "+listar__transferencia_destino.getFkBancoDestino().getDescrisao() );
                extrato.setDescricao( "Transferência enviada do  " + listar__transferencias_origem.getFkBancoOrigem().getDescrisao() + " para o " + listar__transferencias_origem.getFkBancoDestino().getDescrisao() + " ref. ao doc nº." + listar__transferencias_origem.getPkTransferencia() );
                extrato.setEntrada( 0.0 );
                extrato.setData( listar__transferencias_origem.getData() );
                extrato.setSaida( ( listar__transferencias_origem.getValor() ) );
                extrato.setSaldo( 0.0 );
                lista_geral.add( extrato );

            }

        }

        lista_geral = new MetodosUtil().getListOrdenada( lista_geral );

        for ( int i = 0; i < lista_geral.size(); i++ )
        {

            extrato = lista_geral.get( i );
            //para o caso da entrada
            if ( lista_geral.get( i ).getSaida() == 0 )
            {
                saldo = saldo + extrato.getEntrada();
            }
            else
            {
                saldo = saldo - extrato.getSaida();
            }

            extrato.setSaldo( saldo );
            lista_geral.set( i, extrato );

        }

        new GeraRelatorioExtrato( lista_geral, getIdBancos(), dcDataInicio.getDate(), dcDataFim.getDate() );

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btImprimir;
    private javax.swing.JComboBox<String> cmbBanco;
    private com.toedter.calendar.JDateChooser dcDataFim;
    private com.toedter.calendar.JDateChooser dcDataInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    public String getIdBancos()
    {
        return String.valueOf( cmbBanco.getSelectedItem() );

    }

}
