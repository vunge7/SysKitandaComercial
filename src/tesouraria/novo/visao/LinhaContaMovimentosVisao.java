/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package tesouraria.novo.visao;

import entity.ContaMovimentos;
import entity.ContaOperacoes;
import entity.ContaPermissoes;
import entity.Contas;
import entity.TbUsuario;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Objects;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import kitanda.util.CfMethods;
import tesouraria.novo.controller.ContaController;
import tesouraria.novo.controller.ContaMovimentosController;
import tesouraria.novo.controller.ContaOperacaoController;
import tesouraria.novo.controller.ContaPermissoesController;
import util.BDConexao;
import util.MetodosUtil;

/**
 *
 * @author Domingos Dala Vunge
 */
public class LinhaContaMovimentosVisao extends javax.swing.JPanel
{

    /**
     * Creates new form LinhaContaVisao
     */
    private ContaMovimentos linhaContaMovimento;
    private BDConexao conexao;
    private ContaOperacaoController coc;
    private ContaController cc;
    private ContaMovimentosController cmc;
    private Color fundo;
    private ContaPermissoes contaPermissoes;
    private TbUsuario usuario;

    public LinhaContaMovimentosVisao( ContaMovimentos mov, Color fundo, ContaPermissoes contaPermissoes, TbUsuario usuario, BDConexao conexao )
    {
        initComponents();
        this.linhaContaMovimento = mov;
        this.conexao = conexao;
        coc = new ContaOperacaoController( conexao );
        cc = new ContaController( conexao );
        cmc = new ContaMovimentosController( conexao );

        this.contaPermissoes = contaPermissoes;
        this.fundo = fundo;
        this.usuario = usuario;

        lbID.setText( String.valueOf( mov.getPkContaMovimento() ) );
        lbID.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        lbData.setText( MetodosUtil.getDataBanco( mov.getDataHora() ) );
        lbData.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        lbDocumento.setText( mov.getDocumento() );
        lbDocumento.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        lbDescricao.setText( mov.getDescricao() );
        lbDescricao.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        lbSaldoInicial.setText( CfMethods.formatarComoMoeda( mov.getSaldoAnterior() ) );
        lbSaldoInicial.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        if ( mov.getTipo().equals( "Entrada" ) )
        {
            lbEntrada.setText( CfMethods.formatarComoMoeda( mov.getValorEntrada() ) );
            lbEntrada.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

            lbSaida.setText( "" );
            lbSaida.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        }
        else
        {
            lbSaida.setText( CfMethods.formatarComoMoeda( mov.getValorSaida() ) );
            lbSaida.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

            lbEntrada.setText( "" );
            lbEntrada.setFont( new Font( "Arial", Font.PLAIN, 14 ) );
        }

        lbSaldoFinal.setText( CfMethods.formatarComoMoeda( mov.getSaldoFinal() ) );
        lbSaldoFinal.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        lbOperacao.setText( getTipo() + "-" + mov.getCodOperacao() );
        lbOperacao.setFont( new Font( "Arial", Font.PLAIN, 14 ) );

        btnRemover.setText( "" );

        if ( !isAnulacao() )
        {
            if ( contaPermissoes.getAnulacao() )
            {
                btnRemover.setVisible( true );
                btnRemover.setIcon( new javax.swing.ImageIcon( getClass().getResource( "/imagens/eliminar_32x32.png" ) ) );
            }
            else
            {
                btnRemover.setVisible( false );
            }

        }
        else
        {
            btnRemover.setVisible( false );
        }

        setBackground( fundo );

    }

    public LinhaContaMovimentosVisao()
    {
        initComponents();

        setStyle( lbID, "ID" );
        setStyle( lbData, "Data" );
        setStyle( lbDocumento, "Documento" );
        setStyle( lbDescricao, "Desrição" );
        setStyle( lbSaldoInicial, "Saldo Inicial" );
        setStyle( lbEntrada, "Entrada" );
        setStyle( lbSaida, "Saida" );
        setStyle( lbSaldoFinal, "Saldo Final" );
        setStyle( lbOperacao, "Operação" );
        setStyle( btnRemover, "Anular" );

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        lbData = new javax.swing.JLabel();
        lbDescricao = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        lbSaldoInicial = new javax.swing.JLabel();
        lbSaida = new javax.swing.JLabel();
        lbEntrada = new javax.swing.JLabel();
        lbSaldoFinal = new javax.swing.JLabel();
        lbOperacao = new javax.swing.JLabel();
        btnRemover = new javax.swing.JButton();
        lbDocumento = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbData.setText("Data");
        add(lbData, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 90, 39));

        lbDescricao.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbDescricao.setText("Descricao");
        add(lbDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 320, 39));

        lbID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbID.setText("ID");
        add(lbID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 62, 39));

        lbSaldoInicial.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbSaldoInicial.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSaldoInicial.setText("Saldo Inicial");
        add(lbSaldoInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 116, 39));

        lbSaida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbSaida.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSaida.setText("Saida");
        add(lbSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(928, 0, 130, 39));

        lbEntrada.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbEntrada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbEntrada.setText("Entrada");
        add(lbEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(796, 0, 140, 39));

        lbSaldoFinal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbSaldoFinal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSaldoFinal.setText("Saldo Final");
        add(lbSaldoFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1058, 0, 120, 39));

        lbOperacao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbOperacao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbOperacao.setText("Operação");
        add(lbOperacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(1173, 0, 150, 39));

        btnRemover.setBackground(new java.awt.Color(0, 204, 204));
        btnRemover.setText("Anular");
        btnRemover.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRemoverActionPerformed(evt);
            }
        });
        add(btnRemover, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 0, 180, 40));

        lbDocumento.setText("Documento");
        add(lbDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 210, 39));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRemoverActionPerformed
    {//GEN-HEADEREND:event_btnRemoverActionPerformed
        // TODO add your handling code here:

        if ( btnRemover.getText().equals( "" ) )
        {
            int opcao = JOptionPane.showConfirmDialog( null, "Deseja relamente anular o movimento?" );

            if ( opcao == JOptionPane.YES_OPTION )
            {
                procedimentoAnularMovimento();
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel lbData;
    private javax.swing.JLabel lbDescricao;
    private javax.swing.JLabel lbDocumento;
    private javax.swing.JLabel lbEntrada;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbOperacao;
    private javax.swing.JLabel lbSaida;
    private javax.swing.JLabel lbSaldoFinal;
    private javax.swing.JLabel lbSaldoInicial;
    // End of variables declaration//GEN-END:variables
    private class AccaoMovimento implements ActionListener
    {

        // trata evento de botão
        @Override
        public void actionPerformed( ActionEvent event )
        {

        } // fim do método actionPerformed

    }

    private void setStyle( Object object, String name )
    {

        if ( object instanceof JLabel )
        {
            JLabel l = ( JLabel ) object;
            l.setText( name );
            l.setFont( new Font( "Arial", Font.BOLD, 14 ) );
            l.setForeground( new Color( 255, 255, 255 ) );
            l.setBackground( new Color( 0, 51, 102 ) );
            l.setOpaque( true );
        }
        else if ( object instanceof JButton )
        {

            JButton button = ( JButton ) object;
            button.setText( name );
            button.setFont( new Font( "Arial", Font.BOLD, 14 ) );
            button.setBackground( new Color( 0, 51, 102 ) );
            button.setOpaque( true );

        }
    }

    private void changeStyle()
    {

        lbID.setFont( new Font( "Arial", Font.BOLD, 14 ) );
//        lbID.setForeground( new Color( 255, 255, 255 ) );
        setBackground( new Color( 0, 51, 102 ) );
        updateUI();
    }

    private void procedimentoAnularMovimento()
    {

        long codOperacao = linhaContaMovimento.getCodOperacao();
        ContaOperacoes contaOperacoes = coc.getOperacao( codOperacao );

        if ( contaOperacoes.getTipo().equals( "Entrada" ) )
        {
            entrada();
        }
        else if ( contaOperacoes.getTipo().equals( "Saida" ) )
        {
            saida();
        }
        else if ( contaOperacoes.getTipo().equals( "Transferencia" ) )
        {
            List<ContaMovimentos> lista = cmc.listarTodosByCodOperacao( codOperacao );
            for ( int i = 0; i < lista.size(); i++ )
            {
                ContaMovimentos get = lista.get( i );
                if ( get.getTipo().equals( "Entrada" ) )
                {
                    entrada( get );
                }
                else if ( get.getTipo().equals( "Saida" ) )
                {
                    saida( get );
                }
            }

            NovoMenuPrincipalTesourariaVisao.listarContas();
            NovoMenuPrincipalTesourariaVisao.listarMovimentoByConta();
            NovoMenuPrincipalTesourariaVisao.mostrarSaldo();
        }

    }

    private void entrada()
    {
        Contas conta = ( Contas ) cc.findById( linhaContaMovimento.getContaId() );
        cmc.procedimentoSaidaContas( conta, "S/N", linhaContaMovimento.getValorEntrada(), "Anulação", "Anulacao", this.usuario.getCodigo(), this.usuario.getNome(), "N/A", conexao );
        NovoMenuPrincipalTesourariaVisao.listarContas();
        NovoMenuPrincipalTesourariaVisao.listarMovimentoByConta();
        NovoMenuPrincipalTesourariaVisao.mostrarSaldo();
    }

    private void entrada( ContaMovimentos movimento )
    {
        Contas conta = ( Contas ) cc.findById( movimento.getContaId() );
        cmc.procedimentoSaidaContas( conta, "S/N", movimento.getValorEntrada(), "Anulação", "Anulacao", this.usuario.getCodigo(), this.usuario.getNome(), "N/A", conexao );
    }

    private void saida()
    {
        Contas conta = ( Contas ) cc.findById( linhaContaMovimento.getContaId() );
        cmc.procedimentoEntradaContas( conta, "S/N", linhaContaMovimento.getValorSaida(), "Anulação", "Anulacao", this.usuario.getCodigo(), this.usuario.getNome(), "N/A", conexao );
        NovoMenuPrincipalTesourariaVisao.listarContas();
        NovoMenuPrincipalTesourariaVisao.listarMovimentoByConta();
        NovoMenuPrincipalTesourariaVisao.mostrarSaldo();
    }

    private void saida( ContaMovimentos movimento )
    {
        Contas conta = ( Contas ) cc.findById( movimento.getContaId() );
        cmc.procedimentoEntradaContas( conta, "S/N", movimento.getValorSaida(), "Anulação", "Anulacao", this.usuario.getCodigo(), this.usuario.getNome(), "N/A", conexao );
    }

    private boolean isAnulacao()
    {
        if ( Objects.nonNull( linhaContaMovimento ) )
        {
            long codOperacao = linhaContaMovimento.getCodOperacao();
            ContaOperacoes contaOperacoes = coc.getOperacao( codOperacao );
            return contaOperacoes.getTipo().equals( "Anulacao" );
        }

        return false;

    }

    private String getTipo()
    {
        if ( Objects.nonNull( linhaContaMovimento ) )
        {
            long codOperacao = linhaContaMovimento.getCodOperacao();
            ContaOperacoes contaOperacoes = coc.getOperacao( codOperacao );
            return contaOperacoes.getTipo().substring( 0, 3 ).toUpperCase();
        }

        return "";

    }

}
