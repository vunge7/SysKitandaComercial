/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package tesouraria.novo.visao;


import java.sql.Connection;
import entity.ContaPermissoes;
import entity.Contas;
import entity.TbUsuario;
import comercial.controller.DocumentosController;
import java.util.List;
import java.util.Objects;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tesouraria.novo.controller.ContaController;
import tesouraria.novo.controller.ContaPermissoesController;
import util.BDConexao;

/**
 *
 * @author Domingos Dala Vunge
 */
public class PermissoesVisao extends javax.swing.JFrame
{

    private TbUsuario usuario;
    private BDConexao conexao;
    private ContaController ccc;
    private ContaPermissoesController cpc;
    private DefaultListModel modelContaPorGerir = new DefaultListModel();
    private DefaultListModel modelContasGeridas = new DefaultListModel();
    private ContaPermissoes contaPermissoes;

    public PermissoesVisao( TbUsuario usuario, BDConexao conexao )
    {
        initComponents();
        setLocationRelativeTo( null );
        this.usuario = usuario;
        this.conexao = conexao;
        ccc = new ContaController( conexao );
        cpc = new ContaPermissoesController( conexao );
        jListContaPorGerir.setModel( modelContaPorGerir );
        lbUsuario.setText( usuario.getNome() );
        adicionarContasPorGerir();
        adicionarContasPermitidas();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lbUsuario = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListContaPorGerir = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PERMISSÕES DE USUÁRIOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        lbUsuario.setBackground(new java.awt.Color(0, 204, 204));
        lbUsuario.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lbUsuario.setForeground(new java.awt.Color(242, 242, 242));
        lbUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbUsuario.setText("Nome do Usuário");
        lbUsuario.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(lbUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbUsuario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setBackground(new java.awt.Color(0, 51, 102));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Acesso de Contas");
        jLabel3.setOpaque(true);

        jListContaPorGerir.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListContaPorGerir);

        jButton1.setText(">");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Contas por Gerir");

        jLabel6.setText("Contas Geridas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String []
            {
                "Cod.", "Conta", "Entrada", "Saida", "Transf.", "Vis. Extrato", "Anular Op."
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        procedimentoAdicionar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTable1MouseClicked
    {//GEN-HEADEREND:event_jTable1MouseClicked
        // TODO add your handling code here:
        procedimetoActualizar();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        // TODO add your handling code here:
        procedimentoEliminar();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Nimbus".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( PermissoesVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( PermissoesVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( PermissoesVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( PermissoesVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                PermissoesVisao dialog = new PermissoesVisao( new TbUsuario( 15 ), BDConexao.getInstancia() );
                dialog.addWindowListener( new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing( java.awt.event.WindowEvent e )
                    {
                        System.exit( 0 );
                    }
                } );
                dialog.setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jListContaPorGerir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbUsuario;
    // End of variables declaration//GEN-END:variables

    private void adicionarContasPorGerir()
    {
        List<Contas> listarTodos = ccc.listarTodos();
        if ( Objects.nonNull( listarTodos ) )
        {
            modelContaPorGerir.clear();
            for ( Contas conta : listarTodos )
            {
                modelContaPorGerir.addElement( conta.getDesignacao() );
            }
        }

    }

    private void procedimentoAdicionar()
    {
        List<String> selectedValuesList = jListContaPorGerir.getSelectedValuesList();
        if ( Objects.nonNull( selectedValuesList ) )
        {
            boolean sucesso = true;
            DocumentosController.start( conexao );
            for ( String contaDesignacao : selectedValuesList )
            {
                contaPermissoes = new ContaPermissoes();
                preparar( contaDesignacao );

                if ( !cpc.existe( usuario.getCodigo(), contaPermissoes.getCodConta() ) )
                {
                    if ( !cpc.salvar( contaPermissoes ) )
                    {
                        DocumentosController.rollback( conexao );
                        JOptionPane.showMessageDialog( null, "Falha ao adcionar as permissões.", "Falha", JOptionPane.ERROR_MESSAGE );
                        sucesso = false;
                        break;
                    }

                }

            }
            if ( sucesso )
            {
                DocumentosController.commit( conexao );
                adicionarContasPermitidas();
                JOptionPane.showMessageDialog( null, "Permissões atribuidas com sucesso." );
            }
        }

    }

    private void preparar( String contaDesignacao )
    {
        Contas conta = ccc.getContasByDesignacao( contaDesignacao );
        contaPermissoes = new ContaPermissoes();
        contaPermissoes.setCodUsuario( usuario.getCodigo() );
        contaPermissoes.setCodConta( conta.getPkContas() );
        contaPermissoes.setEntrada( true );
        contaPermissoes.setSaida( true );
        contaPermissoes.setTransferencia( true );
        contaPermissoes.setVisEntrato( true );
        contaPermissoes.setAnulacao( true );
    }

    private void adicionarContasPermitidas()
    {

        if ( Objects.nonNull( usuario ) )
        {
            DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
            jTable1.setRowHeight( 50 );
            modelo.setRowCount( 0 );
            List<ContaPermissoes> list = cpc.listarTodosByIdCodUSuario( usuario.getCodigo() );

            if ( Objects.nonNull( list ) )
            {
                for ( int i = 0; i < list.size(); i++ )
                {
                    ContaPermissoes get = list.get( i );
                    Contas conta = ( Contas ) ccc.findById( get.getCodConta() );
                    modelo.addRow( new Object[]
                    {
                        get.getPkContaPermissao(),
                        conta.getDesignacao(),
                        get.getEntrada(),
                        get.getSaida(),
                        get.getTransferencia(),
                        get.getVisEntrato(),
                        get.getAnulacao()
                    } );
                }
            }

        }

    }

    private void procedimetoActualizar()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        String valueAt = modelo.getValueAt( selectedRow, 0 ).toString();
        boolean entrada = ( Boolean ) modelo.getValueAt( selectedRow, 2 );
        boolean saida = ( Boolean ) modelo.getValueAt( selectedRow, 3 );
        boolean trnasferencia = ( Boolean ) modelo.getValueAt( selectedRow, 4 );
        boolean visExtrato = ( Boolean ) modelo.getValueAt( selectedRow, 5 );
        boolean anulacao = ( Boolean ) modelo.getValueAt( selectedRow, 6 );

        System.out.println( "ENTRADA: " + entrada );

        long id = Long.parseLong( valueAt );

        contaPermissoes = cpc.getById( id );
        contaPermissoes.setEntrada( entrada );
        contaPermissoes.setSaida( saida );
        contaPermissoes.setTransferencia( trnasferencia );
        contaPermissoes.setVisEntrato( visExtrato );
        contaPermissoes.setAnulacao( anulacao );

        DocumentosController.start( conexao );
        if ( cpc.actualizar( contaPermissoes ) )
        {
            DocumentosController.commit( conexao );
        }
        else
        {
            DocumentosController.rollback( conexao );
        }

    }

    private void procedimentoEliminar()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
        int[] selectedRows = jTable1.getSelectedRows();

        DocumentosController.start( conexao );
        for ( int i = 0; i < selectedRows.length; i++ )
        {
            int selectedRow = selectedRows[ i ];
            String valueAt = modelo.getValueAt( selectedRow, 0 ).toString();
            int id = Integer.parseInt( valueAt );
            if ( !cpc.eliminar( id ) )
            {
                DocumentosController.rollback( conexao );
                return;
            }
        }
        DocumentosController.commit( conexao );
        adicionarContasPermitidas();

    }

}
