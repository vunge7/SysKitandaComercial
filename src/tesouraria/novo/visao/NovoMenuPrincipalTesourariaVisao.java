/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tesouraria.novo.visao;


import java.sql.Connection;
import entity.ContaMovimentos;
import entity.ContaPermissoes;
import entity.Contas;
import entity.FormaPagamento;
import entity.TbUsuario;
import comercial.controller.DocumentosController;
import comercial.controller.FormaPagamentoController;
import comercial.controller.UsuariosController;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import kitanda.util.CfMethods;
import tesouraria.novo.controller.ContaController;
import tesouraria.novo.controller.ContaMovimentosController;
import tesouraria.novo.controller.ContaOperacaoController;
import tesouraria.novo.controller.ContaPermissoesController;
import tesouraria.novo.controller.TipoContaController;
import tesouraria.novo.util.AnyReport;
import util.BDConexao;
import util.MetodosUtil;
import visao.RootVisao;

/**
 *
 * @author Domingos Dala Vunge
 */
public class NovoMenuPrincipalTesourariaVisao extends javax.swing.JFrame
{

    private TipoContaController tcc;
    private static ContaMovimentosController cmc;
    private static ContaOperacaoController coc;
    private static ContaPermissoesController cpc;
    private static UsuariosController usuariosController;
    private static ContaController ccc;
    private static FormaPagamentoController fp;
    private static BDConexao conexao;
    private static int idUser;
    private boolean administrador = false;
    public static Contas contaOrigem;
    public static Contas contaDestino;
    public Color color_1 = new Color(0, 204, 204, 100 );
    public Color color_2 = new Color( 0, 204, 204, 0 );
    public static Vector<Color> degradacao = new Vector<>();
    private static ContaPermissoes contaPermissoes;

    public NovoMenuPrincipalTesourariaVisao( int idUser, boolean administrador, BDConexao conexao )
    {
        initComponents();
        setLocationRelativeTo( null );
        NovoMenuPrincipalTesourariaVisao.conexao = conexao;
        this.administrador = administrador;
        this.idUser = idUser;
        tcc = new TipoContaController( conexao );
        ccc = new ContaController( conexao );
        cmc = new ContaMovimentosController( conexao );
        coc = new ContaOperacaoController( conexao );
        cpc = new ContaPermissoesController( conexao );
        fp = new FormaPagamentoController( conexao );

        cmbTipo.setModel( new DefaultComboBoxModel<>( tcc.getVector() ) );
        cmbFormaPagamento.setModel( new DefaultComboBoxModel<>( fp.getVector() ) );
        cmbContasFacturacao.setModel( new DefaultComboBoxModel<>( ccc.getVector() ) );

        usuariosController = new UsuariosController( conexao );

        dcDataInicio.setDate( new Date() );
        dcDataFim.setDate( new Date() );
        Vector<String> vector = ccc.getVector( idUser );
        vector.add( 0, "--seleccione--" );
        cmbContaOrigem.setModel( new DefaultComboBoxModel<>( vector ) );
        cmbContaDestino.setModel( new DefaultComboBoxModel<>( ccc.getVector( idUser ) ) );
        degradacao.add( color_1 );
        degradacao.add( color_2 );
        listarContas();
        mostrarTotalSaldo();
        setWindowsListener();
        try
        {

            operacaoAdministrador();

        }
        catch ( Exception e )
        {
            e.printStackTrace();
        }
        adicionarTabelaContasFacturacao();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btnNovaConta = new javax.swing.JButton();
        btnVisualizarContaGeral = new javax.swing.JButton();
        btnContasFacturacao = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        btnCadastroUsuario = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        lbSaldoGeral = new javax.swing.JLabel();
        lbValorSaldoGeral = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        painel_card = new javax.swing.JPanel();
        painel_principal = new javax.swing.JPanel();
        painel_lista_contas = new javax.swing.JPanel();
        painel_conta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDesignacao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ckPessoal = new javax.swing.JCheckBox();
        ckProfissional = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        txtSaldoInicial = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        painel_movimentos = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lbContaMovimento = new javax.swing.JLabel();
        lbSaldo = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        painel_mov_top = new javax.swing.JPanel();
        top_left = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dcDataInicio = new com.toedter.calendar.JDateChooser();
        txtNumeroPesquisa = new javax.swing.JTextField();
        cmbContaOrigem = new javax.swing.JComboBox<>();
        dcDataFim = new com.toedter.calendar.JDateChooser();
        top_right = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        btnVisualizarExtrato = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        painel_mov_content = new javax.swing.JPanel();
        painel_mov_footer_left = new javax.swing.JPanel();
        btnEntrada = new javax.swing.JButton();
        btnSaida = new javax.swing.JButton();
        btnTransferencia = new javax.swing.JButton();
        painel_mov_footer_right = new javax.swing.JPanel();
        painel_mov_footer_right_main = new javax.swing.JPanel();
        painel_entrada = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricaoEntrada = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        txtValorEntrada = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        painel_saida = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescricaoSaida = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        txtValorSaida = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        txtBeneficiario = new javax.swing.JTextField();
        painel_transferencia = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescricaoTransferencia = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        txtValorTransferencia = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        cmbContaDestino = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        painel_conf_contas_facturacao = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabela_contas_facturacao = new javax.swing.JTable();
        cmbFormaPagamento = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        cmbContasFacturacao = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridLayout(10, 1));

        jButton2.setText("Menu Principal");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        btnNovaConta.setText("Nova Conta");
        btnNovaConta.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNovaContaActionPerformed(evt);
            }
        });
        jPanel1.add(btnNovaConta);

        btnVisualizarContaGeral.setText("Visualizar Contas");
        btnVisualizarContaGeral.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnVisualizarContaGeralActionPerformed(evt);
            }
        });
        jPanel1.add(btnVisualizarContaGeral);

        btnContasFacturacao.setText("Config. Contas de Fact.");
        btnContasFacturacao.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnContasFacturacaoActionPerformed(evt);
            }
        });
        jPanel1.add(btnContasFacturacao);
        jPanel1.add(jLabel25);

        btnCadastroUsuario.setText("Cadastro de Usuário");
        btnCadastroUsuario.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCadastroUsuarioActionPerformed(evt);
            }
        });
        jPanel1.add(btnCadastroUsuario);
        jPanel1.add(jLabel26);

        lbSaldoGeral.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbSaldoGeral.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSaldoGeral.setText("SALDO GERAL");
        jPanel1.add(lbSaldoGeral);

        lbValorSaldoGeral.setBackground(new java.awt.Color(0, 51, 102));
        lbValorSaldoGeral.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        lbValorSaldoGeral.setForeground(new java.awt.Color(255, 255, 255));
        lbValorSaldoGeral.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbValorSaldoGeral.setText("0");
        lbValorSaldoGeral.setOpaque(true);
        jPanel1.add(lbValorSaldoGeral);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/out/out_32x32.png"))); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12);

        painel_card.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        painel_card.setLayout(new java.awt.CardLayout());

        painel_lista_contas.setLayout(new java.awt.GridLayout(20, 1));

        javax.swing.GroupLayout painel_principalLayout = new javax.swing.GroupLayout(painel_principal);
        painel_principal.setLayout(painel_principalLayout);
        painel_principalLayout.setHorizontalGroup(
            painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_principalLayout.createSequentialGroup()
                .addComponent(painel_lista_contas, javax.swing.GroupLayout.PREFERRED_SIZE, 967, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1616, Short.MAX_VALUE))
        );
        painel_principalLayout.setVerticalGroup(
            painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_principalLayout.createSequentialGroup()
                .addComponent(painel_lista_contas, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1108, Short.MAX_VALUE))
        );

        painel_card.add(painel_principal, "card2");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Nova Conta");

        jLabel2.setText("Designação");

        jLabel3.setText("Tipo");

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Objectivo");

        buttonGroup1.add(ckPessoal);
        ckPessoal.setText("Pessoal");

        buttonGroup1.add(ckProfissional);
        ckProfissional.setSelected(true);
        ckProfissional.setText("Profissional");

        jLabel5.setText("Saldo Inicial");

        jButton1.setText("Criar");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Número");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ckProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ckPessoal)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                        .addGap(381, 381, 381))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDesignacao, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDesignacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckPessoal)
                    .addComponent(ckProfissional))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(1486, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout painel_contaLayout = new javax.swing.GroupLayout(painel_conta);
        painel_conta.setLayout(painel_contaLayout);
        painel_contaLayout.setHorizontalGroup(
            painel_contaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_contaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_contaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1657, Short.MAX_VALUE))
        );
        painel_contaLayout.setVerticalGroup(
            painel_contaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_contaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        painel_card.add(painel_conta, "card3");

        jPanel4.setBackground(new java.awt.Color(0, 51, 102));

        lbContaMovimento.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbContaMovimento.setForeground(new java.awt.Color(255, 255, 255));
        lbContaMovimento.setText("Conta X");

        lbSaldo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbSaldo.setForeground(new java.awt.Color(255, 255, 255));
        lbSaldo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbSaldo.setText("0.0");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Saldo:   ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lbContaMovimento, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbContaMovimento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        painel_mov_top.setLayout(new java.awt.GridLayout(1, 2));

        top_left.setLayout(new java.awt.GridLayout(2, 4));

        jLabel7.setText("Número");
        top_left.add(jLabel7);

        jLabel8.setText("Conta");
        top_left.add(jLabel8);

        dcDataInicio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dcDataInicio.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {
            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                dcDataInicioPropertyChange(evt);
            }
        });
        top_left.add(dcDataInicio);

        txtNumeroPesquisa.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtNumeroPesquisaActionPerformed(evt);
            }
        });
        top_left.add(txtNumeroPesquisa);

        cmbContaOrigem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbContaOrigem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbContaOrigem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbContaOrigemActionPerformed(evt);
            }
        });
        top_left.add(cmbContaOrigem);

        dcDataFim.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dcDataFim.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {
            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                dcDataFimPropertyChange(evt);
            }
        });
        top_left.add(dcDataFim);

        painel_mov_top.add(top_left);

        top_right.setLayout(new java.awt.GridLayout(1, 5));

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/actualizar_1_32x32_1.png"))); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton11ActionPerformed(evt);
            }
        });
        top_right.add(jButton11);

        btnVisualizarExtrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/find/seach_32x32.png"))); // NOI18N
        btnVisualizarExtrato.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnVisualizarExtratoActionPerformed(evt);
            }
        });
        top_right.add(btnVisualizarExtrato);

        painel_mov_top.add(top_right);

        painel_mov_content.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        painel_mov_content.setLayout(new java.awt.GridLayout(100, 1));
        jScrollPane5.setViewportView(painel_mov_content);

        painel_mov_footer_left.setLayout(new java.awt.GridLayout(3, 1));

        btnEntrada.setText("Entrada");
        btnEntrada.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEntradaActionPerformed(evt);
            }
        });
        painel_mov_footer_left.add(btnEntrada);

        btnSaida.setText("Saida");
        btnSaida.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaidaActionPerformed(evt);
            }
        });
        painel_mov_footer_left.add(btnSaida);

        btnTransferencia.setText("Transferência");
        btnTransferencia.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnTransferenciaActionPerformed(evt);
            }
        });
        painel_mov_footer_left.add(btnTransferencia);

        painel_mov_footer_right.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout painel_mov_footer_right_mainLayout = new javax.swing.GroupLayout(painel_mov_footer_right_main);
        painel_mov_footer_right_main.setLayout(painel_mov_footer_right_mainLayout);
        painel_mov_footer_right_mainLayout.setHorizontalGroup(
            painel_mov_footer_right_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1170, Short.MAX_VALUE)
        );
        painel_mov_footer_right_mainLayout.setVerticalGroup(
            painel_mov_footer_right_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 268, Short.MAX_VALUE)
        );

        painel_mov_footer_right.add(painel_mov_footer_right_main, "card5");

        jLabel10.setText("Entrada");

        jLabel12.setText("Descrição da entrada :");

        jScrollPane1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtDescricaoEntrada.setColumns(20);
        txtDescricaoEntrada.setRows(5);
        jScrollPane1.setViewportView(txtDescricaoEntrada);

        jLabel13.setText("Valor:");

        txtValorEntrada.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtValorEntradaActionPerformed(evt);
            }
        });

        jButton7.setText("Registrar");
        jButton7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_entradaLayout = new javax.swing.GroupLayout(painel_entrada);
        painel_entrada.setLayout(painel_entradaLayout);
        painel_entradaLayout.setHorizontalGroup(
            painel_entradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_entradaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_entradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_entradaLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(322, 322, 322)
                        .addComponent(jLabel10))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7)
                    .addComponent(txtValorEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painel_entradaLayout.setVerticalGroup(
            painel_entradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_entradaLayout.createSequentialGroup()
                .addGroup(painel_entradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painel_entradaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10))
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorEntrada)
                .addGap(24, 24, 24)
                .addComponent(jButton7)
                .addContainerGap())
        );

        painel_mov_footer_right.add(painel_entrada, "card2");

        jLabel9.setText("Saida");

        jLabel14.setText("Descrição da saida :");

        jScrollPane2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtDescricaoSaida.setColumns(20);
        txtDescricaoSaida.setRows(5);
        jScrollPane2.setViewportView(txtDescricaoSaida);

        jLabel15.setText("Valor:");

        txtValorSaida.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtValorSaidaActionPerformed(evt);
            }
        });

        jButton8.setText("Registrar");
        jButton8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel19.setText("Recebido por:");

        javax.swing.GroupLayout painel_saidaLayout = new javax.swing.GroupLayout(painel_saida);
        painel_saida.setLayout(painel_saidaLayout);
        painel_saidaLayout.setHorizontalGroup(
            painel_saidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_saidaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(painel_saidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_saidaLayout.createSequentialGroup()
                        .addGroup(painel_saidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8)
                            .addComponent(txtValorSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 831, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(16, 16, 16))
                    .addGroup(painel_saidaLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(painel_saidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(txtBeneficiario, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        painel_saidaLayout.setVerticalGroup(
            painel_saidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_saidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painel_saidaLayout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addGroup(painel_saidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_saidaLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorSaida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addGap(12, 12, 12))
                    .addGroup(painel_saidaLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBeneficiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        painel_mov_footer_right.add(painel_saida, "card3");

        painel_transferencia.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("Descrição da Transferencia :");
        painel_transferencia.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 6, 231, 30));

        jScrollPane3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtDescricaoTransferencia.setColumns(20);
        txtDescricaoTransferencia.setRows(5);
        jScrollPane3.setViewportView(txtDescricaoTransferencia);

        painel_transferencia.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 320, 70));

        jLabel17.setText("Valor:");
        painel_transferencia.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        txtValorTransferencia.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtValorTransferenciaActionPerformed(evt);
            }
        });
        painel_transferencia.add(txtValorTransferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 262, 40));

        jButton9.setText("Registrar");
        jButton9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton9ActionPerformed(evt);
            }
        });
        painel_transferencia.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, -1, -1));
        painel_transferencia.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 105, 30));

        cmbContaDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbContaDestino.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbContaDestinoActionPerformed(evt);
            }
        });
        painel_transferencia.add(cmbContaDestino, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 315, 40));

        jLabel18.setText("Número");
        painel_transferencia.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, 30));

        jLabel20.setText("Conta a Transferir");
        painel_transferencia.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 50, 150, -1));

        painel_mov_footer_right.add(painel_transferencia, "card4");

        javax.swing.GroupLayout painel_movimentosLayout = new javax.swing.GroupLayout(painel_movimentos);
        painel_movimentos.setLayout(painel_movimentosLayout);
        painel_movimentosLayout.setHorizontalGroup(
            painel_movimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_movimentosLayout.createSequentialGroup()
                .addGroup(painel_movimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_movimentosLayout.createSequentialGroup()
                        .addComponent(painel_mov_footer_left, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painel_mov_footer_right, javax.swing.GroupLayout.PREFERRED_SIZE, 1170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel_movimentosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(painel_mov_top, javax.swing.GroupLayout.PREFERRED_SIZE, 1201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel_movimentosLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painel_movimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1614, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(908, Short.MAX_VALUE))
        );
        painel_movimentosLayout.setVerticalGroup(
            painel_movimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_movimentosLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(painel_mov_top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painel_movimentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painel_mov_footer_left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painel_mov_footer_right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(1038, Short.MAX_VALUE))
        );

        painel_card.add(painel_movimentos, "card4");

        tabela_contas_facturacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Cod. Form.", "Forma de Pagamento", "Cod. Conta", "Conta Associada"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tabela_contas_facturacao.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tabela_contas_facturacaoMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tabela_contas_facturacao);

        cmbFormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel21.setText("Forma de Pagamento");

        cmbContasFacturacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel22.setText("Contas");

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("CONFIGURAÇÃO DE CONTAS PARA A FACTURACÇÃO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(1585, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jButton4.setText("Adicionar");
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Remover");
        jButton5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_conf_contas_facturacaoLayout = new javax.swing.GroupLayout(painel_conf_contas_facturacao);
        painel_conf_contas_facturacao.setLayout(painel_conf_contas_facturacaoLayout);
        painel_conf_contas_facturacaoLayout.setHorizontalGroup(
            painel_conf_contas_facturacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_conf_contas_facturacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_conf_contas_facturacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painel_conf_contas_facturacaoLayout.createSequentialGroup()
                        .addGroup(painel_conf_contas_facturacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painel_conf_contas_facturacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbContasFacturacao, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painel_conf_contas_facturacaoLayout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        painel_conf_contas_facturacaoLayout.setVerticalGroup(
            painel_conf_contas_facturacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_conf_contas_facturacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(painel_conf_contas_facturacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painel_conf_contas_facturacaoLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painel_conf_contas_facturacaoLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbContasFacturacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(painel_conf_contas_facturacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1333, Short.MAX_VALUE))
        );

        painel_card.add(painel_conf_contas_facturacao, "card5");

        jScrollPane4.setViewportView(painel_card);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovaContaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNovaContaActionPerformed
    {//GEN-HEADEREND:event_btnNovaContaActionPerformed
        // TODO add your handling code here:
        changeModal( painel_card, painel_conta );
    }//GEN-LAST:event_btnNovaContaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        // TODO add your handling code here:
        updateComponentes();
        changeModal( painel_card, painel_principal );
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        procedimentoCriarConta();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEntradaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnEntradaActionPerformed
    {//GEN-HEADEREND:event_btnEntradaActionPerformed
        // TODO add your handling code here:
        changeModal( painel_mov_footer_right, painel_entrada );
    }//GEN-LAST:event_btnEntradaActionPerformed

    private void btnSaidaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaidaActionPerformed
    {//GEN-HEADEREND:event_btnSaidaActionPerformed
        // TODO add your handling code here:
        changeModal( painel_mov_footer_right, painel_saida );
    }//GEN-LAST:event_btnSaidaActionPerformed

    private void btnTransferenciaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnTransferenciaActionPerformed
    {//GEN-HEADEREND:event_btnTransferenciaActionPerformed
        // TODO add your handling code here:
        changeModal( painel_mov_footer_right, painel_transferencia );
    }//GEN-LAST:event_btnTransferenciaActionPerformed

    private void txtValorEntradaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtValorEntradaActionPerformed
    {//GEN-HEADEREND:event_txtValorEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorEntradaActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton7ActionPerformed
    {//GEN-HEADEREND:event_jButton7ActionPerformed
        // TODO add your handling code here:

        contaOrigem = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
        procedimentoEntrada( txtDescricaoEntrada.getText(), Double.parseDouble( txtValorEntrada.getText() ), contaOrigem );

    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtValorSaidaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtValorSaidaActionPerformed
    {//GEN-HEADEREND:event_txtValorSaidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorSaidaActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton8ActionPerformed
    {//GEN-HEADEREND:event_jButton8ActionPerformed
        // TODO add your handling code here:
        contaOrigem = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
        procedimentoSaida( txtDescricaoSaida.getText(), Double.parseDouble( txtValorSaida.getText() ), contaOrigem );
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txtValorTransferenciaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtValorTransferenciaActionPerformed
    {//GEN-HEADEREND:event_txtValorTransferenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorTransferenciaActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton9ActionPerformed
    {//GEN-HEADEREND:event_jButton9ActionPerformed
        // TODO add your handling code here:
        procedimentoTransferencia();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void cmbContaDestinoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmbContaDestinoActionPerformed
    {//GEN-HEADEREND:event_cmbContaDestinoActionPerformed
        // TODO add your handling code here:
        String toString = cmbContaDestino.getSelectedItem().toString();
        contaDestino = ccc.getContasByDesignacao( toString );

        String contaOrigem = cmbContaOrigem.getSelectedItem().toString();
        NovoMenuPrincipalTesourariaVisao.contaOrigem = ccc.getContasByDesignacao( contaOrigem );

        if ( contaDestino.equals( NovoMenuPrincipalTesourariaVisao.contaOrigem ) )
        {
            JOptionPane.showMessageDialog( null, "Não podes fazer transferencia da mesma conta." );
            contaDestino = null;
        }
    }//GEN-LAST:event_cmbContaDestinoActionPerformed

    private void btnVisualizarContaGeralActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnVisualizarContaGeralActionPerformed
    {//GEN-HEADEREND:event_btnVisualizarContaGeralActionPerformed
        // TODO add your handling code here:
        HashMap hashMap = new HashMap();
        System.out.println( "CHEGUEI AQUI" );
        new AnyReport( hashMap, "lista_contas.jasper" );


    }//GEN-LAST:event_btnVisualizarContaGeralActionPerformed

    private void btnVisualizarExtratoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnVisualizarExtratoActionPerformed
    {//GEN-HEADEREND:event_btnVisualizarExtratoActionPerformed
        // TODO add your handling code here:

        HashMap hashMap = new HashMap();
        String contaDesignacao = cmbContaOrigem.getSelectedItem().toString();
        int idConta = ccc.getContasByDesignacao( contaDesignacao ).getPkContas();
        hashMap.put( "ID_CONTA", idConta );
        hashMap.put( "DATA_1", dcDataInicio.getDate() );
        hashMap.put( "DATA_2", dcDataFim.getDate() );
        new AnyReport( hashMap, "ts_extrato_conta.jasper" );
    }//GEN-LAST:event_btnVisualizarExtratoActionPerformed

    private void cmbContaOrigemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmbContaOrigemActionPerformed
    {//GEN-HEADEREND:event_cmbContaOrigemActionPerformed
        // TODO add your handling code here:

        Contas contaLocal = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
        if ( Objects.nonNull( contaLocal ) )
        {
            lbContaMovimento.setText( contaLocal.getDesignacao() );
            txtNumeroPesquisa.setText( contaLocal.getNumero() );
            listarMovimentoByConta( contaLocal );
            mostrarSaldo();
            String toString = cmbContaOrigem.getSelectedItem().toString();
            Vector<String> vector = ccc.getVector();
            vector.removeElement( toString );
            cmbContaDestino.setModel( new DefaultComboBoxModel<>( vector ) );
        }
        else
        {
            limparMovimentos();
            lbContaMovimento.setText( "" );
        }


    }//GEN-LAST:event_cmbContaOrigemActionPerformed

    private void txtNumeroPesquisaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtNumeroPesquisaActionPerformed
    {//GEN-HEADEREND:event_txtNumeroPesquisaActionPerformed
        // TODO add your handling code here:
        Contas contaLocal = ccc.getContasByNumero( txtNumeroPesquisa.getText() );
        if ( Objects.nonNull( contaLocal ) )
        {
            cmbContaOrigem.setSelectedItem( contaLocal.getDesignacao() );
            listarMovimentoByConta( contaLocal );
            mostrarSaldo();

            String toString = cmbContaOrigem.getSelectedItem().toString();
            Vector<String> vector = ccc.getVector();
            vector.removeElement( toString );
            cmbContaDestino.setModel( new DefaultComboBoxModel<>( vector ) );
        }
        else
        {
            limparMovimentos();
            cmbContaOrigem.setSelectedIndex( 0 );
        }


    }//GEN-LAST:event_txtNumeroPesquisaActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton11ActionPerformed
    {//GEN-HEADEREND:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if ( Objects.nonNull( cmbContaOrigem ) && Objects.nonNull( ccc ) )
        {
            Contas contaLocal = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
            listarMovimentoByConta( contaLocal );
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void dcDataInicioPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_dcDataInicioPropertyChange
    {//GEN-HEADEREND:event_dcDataInicioPropertyChange
        // TODO add your handling code here:
        if ( Objects.nonNull( cmbContaOrigem ) && Objects.nonNull( ccc ) )
        {
            Contas contaLocal = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
            listarMovimentoByConta( contaLocal );
        }

    }//GEN-LAST:event_dcDataInicioPropertyChange

    private void dcDataFimPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_dcDataFimPropertyChange
    {//GEN-HEADEREND:event_dcDataFimPropertyChange
        // TODO add your handling code here:

        if ( Objects.nonNull( cmbContaOrigem ) && Objects.nonNull( ccc ) )
        {
            Contas contaLocal = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
            listarMovimentoByConta( contaLocal );
        }

    }//GEN-LAST:event_dcDataFimPropertyChange

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton12ActionPerformed
    {//GEN-HEADEREND:event_jButton12ActionPerformed
        // TODO add your handling code here:
        MetodosUtil.fechar_todas_janelas();
        MetodosUtil.actualizar_status( this.idUser, "Activo" );
//        MetodosUtil.actualizar_ip_address( this.idUser, "" );
        //new LoginVisao().setVisible(true);
        new RootVisao( this.idUser, 1, administrador, BDConexao.getInstancia()).setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void btnCadastroUsuarioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCadastroUsuarioActionPerformed
    {//GEN-HEADEREND:event_btnCadastroUsuarioActionPerformed
        // TODO add your handling code here:
        new UsuarioTesourariaVisao( this, rootPaneCheckingEnabled, idUser, BDConexao.getInstancia()).setVisible(true);

    }//GEN-LAST:event_btnCadastroUsuarioActionPerformed

    private void btnContasFacturacaoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnContasFacturacaoActionPerformed
    {//GEN-HEADEREND:event_btnContasFacturacaoActionPerformed
        // TODO add your handling code here:
        changeModal( painel_card, painel_conf_contas_facturacao );
    }//GEN-LAST:event_btnContasFacturacaoActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
        // TODO add your handling code here:
        adiconarContaFacturacao();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton5ActionPerformed
    {//GEN-HEADEREND:event_jButton5ActionPerformed
        // TODO add your handling code here:
        rectirarContaFacturacao();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tabela_contas_facturacaoMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tabela_contas_facturacaoMouseClicked
    {//GEN-HEADEREND:event_tabela_contas_facturacaoMouseClicked
        // TODO add your handling code here:
        accaoTabelaContasFacturacao();
    }//GEN-LAST:event_tabela_contas_facturacaoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Windows".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( NovoMenuPrincipalTesourariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( NovoMenuPrincipalTesourariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( NovoMenuPrincipalTesourariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( NovoMenuPrincipalTesourariaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                new NovoMenuPrincipalTesourariaVisao( 15, true, BDConexao.getInstancia() ).setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btnCadastroUsuario;
    private static javax.swing.JButton btnContasFacturacao;
    private static javax.swing.JButton btnEntrada;
    private static javax.swing.JButton btnNovaConta;
    private static javax.swing.JButton btnSaida;
    private static javax.swing.JButton btnTransferencia;
    private static javax.swing.JButton btnVisualizarContaGeral;
    private static javax.swing.JButton btnVisualizarExtrato;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox ckPessoal;
    private javax.swing.JCheckBox ckProfissional;
    public static javax.swing.JComboBox<String> cmbContaDestino;
    public static javax.swing.JComboBox<String> cmbContaOrigem;
    private javax.swing.JComboBox<String> cmbContasFacturacao;
    private javax.swing.JComboBox<String> cmbFormaPagamento;
    private javax.swing.JComboBox<String> cmbTipo;
    private static com.toedter.calendar.JDateChooser dcDataFim;
    private static com.toedter.calendar.JDateChooser dcDataInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lbContaMovimento;
    public static javax.swing.JLabel lbSaldo;
    private javax.swing.JLabel lbSaldoGeral;
    private static javax.swing.JLabel lbValorSaldoGeral;
    public static javax.swing.JPanel painel_card;
    private javax.swing.JPanel painel_conf_contas_facturacao;
    private javax.swing.JPanel painel_conta;
    private javax.swing.JPanel painel_entrada;
    private static javax.swing.JPanel painel_lista_contas;
    private static javax.swing.JPanel painel_mov_content;
    private javax.swing.JPanel painel_mov_footer_left;
    private javax.swing.JPanel painel_mov_footer_right;
    private javax.swing.JPanel painel_mov_footer_right_main;
    private javax.swing.JPanel painel_mov_top;
    public static javax.swing.JPanel painel_movimentos;
    private javax.swing.JPanel painel_principal;
    private javax.swing.JPanel painel_saida;
    private javax.swing.JPanel painel_transferencia;
    private javax.swing.JTable tabela_contas_facturacao;
    private javax.swing.JPanel top_left;
    private javax.swing.JPanel top_right;
    private javax.swing.JTextField txtBeneficiario;
    private javax.swing.JTextArea txtDescricaoEntrada;
    private javax.swing.JTextArea txtDescricaoSaida;
    private javax.swing.JTextArea txtDescricaoTransferencia;
    private javax.swing.JTextField txtDesignacao;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtNumeroPesquisa;
    private javax.swing.JTextField txtSaldoInicial;
    private javax.swing.JTextField txtValorEntrada;
    private javax.swing.JTextField txtValorSaida;
    private javax.swing.JTextField txtValorTransferencia;
    // End of variables declaration//GEN-END:variables
    public static void changeModal( JPanel painelCard, JPanel painel )
    {
        painelCard.removeAll();
        painelCard.add( painel );
        painelCard.repaint();
        painelCard.revalidate();
    }

    private boolean camposValidos()
    {
        if ( txtDesignacao.getText().equals( "" ) )
        {
            JOptionPane.showMessageDialog( null, "Digite a designação da conta.", "Aviso", JOptionPane.WARNING_MESSAGE );
            txtDesignacao.requestFocus();
            return false;
        }
        if ( txtNumero.getText().equals( "" ) )
        {
            JOptionPane.showMessageDialog( null, "Digite o número da conta.", "Aviso", JOptionPane.WARNING_MESSAGE );
            txtNumero.requestFocus();
            return false;
        }

        try
        {
            Double.parseDouble( txtSaldoInicial.getText() );
        }
        catch ( NumberFormatException e )
        {
            JOptionPane.showMessageDialog( null, "O saldo deve ser número", "Aviso", JOptionPane.WARNING_MESSAGE );
            txtSaldoInicial.setText( "0" );
            txtSaldoInicial.requestFocus();
            return false;
        }

        if ( ccc.existeContaByDesignacao( txtDesignacao.getText() ) )
        {
            JOptionPane.showMessageDialog( null, "Já existe uma conta com esta designacão.", "Aviso", JOptionPane.WARNING_MESSAGE );
            return false;
        }
        if ( ccc.existeContaByNumero( txtNumero.getText() ) )
        {
            JOptionPane.showMessageDialog( null, "Já existe uma conta com esta número.", "Aviso", JOptionPane.WARNING_MESSAGE );
            return false;
        }

        return true;
    }

    private void procedimentoCriarConta()
    {
        if ( camposValidos() )
        {
            contaOrigem = new Contas();
            prepararConta();
            if ( ccc.salvar( contaOrigem ) )
            {
                TbUsuario usuario = usuariosController.getUsuarioByCodigo( idUser );
                contaOrigem = ccc.getContasByNumero( txtNumero.getText() );
                cmc.procedimentoEntradaContas( contaOrigem, "N/A",
                        new BigDecimal( txtSaldoInicial.getText() ),
                        "Saldo Inicial",
                        "Ëntrada",
                        usuario.getCodigo(),
                        usuario.getNome(),
                        "n/a",
                        conexao );

                JOptionPane.showMessageDialog( null, "Nova conta criada com sucesso!..." );
                listarContas();
                limpar();
                cmbContaOrigem.setModel( new DefaultComboBoxModel<>( ccc.getVector() ) );
                cmbContaDestino.setModel( new DefaultComboBoxModel<>( ccc.getVector() ) );
            }
            else
            {
                JOptionPane.showMessageDialog( null, "Falha ao criar a nova conta." );
            }
        }
    }

    private void prepararConta()
    {

        contaOrigem.setDesignacao( txtDesignacao.getText() );
        contaOrigem.setNumero( txtNumero.getText() );
        contaOrigem.setIban( "s/n" );
        contaOrigem.setTitular1( "s/n" );
        contaOrigem.setTitular2( "s/n" );
        contaOrigem.setObjecto( getObjecto() );
        contaOrigem.setSaldo( new BigDecimal( 0d ) );
        contaOrigem.setDataCriacao( new Date() );
        contaOrigem.setUserId( idUser );
        contaOrigem.setTipoContaId( tcc.getTipoContaByDesignacao( cmbTipo.getSelectedItem().toString() ).getPkTipoConta() );

    }

    private void limpar()
    {
        txtDesignacao.setText( "" );
        txtNumero.setText( "" );
        txtSaldoInicial.setText( "" );
    }

    private String getObjecto()
    {
        if ( ckPessoal.isSelected() )
        {
            return "Pessoal";
        }
        return "Profissional";
    }

    public static void listarContas()
    {
//        List<Contas> listarTodos = ccc.listarTodos();
        List<Contas> listarTodos = ccc.listarTodosByIdUsuario( idUser );

        if ( !Objects.isNull( listarTodos ) )
        {
            int v = 0;
            painel_lista_contas.removeAll();
            painel_lista_contas.repaint();

            painel_lista_contas.setLayout( new java.awt.GridLayout( listarTodos.size(), 1 ) );

            for ( int i = 0; i < listarTodos.size(); i++ )
            {
                Contas get = listarTodos.get( i );
                LinhaContaVisao l = new LinhaContaVisao( get, degradacao.get( v ) );
                v++;

                painel_lista_contas.add( l );
                if ( v == 2 )
                {
                    v = 0;
                }
            }

        }

        mostrarTotalSaldo();
    }

    public static void listarMovimentoByConta()
    {

        if ( Objects.nonNull( dcDataInicio ) && Objects.nonNull( dcDataFim ) && Objects.nonNull( contaOrigem ) )
        {
            jScrollPane4.updateUI();
            List<ContaMovimentos> listarTodos = cmc.listarTodosByIdConta( contaOrigem.getPkContas(), dcDataInicio.getDate(), dcDataFim.getDate() );
            contaPermissoes = cpc.getByIdUserAndIdConta( idUser, contaOrigem.getPkContas() );
//        painel_mov_content.setLayout( new java.awt.GridLayout( listarTodos.size(), 1 ) );
            if ( !Objects.isNull( listarTodos ) )
            {

                painel_mov_content.removeAll();
                painel_mov_content.repaint();
                int v = 0;
                LinhaContaMovimentosVisao cabecario = new LinhaContaMovimentosVisao();
                painel_mov_content.add( cabecario );
                TbUsuario usuario = ( TbUsuario ) usuariosController.findById( idUser );
                for ( int i = 0; i < listarTodos.size(); i++ )
                {
                    ContaMovimentos get = listarTodos.get( i );
                    LinhaContaMovimentosVisao l = new LinhaContaMovimentosVisao( get, degradacao.get( v ), contaPermissoes, usuario, conexao );
                    v++;
                    painel_mov_content.add( l );
                    if ( v == 2 )
                    {
                        v = 0;
                    }
                }

            }
            else
            {
                painel_mov_content.removeAll();
                painel_mov_content.repaint();
            }
        }

    }

    public static void listarMovimentoByConta( Contas conta )
    {

        if ( Objects.nonNull( dcDataInicio ) && Objects.nonNull( dcDataFim ) && Objects.nonNull( conta ) )
        {
            contaPermissoes = cpc.getByIdUserAndIdConta( idUser, conta.getPkContas() );
            List<ContaMovimentos> listarTodos = cmc.listarTodosByIdConta( conta.getPkContas(), dcDataInicio.getDate(), dcDataFim.getDate() );
            jScrollPane4.updateUI();
            if ( !Objects.isNull( listarTodos ) )
            {

//            painel_mov_content.setLayout( new java.awt.GridLayout( listarTodos.size(), 1 ) );
                painel_mov_content.removeAll();
                painel_mov_content.repaint();
                int v = 0;
                LinhaContaMovimentosVisao cabecario = new LinhaContaMovimentosVisao();
                painel_mov_content.add( cabecario );
                TbUsuario usuario = ( TbUsuario ) usuariosController.findById( idUser );
                for ( int i = 0; i < listarTodos.size(); i++ )
                {
                    ContaMovimentos get = listarTodos.get( i );
                    LinhaContaMovimentosVisao l = new LinhaContaMovimentosVisao( get, degradacao.get( v ), contaPermissoes, usuario, conexao );
                    v++;
                    painel_mov_content.add( l );
                    if ( v == 2 )
                    {
                        v = 0;
                    }
                }

            }
            else
            {
                limparMovimentos();
            }
        }
    }

    private void procedimentoEntrada( String descricao, double valor, Contas contaLocal )
    {
        TbUsuario usuario = usuariosController.getUsuarioByCodigo( idUser );
        if ( cmc.procedimentoEntradaContas( contaLocal, "N/A", new BigDecimal( valor ), descricao, "Entrada", usuario.getCodigo(), usuario.getNome(), "n/a", conexao ) )
        {
            long LAST_ID = coc.getLastID();

            HashMap hashMap = new HashMap();
            hashMap.put( "COD_OPERACAO", LAST_ID );
            new AnyReport( hashMap, "ts_operacao.jasper" );

            contaPermissoes = cpc.getByIdUserAndIdConta( idUser, contaOrigem.getPkContas() );
            listarContas();
            actualizarContasAndMovimentos();
            txtDescricaoEntrada.setText( "" );
            txtValorEntrada.setText( "" );

        }

    }

    public static void mostrarSaldo()
    {
        Contas contaLocal = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
        if ( Objects.nonNull( contaLocal ) )
        {
            lbSaldo.setText( CfMethods.formatarComoMoeda( contaLocal.getSaldo() ) );
        }
        else
        {
            lbSaldo.setText( CfMethods.formatarComoMoeda( 0d ) );
        }
    }

    private void procedimentoSaida( String descricao, double valor, Contas contaLocal )
    {
        TbUsuario usuario = usuariosController.getUsuarioByCodigo( idUser );
        if ( cmc.procedimentoSaidaContas( contaLocal, "N/A", new BigDecimal( valor ), descricao, "Saida", usuario.getCodigo(), usuario.getNome(), txtBeneficiario.getText(), conexao ) )
        {
            long LAST_ID = coc.getLastID();

            listarContas();
            actualizarContasAndMovimentos();

            HashMap hashMap = new HashMap();
            hashMap.put( "COD_OPERACAO", LAST_ID );
            new AnyReport( hashMap, "ts_operacao.jasper" );
            new AnyReport( hashMap, "ts_recibo.jasper" );

            txtDescricaoSaida.setText( "" );
            txtValorSaida.setText( "" );
        }

    }

    private void actualizarContasAndMovimentos()
    {
        listarContas();
        listarMovimentoByConta();
        mostrarSaldo();
        changeModal( painel_mov_footer_right, painel_mov_footer_right_main );
    }

    private void procedimentoTransferencia()
    {
        TbUsuario usuario = usuariosController.getUsuarioByCodigo( idUser );
        String descricao = txtDescricaoTransferencia.getText();
        double valor = Double.parseDouble( txtValorTransferencia.getText() );
        Contas contaSaida = ccc.getContasByDesignacao( cmbContaOrigem.getSelectedItem().toString() );
        Contas contaEntrada = ccc.getContasByDesignacao( cmbContaDestino.getSelectedItem().toString() );

        if ( cmc.procedimentoTransferencia( contaSaida, "N/A",
                contaEntrada,
                new BigDecimal( valor ),
                descricao,
                usuario.getCodigo(),
                usuario.getNome(),
                "n/a",
                conexao ) )
        {
            actualizarContasAndMovimentos();
            long LAST_ID = coc.getLastID();
            HashMap hashMap = new HashMap();
            hashMap.put( "COD_OPERACAO", LAST_ID );
            new AnyReport( hashMap, "ts_operacao.jasper" );
        }
    }

    private static void mostrarTotalSaldo()
    {
        try
        {
//            BigDecimal totalSalo = ccc.getTotalSalo();
            BigDecimal totalSalo = ccc.getTotalSaloByIdUser( idUser );
            lbValorSaldoGeral.setText( CfMethods.formatarComoMoeda( totalSalo ) );
        }
        catch ( Exception e )
        {
            lbValorSaldoGeral.setText( CfMethods.formatarComoMoeda( 0d ) );
        }

    }

    private void setWindowsListener()
    {
        this.addWindowListener( new WindowAdapter()
        {
            @Override
            public void windowActivated( WindowEvent e )
            {
                mostrarTotalSaldo();
            }
        } );

    }

    private static void limparMovimentos()
    {
        painel_mov_content.removeAll();
        painel_mov_content.repaint();
    }

    public static void actualizarPermissoes()
    {
        contaPermissoes = cpc.getByIdUserAndIdConta( idUser, contaOrigem.getPkContas() );

        Boolean entrada = contaPermissoes.getEntrada();
        Boolean saida = contaPermissoes.getSaida();
        Boolean transferencia = contaPermissoes.getTransferencia();
        Boolean visEntrato = contaPermissoes.getVisEntrato();
        if ( visEntrato )
        {
            btnVisualizarExtrato.setVisible( true );
        }
        else
        {
            btnVisualizarExtrato.setVisible( false );
        }

        if ( entrada )
        {
            btnEntrada.setVisible( true );
        }
        else
        {
            btnEntrada.setVisible( false );
        }

        if ( saida )
        {
            btnSaida.setVisible( true );
        }
        else
        {
            btnSaida.setVisible( false );
        }

        if ( transferencia )
        {
            btnTransferencia.setVisible( true );
        }
        else
        {
            btnTransferencia.setVisible( false );
        }
    }

    private void updateComponentes()
    {
        Vector<String> vector = ccc.getVector( idUser );
        cmbContaOrigem.setModel( new DefaultComboBoxModel<>( vector ) );
        cmbContaDestino.setModel( new DefaultComboBoxModel<>( ccc.getVector( idUser ) ) );
        listarContas();
        mostrarTotalSaldo();
    }

    private static void operacaoAdministrador()
    {
        TbUsuario usuario = ( TbUsuario ) usuariosController.findById( idUser );

        if ( Objects.nonNull( usuario ) )
        {
            if ( usuario.getIdTipoUsuario().getIdTipoUsuario() == 1 )
            {
                btnVisualizarContaGeral.setVisible( true );
                btnNovaConta.setVisible( true );
                btnCadastroUsuario.setVisible( true );
                btnContasFacturacao.setVisible( true );
            }
            else
            {
                btnVisualizarContaGeral.setVisible( false );
                btnNovaConta.setVisible( false );
                btnCadastroUsuario.setVisible( false );
                btnContasFacturacao.setVisible( false );
            }

        }

    }

    private void adicionarTabelaContasFacturacao()
    {
        List<FormaPagamento> listaLocal = fp.listarTodos();

        if ( Objects.nonNull( listaLocal ) )
        {
            DefaultTableModel modelo = ( DefaultTableModel ) tabela_contas_facturacao.getModel();
            modelo.setRowCount( 0 );
            for ( FormaPagamento formaPagamento : listaLocal )
            {
                int idConta = 0;
                String designacaoConta = "";

                if ( formaPagamento.getFkContaAssociada() != 0 )
                {
                    Contas conta = ( Contas ) ccc.findById( formaPagamento.getFkContaAssociada() );
                    idConta = conta.getPkContas();
                    designacaoConta = conta.getDesignacao();

                }

                modelo.addRow( new Object[]
                {
                    formaPagamento.getPkFormaPagamento(),
                    formaPagamento.getDesignacao(),
                    idConta,
                    designacaoConta

                } );

            }
        }
    }

    private void adiconarContaFacturacao()
    {

        String FormaPagamentoDesignacao = cmbFormaPagamento.getSelectedItem().toString();
        String contaDesignacao = cmbContasFacturacao.getSelectedItem().toString();

        Contas contasByDesignacao = ccc.getContasByDesignacao( contaDesignacao );
        FormaPagamento formaPagamento = fp.findByDescrisao( FormaPagamentoDesignacao );

        formaPagamento.setFkContaAssociada( contasByDesignacao.getPkContas() );

        if ( !fp.existeContaAssociada( formaPagamento ) )
        {
            fp.adicionarContaAssociada( formaPagamento );
            adicionarTabelaContasFacturacao();
        }
        else
        {
            JOptionPane.showMessageDialog( null, "Esta conta já esta associada a uma forma de pagamento." );
        }

    }

    private void rectirarContaFacturacao()
    {

        String FormaPagamentoDesignacao = cmbFormaPagamento.getSelectedItem().toString();

        FormaPagamento formaPagamento = fp.findByDescrisao( FormaPagamentoDesignacao );
        formaPagamento.setFkContaAssociada( 0 );
        fp.adicionarContaAssociada( formaPagamento );
        adicionarTabelaContasFacturacao();

    }

    private void accaoTabelaContasFacturacao()
    {
        DefaultTableModel modelo = ( DefaultTableModel ) tabela_contas_facturacao.getModel();
        int linhaSelecionada = tabela_contas_facturacao.getSelectedRow();

        String formaPagamento = modelo.getValueAt( linhaSelecionada, 1 ).toString();
        String contaFacturacao = modelo.getValueAt( linhaSelecionada, 3 ).toString();

        cmbFormaPagamento.setSelectedItem( formaPagamento );
        cmbContasFacturacao.setSelectedItem( contaFacturacao );
    }

}
